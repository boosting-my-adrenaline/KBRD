[{"/Users/skywalker/Web/KBRD/client/src/index.tsx":"1","/Users/skywalker/Web/KBRD/client/src/App.tsx":"2","/Users/skywalker/Web/KBRD/client/src/hooks/auth.hook.ts":"3","/Users/skywalker/Web/KBRD/client/src/hooks/useLocalStorage.ts":"4","/Users/skywalker/Web/KBRD/client/src/context/AuthContext.ts":"5","/Users/skywalker/Web/KBRD/client/src/utils/useDidMountEffect.ts":"6","/Users/skywalker/Web/KBRD/client/src/components/PerspectiveController.tsx":"7","/Users/skywalker/Web/KBRD/client/src/components/InitialScreen.tsx":"8","/Users/skywalker/Web/KBRD/client/src/components/Footer.tsx":"9","/Users/skywalker/Web/KBRD/client/src/components/navbar/Navbar.tsx":"10","/Users/skywalker/Web/KBRD/client/src/components/belowSupportedResolution/Below1000.tsx":"11","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.REDONE.container.tsx":"12","/Users/skywalker/Web/KBRD/client/src/hooks/useEventListener.ts":"13","/Users/skywalker/Web/KBRD/client/src/hooks/useLanguage.ts":"14","/Users/skywalker/Web/KBRD/client/src/utils/FadeText3.tsx":"15","/Users/skywalker/Web/KBRD/client/src/utils/GetWidth.tsx":"16","/Users/skywalker/Web/KBRD/client/src/components/belowSupportedResolution/BelowNavbar.tsx":"17","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.REDONE.INFO.tsx":"18","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.REDONE.BOOK.tsx":"19","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.REDONE.TAP.tsx":"20","/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/LanguageMiniature.tsx":"21","/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/NAV.links.tsx":"22","/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/NAV.logo.tsx":"23","/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/AuthMiniature.tsx":"24","/Users/skywalker/Web/KBRD/client/src/utils/FadeText.tsx":"25","/Users/skywalker/Web/KBRD/client/src/hooks/useDimensions.ts":"26","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.TAP.inside.tsx":"27","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.BOOK.inside.tsx":"28","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.INFO.inside.tsx":"29","/Users/skywalker/Web/KBRD/client/src/components/profile/PROFILE.container.tsx":"30","/Users/skywalker/Web/KBRD/client/src/components/authorization/AUTH.container.tsx":"31","/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/PhotoMiniature.tsx":"32","/Users/skywalker/Web/KBRD/client/src/utils/getRandom.tsx":"33","/Users/skywalker/Web/KBRD/client/src/components/profile/PROFILE.info.tsx":"34","/Users/skywalker/Web/KBRD/client/src/components/profile/PROFILE.stats.tsx":"35","/Users/skywalker/Web/KBRD/client/src/components/profile/PROFILE.profile.tsx":"36","/Users/skywalker/Web/KBRD/client/src/components/profile/NBA.button.tsx":"37","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/TAP.REDONE.container.tsx":"38","/Users/skywalker/Web/KBRD/client/src/components/book-redone-rus/RUS.BOOK.container.tsx":"39","/Users/skywalker/Web/KBRD/client/src/components/authorization/signup/AUTH.signup.container.tsx":"40","/Users/skywalker/Web/KBRD/client/src/components/book-redone/BOOK.container.tsx":"41","/Users/skywalker/Web/KBRD/client/src/components/authorization/login/AUTH.login.container.tsx":"42","/Users/skywalker/Web/KBRD/client/src/utils/useKeyPress.ts":"43","/Users/skywalker/Web/KBRD/client/src/hooks/http.hook.ts":"44","/Users/skywalker/Web/KBRD/client/src/components/authorization/signup/signupUtils.ts":"45","/Users/skywalker/Web/KBRD/client/src/static/letters/the1984.ts":"46","/Users/skywalker/Web/KBRD/client/src/static/letters/gonewiththewind.ts":"47","/Users/skywalker/Web/KBRD/client/src/static/letters/thegreatgatsby.ts":"48","/Users/skywalker/Web/KBRD/client/src/static/letters/robinson.ts":"49","/Users/skywalker/Web/KBRD/client/src/static/letters/thelordoftherings.ts":"50","/Users/skywalker/Web/KBRD/client/src/static/letters/lorem.ts":"51","/Users/skywalker/Web/KBRD/client/src/static/letters/tokillamockinbird.ts":"52","/Users/skywalker/Web/KBRD/client/src/static/letters/lionwitch.ts":"53","/Users/skywalker/Web/KBRD/client/src/static/letters/rus/robinsonRus.ts":"54","/Users/skywalker/Web/KBRD/client/src/static/letters/rus/don.ts":"55","/Users/skywalker/Web/KBRD/client/src/static/letters/rus/gogol.ts":"56","/Users/skywalker/Web/KBRD/client/src/static/letters/rus/karamazovbrothers.ts":"57","/Users/skywalker/Web/KBRD/client/src/static/letters/rus/karenina.ts":"58","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.main.tsx":"59","/Users/skywalker/Web/KBRD/client/src/static/letters/rus/asya.ts":"60","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.stats.tsx":"61","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.pointer.tsx":"62","/Users/skywalker/Web/KBRD/client/src/static/letters/rus/masterimargarita.ts":"63","/Users/skywalker/Web/KBRD/client/src/components/authorization/signup/AUTH.signup.tsx":"64","/Users/skywalker/Web/KBRD/client/src/static/letters/rus/oblomov.ts":"65","/Users/skywalker/Web/KBRD/client/src/components/book-redone-rus/components/RUS.BOOK.book.tsx":"66","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/strings/stringFormation.ts":"67","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/strings/strings.ts":"68","/Users/skywalker/Web/KBRD/client/src/components/book-redone-rus/components/strings/strings.ts":"69","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.failures.tsx":"70","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.book.tsx":"71","/Users/skywalker/Web/KBRD/client/src/components/authorization/login/AUTH.login.tsx":"72","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.layout.tsx":"73","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.buttons.tsx":"74","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/strings/BOOK.string.tsx":"75","/Users/skywalker/Web/KBRD/client/src/components/book-redone-rus/components/strings/RUS.BOOK.string.tsx":"76","/Users/skywalker/Web/KBRD/client/src/utils/shuffleArray.ts":"77","/Users/skywalker/Web/KBRD/client/src/components/profile/NBA.input.tsx":"78","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.stats.tsx":"79","/Users/skywalker/Web/KBRD/client/src/components/profile/NBA.checkbox.tsx":"80","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.tap.tsx":"81","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.timer.tsx":"82","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.error.widget.tsx":"83","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.accuracyCounter.tsx":"84","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/strings/BOOK.string.button.tsx":"85","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.cpm.widget.tsx":"86","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.container.tsx":"87","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/BOOK.stats.CPMcounter.tsx":"88","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.overall.widget.tsx":"89","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.accuracy.widget.tsx":"90","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/buttons/BOOK.functionalButtons.tsx":"91","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/buttons/TAP.REDONE.buttons.tsx":"92","/Users/skywalker/Web/KBRD/client/src/hooks/useDidMountEffect.ts":"93","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.level.tsx":"94","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.recorder.tsx":"95","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.upper.tsx":"96","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.element.tsx":"97","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.frame.tsx":"98","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/BOOK.pingingCircles.tsx":"99","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.electronic.meter.tsx":"100","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/BOOK.physical.meter.tsx":"101","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/buttons/BOOK.CapsLockButton.tsx":"102","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/buttons/TAP.REDONE.key.type.tsx":"103","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/stats/TAP.errors.tsx":"104","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/buttons/TAP.REDONE.key.color.tsx":"105","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/stats/TAP.overall.tsx":"106","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/buttons/BOOK.buttonVisual.tsx":"107","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/buttons/TAP.REDONE.appear.tsx":"108","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.icon.tsx":"109","/Users/skywalker/Web/KBRD/client/src/components/profile/NBA.slider.tsx":"110","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.info.tsx":"111","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.inside.tsx":"112","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/BOOK.meter.tsx":"113","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.element.tsx":"114","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/numbers/TAP.REDONE.numbers.tsx":"115","/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/NAV.link.tsx":"116","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.keyboard.tsx":"117","/Users/skywalker/Web/KBRD/client/src/utils/useKeyCode.ts":"118","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.key.tsx":"119","/Users/skywalker/Web/KBRD/client/src/components/main-redone/NEW.container.tsx":"120","/Users/skywalker/Web/KBRD/client/src/hooks/useColor.ts":"121","/Users/skywalker/Web/KBRD/client/src/hooks/colorThemes.ts":"122","/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/Pallete.tsx":"123","/Users/skywalker/Web/KBRD/client/src/hooks/useScroll.ts":"124","/Users/skywalker/Web/KBRD/client/src/hooks/useElementSize.ts":"125","/Users/skywalker/Web/KBRD/client/src/hooks/useOnClickOutside.ts":"126","/Users/skywalker/Web/KBRD/client/src/hooks/useDarkMode.ts":"127","/Users/skywalker/Web/KBRD/client/src/hooks/useUpdateEffect.ts":"128","/Users/skywalker/Web/KBRD/client/src/hooks/useMediaQuery.ts":"129","/Users/skywalker/Web/KBRD/client/src/hooks/useIsFirstRender.ts":"130"},{"size":211,"mtime":1645206186171,"results":"131","hashOfConfig":"132"},{"size":4989,"mtime":1645206190968,"results":"133","hashOfConfig":"132"},{"size":982,"mtime":1644612614530,"results":"134","hashOfConfig":"132"},{"size":2854,"mtime":1644612614530,"results":"135","hashOfConfig":"132"},{"size":410,"mtime":1644612614523,"results":"136","hashOfConfig":"132"},{"size":524,"mtime":1644612614542,"results":"137","hashOfConfig":"132"},{"size":4278,"mtime":1644612614516,"results":"138","hashOfConfig":"132"},{"size":1423,"mtime":1644776887375,"results":"139","hashOfConfig":"132"},{"size":3313,"mtime":1645206548431,"results":"140","hashOfConfig":"132"},{"size":11441,"mtime":1645206201417,"results":"141","hashOfConfig":"132"},{"size":6662,"mtime":1644612614517,"results":"142","hashOfConfig":"132"},{"size":1402,"mtime":1644767266999,"results":"143","hashOfConfig":"132"},{"size":1630,"mtime":1644612614530,"results":"144","hashOfConfig":"132"},{"size":472,"mtime":1644612614530,"results":"145","hashOfConfig":"132"},{"size":1158,"mtime":1644612614542,"results":"146","hashOfConfig":"132"},{"size":755,"mtime":1644842475567,"results":"147","hashOfConfig":"132"},{"size":1040,"mtime":1645206723310,"results":"148","hashOfConfig":"132"},{"size":5555,"mtime":1644615113321,"results":"149","hashOfConfig":"132"},{"size":12841,"mtime":1644774435472,"results":"150","hashOfConfig":"132"},{"size":7206,"mtime":1644774476729,"results":"151","hashOfConfig":"132"},{"size":2584,"mtime":1645120986597,"results":"152","hashOfConfig":"132"},{"size":707,"mtime":1644613067958,"results":"153","hashOfConfig":"132"},{"size":2547,"mtime":1644612614521,"results":"154","hashOfConfig":"132"},{"size":4372,"mtime":1645202141393,"results":"155","hashOfConfig":"132"},{"size":2652,"mtime":1644612614541,"results":"156","hashOfConfig":"132"},{"size":499,"mtime":1644612614530,"results":"157","hashOfConfig":"132"},{"size":2310,"mtime":1644697049080,"results":"158","hashOfConfig":"132"},{"size":2562,"mtime":1644768902732,"results":"159","hashOfConfig":"132"},{"size":3549,"mtime":1644612614520,"results":"160","hashOfConfig":"132"},{"size":5256,"mtime":1645181738829,"results":"161","hashOfConfig":"132"},{"size":4430,"mtime":1645181883604,"results":"162","hashOfConfig":"132"},{"size":1064,"mtime":1644612614521,"results":"163","hashOfConfig":"132"},{"size":127,"mtime":1644612614542,"results":"164","hashOfConfig":"132"},{"size":1058,"mtime":1645182350518,"results":"165","hashOfConfig":"132"},{"size":3393,"mtime":1645182192132,"results":"166","hashOfConfig":"132"},{"size":4046,"mtime":1645182157516,"results":"167","hashOfConfig":"132"},{"size":5037,"mtime":1645182340033,"results":"168","hashOfConfig":"132"},{"size":1637,"mtime":1645098660038,"results":"169","hashOfConfig":"132"},{"size":12388,"mtime":1645275656872,"results":"170","hashOfConfig":"132"},{"size":5915,"mtime":1644612614516,"results":"171","hashOfConfig":"132"},{"size":12121,"mtime":1645275646964,"results":"172","hashOfConfig":"132"},{"size":2156,"mtime":1644612614516,"results":"173","hashOfConfig":"132"},{"size":727,"mtime":1644674912576,"results":"174","hashOfConfig":"132"},{"size":1313,"mtime":1644612614530,"results":"175","hashOfConfig":"132"},{"size":2099,"mtime":1644612614516,"results":"176","hashOfConfig":"132"},{"size":6466,"mtime":1644612614535,"results":"177","hashOfConfig":"132"},{"size":5423,"mtime":1644612614533,"results":"178","hashOfConfig":"132"},{"size":10653,"mtime":1644612614535,"results":"179","hashOfConfig":"132"},{"size":9952,"mtime":1644612614534,"results":"180","hashOfConfig":"132"},{"size":6085,"mtime":1644612614535,"results":"181","hashOfConfig":"132"},{"size":4377,"mtime":1644612614534,"results":"182","hashOfConfig":"132"},{"size":6783,"mtime":1644612614535,"results":"183","hashOfConfig":"132"},{"size":5237,"mtime":1644612614534,"results":"184","hashOfConfig":"132"},{"size":14463,"mtime":1644612614535,"results":"185","hashOfConfig":"132"},{"size":14067,"mtime":1644612614534,"results":"186","hashOfConfig":"132"},{"size":12955,"mtime":1644612614534,"results":"187","hashOfConfig":"132"},{"size":11426,"mtime":1644612614534,"results":"188","hashOfConfig":"132"},{"size":13120,"mtime":1644612614534,"results":"189","hashOfConfig":"132"},{"size":10018,"mtime":1645206207260,"results":"190","hashOfConfig":"132"},{"size":9976,"mtime":1644612614534,"results":"191","hashOfConfig":"132"},{"size":4098,"mtime":1645114284503,"results":"192","hashOfConfig":"132"},{"size":1369,"mtime":1645112714041,"results":"193","hashOfConfig":"132"},{"size":14405,"mtime":1644612614534,"results":"194","hashOfConfig":"132"},{"size":6945,"mtime":1645206755383,"results":"195","hashOfConfig":"132"},{"size":16128,"mtime":1644670170248,"results":"196","hashOfConfig":"132"},{"size":1871,"mtime":1645274650752,"results":"197","hashOfConfig":"132"},{"size":3340,"mtime":1644612614519,"results":"198","hashOfConfig":"132"},{"size":1128,"mtime":1644612614519,"results":"199","hashOfConfig":"132"},{"size":1053,"mtime":1644612614517,"results":"200","hashOfConfig":"132"},{"size":1630,"mtime":1645112816083,"results":"201","hashOfConfig":"132"},{"size":2417,"mtime":1645118464220,"results":"202","hashOfConfig":"132"},{"size":4874,"mtime":1645206817867,"results":"203","hashOfConfig":"132"},{"size":2658,"mtime":1645112770315,"results":"204","hashOfConfig":"132"},{"size":2287,"mtime":1645206687419,"results":"205","hashOfConfig":"132"},{"size":5139,"mtime":1644612614519,"results":"206","hashOfConfig":"132"},{"size":5279,"mtime":1644612614517,"results":"207","hashOfConfig":"132"},{"size":331,"mtime":1644612614542,"results":"208","hashOfConfig":"132"},{"size":7957,"mtime":1645203539314,"results":"209","hashOfConfig":"132"},{"size":1819,"mtime":1645103000897,"results":"210","hashOfConfig":"132"},{"size":1748,"mtime":1644612614522,"results":"211","hashOfConfig":"132"},{"size":4355,"mtime":1645103248667,"results":"212","hashOfConfig":"132"},{"size":338,"mtime":1644612614523,"results":"213","hashOfConfig":"132"},{"size":6196,"mtime":1645116825565,"results":"214","hashOfConfig":"132"},{"size":940,"mtime":1644612614518,"results":"215","hashOfConfig":"132"},{"size":3700,"mtime":1645117858257,"results":"216","hashOfConfig":"132"},{"size":12102,"mtime":1645276120185,"results":"217","hashOfConfig":"132"},{"size":4847,"mtime":1645202003675,"results":"218","hashOfConfig":"132"},{"size":2668,"mtime":1644612614519,"results":"219","hashOfConfig":"132"},{"size":6206,"mtime":1645117247471,"results":"220","hashOfConfig":"132"},{"size":13957,"mtime":1645276171780,"results":"221","hashOfConfig":"132"},{"size":2745,"mtime":1644671053820,"results":"222","hashOfConfig":"132"},{"size":5004,"mtime":1645104756307,"results":"223","hashOfConfig":"132"},{"size":524,"mtime":1644612614530,"results":"224","hashOfConfig":"132"},{"size":2537,"mtime":1645120278044,"results":"225","hashOfConfig":"132"},{"size":772,"mtime":1644612614520,"results":"226","hashOfConfig":"132"},{"size":4384,"mtime":1644612614520,"results":"227","hashOfConfig":"132"},{"size":2006,"mtime":1644612614522,"results":"228","hashOfConfig":"132"},{"size":2956,"mtime":1644612614522,"results":"229","hashOfConfig":"132"},{"size":1341,"mtime":1644782216835,"results":"230","hashOfConfig":"132"},{"size":2340,"mtime":1645107919374,"results":"231","hashOfConfig":"132"},{"size":1539,"mtime":1644612614518,"results":"232","hashOfConfig":"132"},{"size":1015,"mtime":1645113907505,"results":"233","hashOfConfig":"132"},{"size":2833,"mtime":1645104699995,"results":"234","hashOfConfig":"132"},{"size":6631,"mtime":1645116519608,"results":"235","hashOfConfig":"132"},{"size":1720,"mtime":1645104305329,"results":"236","hashOfConfig":"132"},{"size":6490,"mtime":1645116596051,"results":"237","hashOfConfig":"132"},{"size":3908,"mtime":1645117758087,"results":"238","hashOfConfig":"132"},{"size":6087,"mtime":1645274149365,"results":"239","hashOfConfig":"132"},{"size":5227,"mtime":1644615064817,"results":"240","hashOfConfig":"132"},{"size":2455,"mtime":1645104186980,"results":"241","hashOfConfig":"132"},{"size":7086,"mtime":1645202280787,"results":"242","hashOfConfig":"132"},{"size":6203,"mtime":1645103130750,"results":"243","hashOfConfig":"132"},{"size":1735,"mtime":1644612614518,"results":"244","hashOfConfig":"132"},{"size":1543,"mtime":1645120884975,"results":"245","hashOfConfig":"132"},{"size":2872,"mtime":1645025639897,"results":"246","hashOfConfig":"132"},{"size":1292,"mtime":1644671090571,"results":"247","hashOfConfig":"132"},{"size":11348,"mtime":1645275171920,"results":"248","hashOfConfig":"132"},{"size":898,"mtime":1645024365943,"results":"249","hashOfConfig":"132"},{"size":5218,"mtime":1645113491600,"results":"250","hashOfConfig":"132"},{"size":3214,"mtime":1645275145518,"results":"251","hashOfConfig":"132"},{"size":3479,"mtime":1645101512369,"results":"252","hashOfConfig":"132"},{"size":44303,"mtime":1645101767581,"results":"253","hashOfConfig":"132"},{"size":2781,"mtime":1645032640043,"results":"254","hashOfConfig":"132"},{"size":584,"mtime":1645037195348,"results":"255","hashOfConfig":"132"},{"size":1183,"mtime":1644612614530,"results":"256","hashOfConfig":"132"},{"size":570,"mtime":1644612614530,"results":"257","hashOfConfig":"132"},{"size":918,"mtime":1645211193339,"results":"258","hashOfConfig":"132"},{"size":403,"mtime":1644612614531,"results":"259","hashOfConfig":"132"},{"size":873,"mtime":1644612614530,"results":"260","hashOfConfig":"132"},{"size":238,"mtime":1644612614530,"results":"261","hashOfConfig":"132"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},"1jyz1q4",{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"264"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"264"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"264"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"284"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"264"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"264"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"264"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"264"},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"264"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"264"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"264"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"264"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"264"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"264"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"264"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"264"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"264"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"264"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"416"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"264"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"392"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"264"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"416"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"264"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"264"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"392"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"264"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"264"},{"filePath":"456","messages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"264"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"264"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"264"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"264"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"264"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"264"},{"filePath":"489","messages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"264"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"264"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"264"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"264"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"264"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"264"},{"filePath":"514","messages":"515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"264"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"264"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"264"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542","usedDeprecatedRules":"264"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"307"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550"},{"filePath":"551","messages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"264"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"565","messages":"566","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"567","messages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"575","messages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},"/Users/skywalker/Web/KBRD/client/src/index.tsx",[],["579","580"],"/Users/skywalker/Web/KBRD/client/src/App.tsx",["581","582","583","584","585","586","587","588","589","590","591"],"import React, { useState, useEffect } from 'react'\n\nimport { Navbar } from './components/navbar/Navbar'\nimport { Width } from './utils/GetWidth'\nimport { Background } from './components/Background'\nimport { InitialScreen } from './components/InitialScreen'\n// import { LoadingScreen } from './components/loading/LoadingScreen'\nimport { PerspectiveController } from './components/PerspectiveController'\nimport { Below1000 } from './components/belowSupportedResolution/Below1000'\n// import { NotFound } from './components/NotFound'\nimport { Footer } from './components/Footer'\nimport { useAuth } from './hooks/auth.hook'\nimport { AuthContext } from './context/AuthContext'\nimport { MAINREDONEcontainer } from './components/main-redone/MAIN.REDONE.container'\nimport { useDidMountEffect } from './utils/useDidMountEffect'\nimport { Test } from './components/Test'\nimport useLocalStorage from './hooks/useLocalStorage'\nimport { NEWContainer } from './components/main-redone/NEW.container'\nimport { motion } from 'framer-motion'\n\nexport enum MainState {\n  MAIN = 'MAIN',\n  BOOK = 'BOOK',\n  TAP = 'TAP',\n  INFO = 'INFO',\n}\n\nexport const App: React.FC = () => {\n  const [initialScreen, setInitialScreen] = useState(false)\n\n  useEffect(() => {\n    setTimeout(() => setInitialScreen(false), 1200)\n  }, [])\n\n  const [perspective, setPerspective] = useState<[number, number, boolean]>([\n    0,\n    100,\n    true,\n  ])\n\n  const handleSetPerspective = (\n    perspective: number,\n    margin: number,\n    is1000plus: boolean\n  ) => {\n    setPerspective([perspective, margin, is1000plus])\n  }\n\n  useDidMountEffect(() => {\n    let before = mainState\n\n    return () => setMainState(before)\n  }, [perspective[2]])\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      if (e.key === ' ') {\n        e.preventDefault()\n      }\n    })\n\n    return () =>\n      window.removeEventListener('keydown', (e) => {\n        if (e.key === ' ') {\n          e.preventDefault()\n        }\n      })\n  }, [])\n\n  const { token, login, logout, userId, email } = useAuth()\n  const isAuthenticated = !!token\n\n  const [mainState, setMainState] = useState(MainState.MAIN)\n\n  // useDidMountEffect(() => {\n  //   if (mainState === MainState.MAIN) {\n  //     navigate(`/`)\n  //   } else {\n  //     navigate(`/${mainState.toLowerCase()}`)\n  //   }\n  // }, [mainState])\n\n  const [authOpen, setAuthOpen] = useState(false)\n\n  const [trainingLanguage, setTrainingLanguage] = useLocalStorage(\n    `training-lang`,\n    true\n  )\n\n  const toggleTrainingLanguage = () => {\n    setTrainingLanguage((prev) => !prev)\n  }\n\n  const [BOOK, setBOOK] = useLocalStorage(`mainmainmain`, true)\n\n  const [navHeight, setNavHeight] = useState(0)\n\n  return (\n    // <AuthContext.Provider\n    //   value={{ token, login, logout, userId, isAuthenticated, email }}\n    // >\n    <div className={`  flex items-center justify-center`}>\n      <InitialScreen show={initialScreen} />\n      <PerspectiveController setPerspective={handleSetPerspective} />\n\n      {perspective[2] ? null : <Below1000 />}\n\n      {perspective[2] ? (\n        <div\n          style={{\n            opacity: initialScreen ? 0 : 1,\n            transition: '1.5s ease',\n          }}\n        >\n          <Navbar\n            mainState={mainState}\n            setMainState={setMainState}\n            authOpen={authOpen}\n            setAuthOpen={setAuthOpen}\n            trainingLanguage={trainingLanguage}\n            toggleTrainingLanguage={toggleTrainingLanguage}\n            BOOK={BOOK}\n            setBOOK={setBOOK}\n            setNavHeight={setNavHeight}\n          />\n          <Footer mainState={mainState} />\n          <div\n            className={`fixed inset-0 z-[2023]  bg-gray-400 blur-[5px] ${\n              authOpen ? 'block cursor-pointer opacity-50' : 'hidden opacity-0'\n            } duration-400 transition ease-in-out `}\n            style={{\n              display: authOpen ? 'block' : 'none',\n            }}\n            onMouseDown={() => setAuthOpen(false)}\n          ></div>\n\n          <motion.div\n            animate={{ paddingTop: navHeight - 30 }}\n            className={` flex items-center justify-center `}\n          >\n            <NEWContainer\n              mainState={mainState}\n              setMainState={setMainState}\n              trainingLanguage={trainingLanguage}\n              handleLanguage={toggleTrainingLanguage}\n              BOOK={BOOK}\n              navHeight={navHeight}\n            />\n            {/* <Routes>\n                <Route\n                  path=\"*\"\n                  element={\n                    <MAINREDONEcontainer\n                      mainState={mainState}\n                      setMainState={setMainState}\n                      trainingLanguage={trainingLanguage}\n                      handleLanguage={toggleTrainingLanguage}\n                    />\n                  }\n                />\n              </Routes> */}\n          </motion.div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n{\n  /* </AuthContext.Provider> */\n}\n","/Users/skywalker/Web/KBRD/client/src/hooks/auth.hook.ts",[],"/Users/skywalker/Web/KBRD/client/src/hooks/useLocalStorage.ts",[],"/Users/skywalker/Web/KBRD/client/src/context/AuthContext.ts",[],"/Users/skywalker/Web/KBRD/client/src/utils/useDidMountEffect.ts",["592","593"],"import { useEffect, EffectCallback, DependencyList, useRef } from 'react'\n\nexport const useDidMountEffect = (\n  func: EffectCallback | any,\n  deps?: DependencyList\n) => {\n  const initialRender = useRef(true)\n\n  useEffect(() => {\n    let effectReturns: void | (() => void | undefined) = () => {}\n\n    if (initialRender.current) {\n      initialRender.current = false\n    } else {\n      effectReturns = func()\n    }\n\n    if (effectReturns && typeof effectReturns === 'function') {\n      return effectReturns\n    }\n  }, deps)\n}\n","/Users/skywalker/Web/KBRD/client/src/components/PerspectiveController.tsx",["594","595"],"import React, { useEffect, useState } from 'react'\n\ninterface IProps {\n  setPerspective?(\n    perspective: number,\n    margin: number,\n    is1000plus: boolean\n  ): void\n  setPerspective2?(\n    perspective: number,\n    marginTop: number,\n    marginLeft: number\n  ): void\n  setMainMT?(marginTop: number): void\n  setNavPerspective?(perspective: number, height: number): void\n  setIsHorisontal?(isH: boolean): void\n  handleSetParams?(height: number, width: number): void\n  setFooter?(fontSize: number, paddingX: number): void\n  setBook?(perspective: number, marginTop: number): void\n  setTap?(perspective: number, marginTop: number): void\n  setInfo?(perspective: number, marginTop: number): void\n}\n\nexport const PerspectiveController: React.FC<IProps> = ({\n  setPerspective = () => {},\n  setPerspective2 = () => {},\n  setMainMT = () => {},\n  setNavPerspective = () => {},\n  setIsHorisontal = () => {},\n  handleSetParams = () => {},\n  setFooter = () => {},\n  setBook = () => {},\n  setTap = () => {},\n  setInfo = () => {},\n}) => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  )\n\n  function getWindowDimensions(): { width: number; height: number } {\n    const { innerWidth: width, innerHeight: height } = window\n    return {\n      width,\n      height,\n    }\n  }\n\n  const handleMission = () => {\n    let W = windowDimensions.width\n    let H = windowDimensions.height\n\n    handleSetParams(H, W)\n\n    if (W <= 500 && W < H) {\n      setIsHorisontal(true)\n    } else {\n      setIsHorisontal(false)\n    }\n\n    if (W > 2160) {\n      setPerspective(0, 250, true)\n      setBook(0, 150)\n      setInfo(0, 250)\n      setTap(0, 150)\n      setMainMT(300)\n      setNavPerspective(0, 65)\n      setPerspective2(0, 100, -605)\n      setFooter(30, 400)\n      if (W >= 3000) {\n        setPerspective2(0, 100, -1105)\n        setTap(0, 150)\n        setNavPerspective(0, 45)\n      } else {\n        setFooter(25, 300)\n        setNavPerspective(0, 45)\n      }\n    } else if (W <= 2160 && W > 1920) {\n      setPerspective(0, 200, true)\n      setBook(0, 140)\n      setInfo(0, 100)\n      setTap(0, 120)\n\n      setPerspective2(0, 100, -605)\n      setMainMT(400)\n      setNavPerspective(0, 45)\n      setFooter(20, 350)\n    } else if (W <= 1920 && W > 1700) {\n      setPerspective(0, 140, true)\n      setBook(0, 140)\n      setInfo(0, 70)\n      setTap(0, 90)\n\n      setPerspective2(-0, 0, -102)\n      setMainMT(300)\n      setNavPerspective(0, 32)\n      setFooter(18, 300)\n\n      if (W <= 1800) {\n        setPerspective(0, 130, true)\n        setBook(-50, 130)\n        setTap(-100, 50)\n        setInfo(0, 100)\n\n        setMainMT(285)\n        setNavPerspective(0, 32)\n      }\n    } else if (W <= 1700 && W > 1500) {\n      setPerspective(-130, 85, true)\n      setBook(-200, 85)\n      setTap(-230, 25)\n      setInfo(-130, 60)\n\n      setPerspective2(-50, -25, -102)\n      setMainMT(245)\n      setNavPerspective(0, 34)\n\n      setFooter(14, 200)\n    } else if (W <= 1500 && W > 1350) {\n      setPerspective(-400, 20, true)\n      setBook(-350, 20)\n      setTap(-400, 20)\n      setInfo(-100, 20)\n\n      setPerspective2(-100, -50, -102)\n      setMainMT(205)\n      setNavPerspective(-100, 34)\n      setFooter(12, 200)\n    } else if (W <= 1350 && W > 1200) {\n      setPerspective(-400, 20, true)\n      setBook(-440, 20)\n      setInfo(-100, 10)\n      setTap(-500, -55)\n      setPerspective2(-100, -40, -102)\n      setMainMT(205)\n      setNavPerspective(-100, 32)\n\n      setFooter(10, 200)\n    } else if (W <= 1200 && W > 1000) {\n      setPerspective(-790, -63, true)\n      setBook(-800, 7)\n      setInfo(-100, 7)\n      setTap(-800, -100)\n      setPerspective2(-350, -40, -102)\n      setMainMT(200)\n      setNavPerspective(-100, 32)\n\n      setFooter(10, 200)\n    } else if (W <= 1000) {\n      setPerspective(0, 0, false)\n      setBook(0, 0)\n      setTap(0, 0)\n      setPerspective2(0, 0, 0)\n      setMainMT(0)\n      setFooter(10, 200)\n    } else {\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => handleMission())\n  }, [windowDimensions])\n\n  function handleResize() {\n    setWindowDimensions(getWindowDimensions())\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return <></>\n}\n","/Users/skywalker/Web/KBRD/client/src/components/InitialScreen.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/Footer.tsx",["596","597","598","599","600"],"import React, { useState, useEffect } from 'react'\nimport { MainState } from '../App'\nimport useDarkMode from '../hooks/useDarkMode'\nimport { useDidMountEffect } from '../utils/useDidMountEffect'\nimport { PerspectiveController } from './PerspectiveController'\nimport GH from '../static/profiles/GH.svg'\n\ninterface IProps {\n  below?: boolean\n  mainState?: MainState\n}\n\nexport const Footer: React.FC<IProps> = ({ below = false, mainState = 1 }) => {\n  const [appear, setAppear] = useState(false)\n\n  const [params, setParams] = useState([0, 0])\n\n  const handleSetParams = (fontSize: number, paddingX: number) => {\n    setParams([fontSize, paddingX])\n  }\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 1900)\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    setAppear(false)\n\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 1510)\n\n    return () => {\n      clearTimeout(id)\n    }\n  }, [mainState])\n\n  const [emailCopy, setEmailCopy] = useState(false)\n\n  const handleCopyEmail = async () => {\n    // document.execCommand('copy', true, `away.float.away@gmail.com`)\n    let text = `away.float.away@gmail.com`\n    setEmailCopy(true)\n    setTimeout(() => setEmailCopy(false), 750)\n    if ('clipboard' in navigator) {\n      return await navigator.clipboard.writeText(text)\n    } else {\n      return document.execCommand('copy', true, text)\n    }\n  }\n\n  const { isDarkMode } = useDarkMode()\n\n  return (\n    <>\n      <div\n        className={`z-2022 font-Cooper fixed bottom-0 right-0 left-0  flex w-full border-t border-gray-500 py-2 ${\n          appear || `translate-y-20`\n        }  flex-between ${\n          below\n            ? `justify-around bg-gray-800 text-white `\n            : `gap-6  ${isDarkMode ? 'text-gray-100' : ''}`\n        } items-center bg-gray-400/30 opacity-100 transition duration-500 ease-in-out `}\n        style={{\n          padding: !below ? `5px ${params[1]}px` : `6px 2px`,\n          fontSize: params[0] + 'px',\n        }}\n      >\n        {below || (\n          <a className={`whitespace-nowrap`}>\n            &copy; 2022 KBRD. All rights reserved{' '}\n          </a>\n        )}\n        {below || <a className={`flex-grow`}></a>}\n        <div\n          className={`text-md relative flex items-center justify-center rounded-xl px-2 transition-colors duration-150 hover:bg-emerald-100 hover:text-gray-800`}\n        >\n          <a onMouseDown={handleCopyEmail}>away.float.away@gmail.com</a>\n          {emailCopy && (\n            <div\n              className={`absolute ${\n                !emailCopy && `opacity-0`\n              }  w-f h-f font-courier flex items-center justify-center rounded-xl  bg-emerald-300 transition duration-300 ease-in-out`}\n            >\n              Copied!\n            </div>\n          )}\n        </div>\n\n        <a\n          href={`https://github.com/boosting-my-adrenaline`}\n          target={'_blank'}\n          className={`flex cursor-pointer items-center gap-2 underline decoration-sky-500`}\n        >\n          <img\n            src={GH}\n            alt=\"\"\n            className={`cursor-pointer`}\n            style={{ width: params[0] + 6, height: params[0] + 6 }}\n          />\n          Github\n        </a>\n      </div>\n      <PerspectiveController setFooter={handleSetParams} />\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/navbar/Navbar.tsx",["601","602","603","604","605","606","607","608","609"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useKeyPress } from '../../utils/useKeyPress'\nimport { AuthMiniature } from './nav-components/AuthMiniature'\n// import { NAVarrow } from './nav-components/ArrowPage'\n// import { PerspectiveController } from '../PerspectiveController'\n// import { NAVlinks } from './nav-components/NAV.links'\nimport { NAVlogo } from './nav-components/NAV.logo'\nimport { MainState } from '../../App'\nimport { Width } from '../../utils/GetWidth'\nimport useLanguage from '../../hooks/useLanguage'\nimport { LanguageMiniature } from './nav-components/LanguageMiniature'\nimport useColor, { colorElements } from '../../hooks/useColor'\nimport { useWindowSize } from '../../hooks/useDimensions'\nimport { motion } from 'framer-motion'\nimport { NavbarPallette } from './nav-components/Pallete'\nimport { useScroll } from '../../hooks/useScroll'\nimport useElementSize from '../../hooks/useElementSize'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport useOnClickOutside from '../../hooks/useOnClickOutside'\nimport useDarkMode from '../../hooks/useDarkMode'\n\ninterface IProps {\n  mainState: MainState\n  setMainState: (state: MainState) => void\n  authOpen: boolean\n  setAuthOpen: (auth: boolean) => void\n  trainingLanguage: boolean\n  toggleTrainingLanguage: () => void\n  BOOK: boolean\n  setBOOK: (BOOK: boolean) => void\n  setNavHeight: (height: number) => void\n}\n\nexport const Navbar: React.FC<IProps> = ({\n  mainState,\n  setMainState,\n  authOpen,\n  setAuthOpen,\n  trainingLanguage,\n  toggleTrainingLanguage,\n  BOOK,\n  setBOOK,\n  setNavHeight,\n}) => {\n  const {\n    mainColor1,\n    themeColor1,\n    setMainColor1,\n    mainColor2,\n    themeColor2,\n    setMainColor2,\n  } = useColor()\n\n  const [delay, setDelay] = useState(false)\n  const [delay2, setDelay2] = useState(false)\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    let id = setTimeout(() => setDelay(true), 100)\n\n    let id2 = setTimeout(() => setDelay(false), 300)\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [BOOK])\n\n  useEffect(() => {\n    let id = setTimeout(() => setDelay2(true), 0)\n\n    let id2 = setTimeout(() => setDelay2(false), 375)\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [BOOK])\n\n  useDidMountEffect(() => {\n    let d1 = delay\n    let d2 = delay2\n    if (open) {\n      setDelay(false)\n      setDelay2(false)\n\n      try {\n        window.scroll({\n          top: 0,\n          left: 0,\n          behavior: 'smooth',\n        })\n      } catch (error) {\n        window.scrollTo(0, 0)\n      }\n    }\n\n    // return () => {\n    //   setDelay(delay)\n    //   setDelay2(delay2)\n    // }\n  }, [open])\n\n  const { width } = useWindowSize()\n\n  const { isDarkMode, toggle } = useDarkMode()\n\n  const getFirst = () => {\n    if (width >= 3840) {\n      return 'w-[27.09vw]'\n    } else if (width < 3840 && width >= 2880) {\n      return 'w-[26.95vw]'\n    } else if (width < 2880 && width >= 2560) {\n      return 'w-[26.79vw]'\n    } else if (width < 2560 && width >= 2400) {\n      return 'w-[26.795vw]'\n    } else if (width < 2400 && width >= 2133) {\n      return 'w-[26.711vw]'\n    } else if (width < 2133 && width >= 1920) {\n      return 'w-[26.635vw]'\n    } else if (width < 1920 && width >= 1745) {\n      return 'w-[26.528vw]'\n    } else if (width < 1745 && width >= 1536) {\n      return 'w-[26.43vw]'\n    } else if (width < 1536 && width >= 1440) {\n      // return 'w-[33.79vw]'\n      return 'w-[26.29vw]'\n    } else if (width < 1440 && width >= 1280) {\n      return 'w-[26.19vw]'\n    } else {\n      return 'w-[25.980vw]'\n    }\n  }\n\n  const { isScrollingTop } = useScroll()\n\n  const [squareRef, { height }] = useElementSize()\n\n  useEffect(() => {\n    setNavHeight(height)\n  }, [height])\n\n  const handleClick = () => {\n    setOpen((prev) => !prev)\n  }\n\n  const ref: any = useRef()\n\n  useOnClickOutside(ref, () => setOpen(false))\n\n  return (\n    <>\n      <motion.div\n        // ref={squareRef}\n        animate={{ top: !isScrollingTop ? -45 : 0 }}\n        className={`font-courier fixed left-0 right-0 z-[2024] flex w-full select-none flex-row items-end justify-center transition duration-1000 ease-in-out`}\n      >\n        {/* {elements} */}\n        <motion.div\n          animate={{ x: open ? 200 : 0 }}\n          className={`absolute right-2 top-0 z-50 flex h-[38px] items-center `}\n        >\n          <AuthMiniature authOpen={authOpen} setAuthOpen={setAuthOpen} />\n          <LanguageMiniature\n            trainingLanguage={trainingLanguage}\n            toggleTrainingLanguage={toggleTrainingLanguage}\n          />\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9 }}\n            className={`z-10 cursor-pointer`}\n            onMouseDown={() => toggle()}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 128 128\"\n              width=\"30px\"\n              xmlSpace=\"preserve\"\n            >\n              <path\n                d=\"M69.6 50.6c0-11.8 4.7-22.5 12.2-30.4 2.3-2.4 1-6.5-2.3-7.1-5.2-.9-10.7-.9-16.3-.1-23 3.5-40.9 22.3-43.3 45.5-3.2 30.9 21 57 51.3 57 13.9 0 26.6-5.5 35.9-14.5 2.5-2.4 1.3-6.7-2.2-7.4-20.1-4-35.3-21.7-35.3-43z\"\n                style={{\n                  fill: !isDarkMode ? '#000' : 'rgb(252 211 77)',\n                  stroke: '#000',\n                  strokeMiterlimit: 10,\n                }}\n              />\n            </svg>\n          </motion.div>\n        </motion.div>\n        <div\n          className={` font-BungeeShade absolute  left-0 z-40 flex h-[36px] cursor-pointer text-[1.5rem]`}\n        >\n          {/* {elements} */}\n          <motion.div\n            animate={{\n              x: (!BOOK || delay) && !open ? '0%' : '-100%',\n            }}\n            className={` flex w-[20vw] items-center justify-end  ${\n              isDarkMode ? `text-gray-100` : `text-black`\n            }`}\n            onMouseDown={() => setBOOK(true)}\n          >\n            <span className={``}>{`<`} BOOK</span>\n          </motion.div>\n        </div>\n\n        <motion.div\n          ref={ref}\n          onMouseDown={handleClick}\n          // onMouseLeave={() => setOpen(false)}\n          animate={{ x: open ? 0 : delay2 ? 0 : !BOOK ? `110%` : '-110%' }}\n          className={`font-BungeeShade absolute z-40 flex h-[30px] cursor-pointer items-center justify-center text-[1.5rem] uppercase ${\n            isDarkMode ? `text-gray-300` : `text-black`\n          }`}\n        >\n          THEME: {'\\u00a0'}\n          {open ? (\n            <div\n              // ref={squareRef}\n              className={`flex items-start justify-center gap-1`}\n            >\n              {/* ////// */}\n              {colorElements.map((el) => (\n                <>\n                  {' '}\n                  <motion.div\n                    whileHover={{ scale: 1.1 }}\n                    whileTap={{ scale: 0.9 }}\n                    key={el[0]}\n                    onMouseEnter={() => {\n                      BOOK ? setMainColor1(el[0]) : setMainColor2(el[0])\n                    }}\n                    className={`w-[2vw] cursor-pointer rounded-md border  ${el[1]} ${el[2]}`}\n                  >\n                    {`\\u00a0`}\n                  </motion.div>\n                  <div className={`flex-grow`} />\n                </>\n              ))}\n\n              {/* ////// */}\n            </div>\n          ) : (\n            <motion.span\n              // ref={ref}\n              onMouseDown={() => {\n                setTimeout(() => setOpen(true))\n              }}\n              className={`rounded-md border ${\n                isDarkMode ? `border-gray-300 text-white` : `border-gray-600`\n              } px-[0.5vw] ${\n                delay2\n                  ? isDarkMode\n                    ? `bg-gray-600`\n                    : `bg-gray-200`\n                  : !BOOK\n                  ? isDarkMode\n                    ? themeColor2.bg.t600\n                    : themeColor2.bg.t400\n                  : isDarkMode\n                  ? themeColor1.bg.t600\n                  : themeColor1.bg.t400\n              }`}\n            >\n              {delay2 ? '\\u00a0'.repeat(6) : BOOK ? mainColor1 : mainColor2}\n            </motion.span>\n          )}\n        </motion.div>\n\n        <div\n          className={`font-BungeeShade absolute right-0 z-40 flex h-[36px] cursor-pointer text-[1.5rem]`}\n        >\n          <motion.div\n            animate={{ x: (BOOK || delay) && !open ? '0%' : '100%' }}\n            className={`text flex w-[20vw] items-center justify-start ${\n              isDarkMode ? `text-gray-100` : `text-black`\n            }`}\n            onMouseDown={() => setBOOK(false)}\n          >\n            <span className={``}> TAP {`>`}</span>\n          </motion.div>\n        </div>\n        <div\n          className={`relative flex h-[36px] w-full items-center justify-center overflow-hidden `}\n        >\n          <div\n            className={`flex h-[10000px] w-[10000px] origin-center rotate-[40deg] gap-[6.8vw]`}\n          >\n            <motion.div\n              animate={{ x: (!BOOK || delay) && !open ? '0%' : '-100%' }}\n              className={`box-border h-[100%] w-[50%] cursor-pointer border-[0.15vw] ${\n                isDarkMode ? themeColor1.border.t500 : themeColor1.border.t800\n              } ${\n                isDarkMode ? themeColor1.bg.t800 : themeColor1.bg.t400\n              } transition-colors duration-500 ease-in-out`}\n              onMouseDown={() => setBOOK(true)}\n            ></motion.div>\n\n            <motion.div\n              animate={{ x: delay2 ? 0 : !BOOK ? `77%` : '-77%' }}\n              className={`border-gray-5001 relative flex h-[100%] w-[30vw] items-center justify-center overflow-hidden  `}\n            >\n              {' '}\n              <div\n                className={`flex h-[302px] w-[90vw] rotate-[-40deg] items-center justify-center `}\n              >\n                {' '}\n              </div>\n            </motion.div>\n\n            <motion.div\n              animate={{ x: (BOOK || delay) && !open ? '0%' : '100%' }}\n              className={`border-box shadow-6th h-[100%] w-[50%] cursor-pointer border-[0.15vw]  ${\n                isDarkMode ? themeColor2.border.t500 : themeColor2.border.t800\n              }  ${isDarkMode ? themeColor2.bg.t800 : themeColor2.bg.t400}`}\n              onMouseDown={() => setBOOK(false)}\n            ></motion.div>\n          </div>\n        </div>\n        <div\n          className={`absolute flex h-[2px] w-[100vw] justify-start gap-[45vw]`}\n        >\n          <motion.div\n            animate={{ x: (!BOOK || delay) && !open ? '0%' : '-102.5%' }}\n            // transition={{ bounce: 0.2 }}\n            className={`-z-10 ${getFirst()}  h-[2px] ${themeColor1.bg.t500} ${\n              !delay && BOOK && `in visible`\n            } ${\n              isDarkMode\n                ? `shadow-16th ${themeColor1.shadow.t400}`\n                : `shadow-14th ${themeColor1.shadow.t900}`\n            }`}\n          />\n          <motion.div\n            animate={{ x: (BOOK || delay) && !open ? '0%' : '102%' }}\n            className={` -z-10 h-[2px] flex-grow ${themeColor2.bg.t500} ${\n              !delay && !BOOK && `i nvisible`\n            }  ${\n              isDarkMode\n                ? `shadow-16th ${themeColor2.shadow.t400}`\n                : `shadow-14th ${themeColor2.shadow.t900}`\n            }`}\n          />\n        </div>\n      </motion.div>\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/belowSupportedResolution/Below1000.tsx",["610","611","612"],"import React, { useEffect, useState } from 'react'\nimport { FadeText3 } from '../../utils/FadeText3'\nimport cmd from '../../static/cmd.svg'\nimport { BelowNavbar } from './BelowNavbar'\nimport { PerspectiveController } from '../PerspectiveController'\nimport svg1 from '../../static/svg1.svg'\nimport { Footer } from '../Footer'\n\nexport const Below1000: React.FC = ({}) => {\n  const [isHorizontal, setIsHorisontal] = useState(false)\n  const [params, setParams] = useState([0, 0])\n\n  const handleSetParams = (height: number, width: number) => {\n    setParams([height, width])\n  }\n\n  return (\n    <>\n      <PerspectiveController\n        setIsHorisontal={setIsHorisontal}\n        handleSetParams={handleSetParams}\n      />\n      <BelowNavbar isHorizontal={isHorizontal} />\n      <div\n        className={`fixed top-0 left-0 bottom-0 right-0 opacity-90`}\n        style={{ backgroundImage: `url(${svg1})` }}\n      ></div>\n      <div\n        className={` z-50 opacity-80  w-f flex justify-center items-center`}\n        style={{\n          margin: `${!isHorizontal ? 90 : 110}px auto`,\n        }}\n        // style={{ left: '50%', transform: 'translate(-50%, -50%)', top: '40%' }}\n      >\n        <div\n          className={`font-courier text-center pb-6 `}\n          style={{ maxWidth: '70%' }}\n        >\n          <div\n            className={` flex flex-wrap items-center justify-center space-y-1 `}\n            style={{ fontSize: '1.1rem', marginBottom: 10 }}\n          >\n            <FadeText3 str={`Your resolution is not suppored yet`} />\n          </div>\n          <div\n            className={` flex flex-wrap items-center justify-center space-y-1`}\n            style={{ fontSize: '0.9rem' }}\n          >\n            <FadeText3\n              str={`Either You are using not supported device or you have zoomed the page too much, please scale your page down to at least 1000 pixels width for the best experience`}\n              delay={[700, 1000]}\n              font={'gray-900'}\n            />\n          </div>\n          {params[0] > 0 && params[1] > 0 ? (\n            <div\n              className={` flex flex-wrap items-center justify-center space-y-1 mt-4`}\n              style={{ fontSize: '0.9rem' }}\n            >\n              <FadeText3\n                str={`current${'\\u00A0'}width:${'\\u00A0'}${\n                  params[1] + '\\u00A0' + 'pixels'\n                }`}\n                delay={[1300, 2000]}\n                font={'gray-800'}\n              />\n            </div>\n          ) : null}\n          <div\n            className={`flex justify-between mx-2 flex-flow flex-wrap select-none `}\n          >\n            <div className={'flex justify-center flex-grow '}>\n              <div className={`flex gap-2 mt-8 justify-center items-center`}>\n                <div\n                  className={`border-black border rounded-lg flex flex-col items-end p-2 bg-white opacity-95`}\n                  style={{ width: 90, height: 65, gap: 9 }}\n                >\n                  <img style={{ width: 20, height: 20 }} src={cmd} alt=\" \" />\n                  <div className={`flex w-f justify-center `}>command</div>\n                </div>\n                <div className={`text-2xl text-white`}>+</div>\n                <div\n                  className={`border-black border rounded-lg flex flex-col items-center p-1 bg-white opacity-95`}\n                  style={{ width: 70, height: 65, gap: 10 }}\n                >\n                  <div style={{ transform: 'rotate(90deg) translateY(-1px)' }}>\n                    |\n                  </div>\n                  <div\n                    style={{\n                      width: 10,\n                      overflow: 'hidden',\n                    }}\n                  >\n                    <div\n                      style={{ transform: 'rotate(90deg) translateY(-2px)' }}\n                    >\n                      |\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className={'flex justify-center flex-grow'}>\n              <div className={`flex gap-2 mt-4 justify-center items-center`}>\n                <div\n                  className={`border-black border rounded-lg flex flex-col items-center justify-center p-2 bg-white opacity-95`}\n                  style={{ width: 90, height: 65, gap: 9 }}\n                >\n                  <div className={`flex w-f justify-center `}>ctrl</div>\n                </div>\n                <div className={`text-2xl text-white`}>+</div>\n\n                <div\n                  className={`border-black border rounded-lg  flex flex-col items-center p-1 bg-white opacity-95`}\n                  style={{ width: 70, height: 65, gap: 10 }}\n                >\n                  <div\n                    style={{\n                      transform: 'rotate(90deg) translateY(-1px) ',\n                    }}\n                  >\n                    |\n                  </div>\n                  <div\n                    style={{\n                      width: 10,\n                      overflow: 'hidden',\n                    }}\n                  >\n                    <div\n                      style={{ transform: 'rotate(90deg) translateY(-2px)' }}\n                    >\n                      |\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Footer below />\n      </div>\n\n      {/* <div\n        className={`fixed top-0 bottom-0 left-0 right-0 flex flex-col align-center justify-center gap bg-yello-200 bg-gray-500 transition duration-500 ease-in-out`}\n        style={{\n          willChange: 'transform',\n        }}\n      >\n        <div\n          className={` flex flex-col align-center justify-center gap py opacity-20 `}\n          style={{\n            transition: '3s ',\n            transform: `perspective(1000px) rotateX(45deg) translateX(${pos[1]}px) translateY(${pos[0]}px)`,\n          }}\n        >\n          {Array.from({ length: L }, (_, i) => i).map((el) => (\n            <div\n              className={` flex flex-row align-center justify-center gap-2`}\n              style={{\n                margin: `-53.5px ${el % 2 === 0 ? '0' : '216px'} 0 0`,\n              }}\n            >\n              {Array.from({ length: W }, () => {}).map((el) => (\n                <Hexagon\n                  side={side}\n                  side2={\n                    // show ? side2[0] :\n                    side2[1]\n                  }\n                  empty={empty}\n                  fontSize={110}\n                />\n              ))}\n            </div>\n          ))}\n        </div>\n      </div> */}\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.REDONE.container.tsx",["613"],"/Users/skywalker/Web/KBRD/client/src/hooks/useEventListener.ts",[],"/Users/skywalker/Web/KBRD/client/src/hooks/useLanguage.ts",[],"/Users/skywalker/Web/KBRD/client/src/utils/FadeText3.tsx",[],"/Users/skywalker/Web/KBRD/client/src/utils/GetWidth.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/belowSupportedResolution/BelowNavbar.tsx",["614","615"],"import React, { useState, useEffect } from 'react'\nimport GH from '../../static/profiles/GH.svg'\n\n// https://github.com/boosting-my-adrenaline\n\nexport const BelowNavbar: React.FC<{ isHorizontal: boolean }> = ({\n  isHorizontal,\n}) => {\n  const [appear, setAppear] = useState(false)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 600)\n    return () => clearTimeout(id)\n  }, [])\n\n  return (\n    <div\n      className={`z-51 fixed top-0 right-0 left-0 bg-gray-200   ${\n        isHorizontal ? `h-43px` : `h-43px`\n      } shadow-11th flex select-none items-center justify-center px-4 opacity-90`}\n    >\n      <div className={`flew-grow w-70% flex justify-end`}>\n        <a href={`https://github.com/boosting-my-adrenaline`} target={'_blank'}>\n          <img\n            alt=\"\"\n            src={GH}\n            className={`cursor-pointer ${\n              isHorizontal ? `w-40px h-40px` : `w-30px h-30px`\n            } transition duration-1000 ease-in-out`}\n          />\n        </a>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.REDONE.INFO.tsx",["616","617"],"import { motion } from 'framer-motion'\nimport React, { useState } from 'react'\nimport MainTap from '../../static/maintap.svg'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { MainState } from '../../App'\nimport { MAINTAPinside } from './MAIN.TAP.inside'\nimport { MAININFOinside } from './MAIN.INFO.inside'\n\ninterface IProps {\n  mainState: MainState\n  setMainState: (state: MainState) => void\n}\nexport const MAINREDONEinfo: React.FC<IProps> = ({\n  mainState,\n  setMainState,\n}) => {\n  const [transformation, setTransformation] = useState(false)\n  const [show, setShow] = useState(false)\n\n  useDidMountEffect(() => {\n    if (mainState === MainState.INFO) {\n      setTransformation(true)\n    } else {\n      setTransformation(false)\n    }\n\n    let id = setTimeout(\n      () => {\n        if (mainState === MainState.INFO) {\n          setShow(true)\n        } else {\n          setShow(false)\n        }\n      },\n      mainState === MainState.INFO ? 750 : 0\n    )\n    return () => clearTimeout(id)\n  }, [mainState])\n\n  const handleOnClick = () => {\n    if (mainState === MainState.INFO) {\n      return\n    }\n    setMainState(MainState.INFO)\n  }\n\n  return (\n    <motion.div\n      onMouseDown={handleOnClick}\n      initial={{\n        y: -3000,\n        minHeight: 170,\n      }}\n      animate={\n        mainState === MainState.MAIN\n          ? {\n              z: -10,\n              y: '90%',\n              width: `10%`,\n              height: `10%`,\n              position: `absolute`,\n              marginLeft: `88.5%`,\n              marginRight: `5%`,\n            }\n          : [MainState.BOOK, MainState.TAP].includes(mainState)\n          ? {\n              z: -10,\n              y: '-400%',\n              // x: 1000,\n              width: `10%`,\n              height: `10%`,\n              position: `absolute`,\n              marginLeft: `88.5%`,\n\n              marginRight: `5%`,\n            }\n          : !transformation\n          ? {\n              z: -10,\n              y: '100%',\n              width: `10%`,\n              height: `10%`,\n              position: `absolute`,\n              marginLeft: `88.5%`,\n\n              marginRight: `5%`,\n            }\n          : {\n              z: 10,\n              y: 0,\n              width: `100%`,\n              height: `100%`,\n              position: `absolute`,\n              marginLeft: `50%`,\n              marginRight: `50%`,\n            }\n      }\n      className={`select-none`}\n      transition={{ delay: 0.0, duration: 1 }}\n    >\n      <motion.div\n        initial={{\n          width: `100%`,\n          height: `100%`,\n          boxShadow: `4px 4px 11px 2px rgba(217, 119 ,6, 0.8)`,\n          borderRadius: 100,\n        }}\n        whileHover={{\n          scale: !transformation ? 1.15 : 1,\n          x: !transformation ? 10 : 0,\n          boxShadow: `4px 4px 11px 6px rgba(217, 119, 6, 0.65)`,\n        }}\n        animate={\n          !transformation\n            ? {\n                padding: 4,\n                borderRadius: 15,\n                border: `1px solid white`,\n              }\n            : {\n                padding: 0,\n                border: `none`,\n                borderRadius: 0,\n              }\n        }\n        className={`font-BebasNeue flex cursor-pointer items-center justify-center bg-amber-200 text-[10em]`}\n      >\n        {mainState === MainState.INFO && show ? (\n          <MAININFOinside show={show} mainState={mainState} />\n        ) : (\n          `?`\n        )}\n        {/* <motion.div\n        initial={{\n          width: `100%`,\n          height: `100%`,\n        }}\n        animate={\n          !transformation\n            ? {\n                backgroundColor: `rgb(224, 242, 254)`,\n                border: `2px solid white`,\n                borderRadius: 20,\n              }\n            : {\n                backgroundColor: `transparent`,\n                border: `none`,\n                borderRadius: 0,\n              }\n        }\n        className={`    flex flex-col items-center justify-center overflow-hidden `}\n      >\n        {mainState === MainState.MAIN && (\n          <div\n            className={`w-f h-f absolute z-10  cursor-pointer`}\n            onMouseDown={handleOnClick}\n          ></div>\n        )}\n\n        <motion.div\n          initial={{}}\n          animate={\n            !transformation\n              ? { height: `23%`, minHeight: 150 }\n              : { height: 0, minHeight: 0 }\n          }\n          transition={{ delay: 0.3, duration: 0.4 }}\n          className={`bg-amber-20 flex items-center  justify-center gap-1 `}\n        >\n          {keybs.map((el) => keyb(el[0], el[1]))}\n        </motion.div>\n\n        <div className={`flex-grow`}></div>\n        <motion.div\n          initial={{ height: `90%` }}\n          animate={\n            !transformation ? { height: `40%` } : { height: `0%`, y: 400 }\n          }\n          transition={{ delay: 0.2, duration: 0.7 }}\n          className={` `}\n          style={{\n            // height: `100%`,\n            width: `100%`,\n            // backgroundImage: `url(${svgbook2})`,\n            // backgroundSize: `cover`,\n            // backgroundPosition: `bottom`,\n            backgroundSize: `cover`,\n            backgroundPosition: `bottom`,\n            backgroundImage: `url(${MainTap})`,\n          }}\n        >\n          <motion.div\n            animate={{ opacity: 0 }}\n            transition={{ delay: 1 }}\n            className={`w-f h-2 border border-amber-100 bg-amber-100`}\n          ></motion.div>\n        </motion.div>\n      </motion.div> */}\n      </motion.div>\n    </motion.div>\n  )\n}\n",["618","619"],"/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.REDONE.BOOK.tsx",["620","621","622","623"],"/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.REDONE.TAP.tsx",["624","625"],"/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/LanguageMiniature.tsx",["626","627","628"],"import { motion } from 'framer-motion'\nimport React, { useState } from 'react'\nimport useDarkMode from '../../../hooks/useDarkMode'\nimport { useWindowSize } from '../../../hooks/useDimensions'\nimport useLanguage from '../../../hooks/useLanguage'\nimport R from '../../../static/profiles/russia.png'\nimport E from '../../../static/profiles/uk.png'\n\ninterface IProps {\n  trainingLanguage: boolean\n  toggleTrainingLanguage: () => void\n}\n\nexport const LanguageMiniature: React.FC<IProps> = ({\n  trainingLanguage,\n  toggleTrainingLanguage,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [hover, setHover] = useState(false)\n  const { isDarkMode } = useDarkMode()\n\n  const { isEng, toggle } = useLanguage()\n\n  const { width } = useWindowSize()\n  return (\n    <motion.div\n      whileHover={{ scale: 1.16 }}\n      whileTap={{ scale: 0.9 }}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      className={` relative flex cursor-pointer  ${\n        hover ? `border-grey-700  bg-white/50` : `border-transparent`\n      } items-center justify-center rounded-md border  p-1`}\n      onMouseDown={toggle}\n    >\n      <div\n        className={`h-[24px] w-[24px]  cursor-pointer rounded-full border ${\n          isDarkMode ? ` border-gray-300` : ` border-gray-600`\n        }`}\n      >\n        <img alt=\"\" src={isEng ? E : R} />\n      </div>\n      {/* <div className={`flex `} onMouseDown={toggle}>\n        {hover && (\n          <div className={width > 1300 ? `` : `text-[10px]`}>\n            interface -{`\\u00a0`}\n          </div>\n        )}\n        <div\n          className={`${\n            width > 1300 ? `h-[24px] w-[24px]` : `h-[16px] w-[16px]`\n          }`}\n        >\n          {isEng ? (\n            <img\n              alt=\"\"\n              src={E}\n              className={`w-f h-f rounded-full object-cover`}\n            />\n          ) : (\n            <img alt=\"\" src={R} />\n          )}\n        </div>\n      </div>\n      <div className={`flex `} onMouseDown={toggleTrainingLanguage}>\n        {hover && (\n          <div className={width > 1300 ? `` : `text-[10px]`}>\n            training - {`\\u00a0`}\n          </div>\n        )}\n        <div\n          className={`${\n            width > 1300 ? `h-[24px] w-[24px]` : `h-[16px] w-[16px]`\n          }`}\n        >\n          {trainingLanguage ? (\n            <img\n              alt=\"\"\n              src={E}\n              className={`w-f h-f rounded-full object-cover`}\n            />\n          ) : (\n            <img alt=\"\" src={R} />\n          )}\n        </div>\n      </div> */}\n    </motion.div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/NAV.links.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/NAV.logo.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/AuthMiniature.tsx",["629","630","631"],"import { motion } from 'framer-motion'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../../../context/AuthContext'\nimport useDarkMode from '../../../hooks/useDarkMode'\nimport { useWindowSize } from '../../../hooks/useDimensions'\nimport useLanguage from '../../../hooks/useLanguage'\n\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { AUTHcontainer } from '../../authorization/AUTH.container'\nimport { PerspectiveController } from '../../PerspectiveController'\nimport { PROFILEcontainer } from '../../profile/PROFILE.container'\nimport { PhotoMiniature } from './PhotoMiniature'\n\ninterface IProps {\n  authOpen: boolean\n  setAuthOpen: (auth: boolean) => void\n}\n\nexport const AuthMiniature: React.FC<IProps> = ({ authOpen, setAuthOpen }) => {\n  const auth = useContext(AuthContext)\n\n  const { isDarkMode } = useDarkMode()\n\n  const { isAuthenticated: isLoggedIn } = auth\n\n  const [appear, setAppear] = useState(true)\n\n  useDidMountEffect(() => {\n    setAppear(false)\n    let id = setTimeout(() => setAppear(true), 300)\n\n    return () => {\n      clearTimeout(id)\n    }\n  }, [authOpen])\n\n  const [hover, setHover] = useState(false)\n\n  const { isEng } = useLanguage()\n\n  const { width } = useWindowSize()\n\n  return (\n    <div\n      className={`flex items-center justify-center `}\n      style={{\n        width: 80,\n        height: 50,\n        zIndex: 2021,\n        // opacity: 0.6,\n      }}\n    >\n      {\n        <motion.div\n          animate={{\n            borderRadius: !authOpen ? 500 : 10,\n            // opacity: 0.2,\n            // marginLeft: authOpen ? perspective[2] : 0,\n            // marginTop: authOpen ? perspective[1] : 0,\n            width: !authOpen ? 60 : 1150,\n            height: !authOpen ? 28 : 700,\n            // x: !authOpen ? 0 : -490,\n            right: !authOpen ? 67 : (width - 1150) / 2,\n\n            y: !authOpen ? 0 : 380,\n          }}\n          transition={{\n            default: { duration: 0.15, type: `spring` },\n            width: { duration: 0.25, delay: 0.15 },\n            height: { duration: 0.25, delay: 0.15, ease: `linear` },\n            x: { duration: 0.4, type: `tween` },\n            y: { duration: 0.4, type: `tween` },\n          }}\n          // whileHover={{ y: !authOpen ? -2 : 0 }}\n          className={`absolute z-50  overflow-hidden border-2 ${\n            isDarkMode ? `border-gray-100` : `border-gray-600`\n          }  ${\n            authOpen\n              ? isDarkMode\n                ? 'shadow-12th shadow-gray-300'\n                : 'shadow-12th'\n              : 'cursor-pointer'\n          }`}\n          onMouseDown={() => {\n            if (!authOpen) setAuthOpen(true)\n          }}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        >\n          {!authOpen ? (\n            <>\n              {isLoggedIn ? (\n                <div\n                  className={` flex items-center justify-center overflow-hidden`}\n                >\n                  {!appear ? (\n                    <div\n                      className={`h-[1050px] w-[100%] ${\n                        isLoggedIn\n                          ? isDarkMode\n                            ? ``\n                            : `bg-purple-100`\n                          : isDarkMode\n                          ? `bg-yellow-200`\n                          : `bg-yellow-200`\n                      }`}\n                    >\n                      {' '}\n                    </div>\n                  ) : (\n                    <PhotoMiniature />\n                  )}\n                </div>\n              ) : (\n                <div\n                  className={`w-f h-f flex items-center justify-center ${\n                    isDarkMode ? `bg-yellow-100` : `bg-yellow-100`\n                  } ${isEng || `font-CourierC`}`}\n                >\n                  {' '}\n                  {isEng ? `Login` : `Войти`}\n                </div>\n              )}\n            </>\n          ) : (\n            <>\n              {isLoggedIn ? (\n                <PROFILEcontainer\n                  authOpen={authOpen}\n                  setAuthOpen={setAuthOpen}\n                />\n              ) : (\n                <AUTHcontainer authOpen={authOpen} setAuthOpen={setAuthOpen} />\n              )}\n            </>\n          )}\n        </motion.div>\n      }\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/utils/FadeText.tsx",["632"],"import React, { useState, useEffect } from 'react'\nimport { getRandom } from './getRandom'\nimport { useDidMountEffect } from './useDidMountEffect'\n\ninterface IProps {\n  title: string\n  delay: [number, number]\n  hide?: any\n  multiple?: boolean\n  blink?: any\n}\n\nexport const FadeText: React.FC<IProps> = ({\n  title,\n  delay,\n  hide = 0,\n  multiple = false,\n  blink = 0,\n}) => {\n  const symbols = title.split('').map((el, i) => (\n    <TagSymbol\n      // key={el + Math.random()}\n      key={el + i}\n      symbol={el}\n      delay={delay}\n      hide={hide}\n      multiple={multiple}\n      blink={blink}\n    />\n  ))\n\n  return <>{symbols}</>\n}\n\ninterface IProps2 {\n  symbol: string\n  delay: [number, number]\n  hide?: any\n  multiple: boolean\n  blink: any\n}\n\nconst TagSymbol: React.FC<IProps2> = ({\n  symbol,\n  delay,\n  hide = 1,\n  multiple,\n  blink,\n}) => {\n  const [show, setShow] = useState(false)\n  const [currentSymbol, setCurrentSymbol] = useState('\\u00a0')\n\n  const calculateDelay = () => {\n    if (multiple) {\n      return Math.floor(getRandom(delay[0], delay[1]) / 100) * 100\n    } else return getRandom(delay[0], delay[1])\n  }\n\n  const del = calculateDelay()\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setCurrentSymbol(symbol)\n      setShow(true)\n    }, del)\n\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => setShow(false), del * 0.5)\n\n    return () => clearTimeout(id)\n  }, [hide])\n\n  useDidMountEffect(() => {\n    // let id = setTimeout(() => {\n    let id0 = setTimeout(() => setCurrentSymbol('\\u00a0'), 1)\n    let id1 = setTimeout(() => setShow(false), 2)\n    let id2 = setTimeout(() => setCurrentSymbol(symbol), del * 0.2)\n    let id3 = setTimeout(() => setShow(true), del * 2)\n    // }, del * 0.75)\n\n    return () => {\n      clearTimeout(id0)\n      clearTimeout(id1)\n      clearTimeout(id2)\n      clearTimeout(id3)\n      setCurrentSymbol(symbol)\n      setShow(true)\n    }\n  }, [blink])\n\n  // useDidMountEffect(() => {\n  //   let id0 = setTimeout(() => setShow(false), del * 25)\n  //   // let id0 = setTimeout(() => setCurrentSymbol(' '), del * 0.75)\n  //   let id1 = setTimeout(() => setCurrentSymbol(symbol), del * 75)\n  //   let id2 = setTimeout(() => setShow(true), del * 1.5)\n\n  //   return () => {\n  //     clearTimeout(id0)\n  //     clearTimeout(id1)\n  //     clearTimeout(id2)\n  //     setShow(true)\n  //   }\n  // }, [symbol])\n\n  useDidMountEffect(() => setCurrentSymbol(symbol), [symbol])\n\n  return (\n    <span\n      className={`${!show && `opacity-0`} select-none`}\n      style={{ transition: `${delay[0] / 500}s ease` }}\n    >\n      {currentSymbol}\n    </span>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/hooks/useDimensions.ts",["633"],"import React, { useEffect, useState } from 'react'\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({\n    width: 0,\n    height: 0,\n  })\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n    window.addEventListener('resize', handleResize)\n    handleResize()\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n  return windowSize\n}\n","/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.TAP.inside.tsx",["634"],"/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.BOOK.inside.tsx",["635"],"/Users/skywalker/Web/KBRD/client/src/components/main-redone/MAIN.INFO.inside.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/profile/PROFILE.container.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/authorization/AUTH.container.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/PhotoMiniature.tsx",[],"/Users/skywalker/Web/KBRD/client/src/utils/getRandom.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/profile/PROFILE.info.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/profile/PROFILE.stats.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/profile/PROFILE.profile.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/profile/NBA.button.tsx",["636","637","638"],"import { motion } from 'framer-motion'\nimport React, { useEffect, useState } from 'react'\nimport useLanguage from '../../hooks/useLanguage'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { useKeyPress } from '../../utils/useKeyPress'\n\ninterface IProps {\n  tag: string\n  onClick: () => void\n  border?: string\n  bg?: string\n  hov?: string\n  text?: string\n  py?: string\n  px?: string\n  disableCursor?: boolean\n  space?: boolean\n  extraActive?: boolean\n  isDark?: boolean\n}\n\nexport const NBAbutton: React.FC<IProps> = ({\n  tag,\n  onClick,\n\n  border = `border-purple-500`,\n  bg = `bg-purple-300`,\n  hov = `bg-purple-500`,\n  text = `text-2xl`,\n  px = `px-4`,\n  py = `py-2`,\n  disableCursor = false,\n  space = false,\n  extraActive = false,\n  isDark = false,\n}) => {\n  const [hover, setHover] = useState(false)\n\n  const [active, setActive] = useState(false)\n\n  const handleClick = () => {\n    setActive(true)\n    onClick()\n  }\n\n  const getParams = () => {\n    if (active || extraActive) {\n      return {\n        scale: 0.9,\n        boxShadow: isDark\n          ? `1px 2px 8px 2px rgba(209, 213, 219, 0.75) `\n          : `1px 2px 8px 2px rgba(50, 50, 50, 0.75)`,\n      }\n    } else if (hover) {\n      return {\n        scale: 1.1,\n        boxShadow: isDark\n          ? `4px 8px 8px 3px rgba(209, 213, 219, 0.5) `\n          : `4px 8px 8px 3px rgba(50, 50, 50, 0.5)`,\n      }\n    } else {\n      return {\n        scale: 1,\n        boxShadow: isDark\n          ? `2px 5px 8px 3px rgba(209, 213, 219, 0.65) `\n          : `2px 5px 8px 3px rgba(50, 50, 50, 0.65)`,\n      }\n    }\n  }\n  const { isEng } = useLanguage()\n\n  return (\n    <motion.div\n      animate={getParams()}\n      className={`relative flex select-none items-center justify-center overflow-hidden border  bg-transparent ${border}  ${\n        disableCursor ? `cursor-not-allowed` : `cursor-pointer`\n      }  rounded-lg ${isEng ? `font-courier` : `font-CourierC`}`}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => {\n        setHover(false)\n        setActive(false)\n      }}\n      onMouseDown={handleClick}\n      onMouseUp={() => setActive(false)}\n    >\n      <div\n        className={`z-60 relative flex items-center justify-center overflow-hidden rounded   ${py} ${px} `}\n      >\n        <div\n          className={`${text} ${\n            isDark ? `text-gray-100` : `text-gray-900`\n          } w-f h-f overflow-hidde relative z-50 flex items-center justify-center whitespace-nowrap rounded-xl`}\n        >\n          {tag}\n          {space && (\n            <div\n              className={` h-2px w-50px absolute rounded-sm ${\n                isDark ? `bg-gray-100` : `bg-gray-900`\n              }`}\n              style={{ transform: `translateY(17px)` }}\n            />\n          )}\n        </div>\n        <div\n          className={`duration-275 absolute -z-10 transition ease-in-out`}\n          style={{\n            transform: `translate(${\n              !hover && !active && !extraActive ? `-300` : '10'\n            }px, -10px)`,\n          }}\n        >\n          <div className={`${hov}  h-175px rotate-20deg w-[300px]`}></div>\n        </div>\n        <div className={`absolute -z-20 ${bg} h-100px w-350px`}></div>\n      </div>\n    </motion.div>\n  )\n\n  // return (\n  //   <motion.div\n  //     animate={{\n  //       boxShadow: `2px 5px 8px 3px rgba(50, 50, 50, 0.65)`,\n  //       overflow: `hidden`,\n  //     }}\n  //     whileHover={{\n  //       scale: 1.1,\n  //       y: -2,\n  //       overflow: `hidden`,\n  //       boxShadow: `4px 8px 8px 3px rgba(50, 50, 50, 0.5)`,\n  //     }}\n  //     whileTap={{\n  //       scale: 0.9,\n  //       boxShadow: `1px 2px 8px 2px rgba(50, 50, 50, 0.75)`,\n  //     }}\n  //     className={`flex bg-transparent items-center select-none overflow-hidden relative justify-center  border ${border}  ${\n  //       disableCursor ? `cursor-not-allowed` : `cursor-pointer`\n  //     }  rounded-lg font-courier`}\n  //     onMouseEnter={() => setHover(true)}\n  //     onMouseLeave={() => setHover(false)}\n  //     onMouseDown={onClick}\n  //   >\n  //     <div\n  //       className={`flex z-60 relative overflow-hidden rounded justify-center items-center   ${py} ${px} `}\n  //     >\n  //       <div\n  //         className={`${text}  z-50 whitespace-nowrap w-f h-f relative overflow-hidde rounded-xl flex justify-center items-center`}\n  //       >\n  //         {tag}\n  //         {space && (\n  //           <div\n  //             className={` absolute h-2px w-50px bg-gray-800 rounded-sm`}\n  //             style={{ transform: `translateY(17px)` }}\n  //           />\n  //         )}\n  //       </div>\n  //       <div\n  //         className={`absolute -z-10 transition duration-275 ease-in-out`}\n  //         style={{\n  //           transform: `translate(${!hover ? `-260` : '10'}px, -10px)`,\n  //         }}\n  //       >\n  //         <div className={`${hov}  w-275px h-175px rotate-20deg`}></div>\n  //       </div>\n  //       <div className={`-z-20 absolute ${bg} h-100px w-350px`}></div>\n  //     </div>\n  //   </motion.div>\n  // )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/TAP.REDONE.container.tsx",["639","640","641"],"import { motion } from 'framer-motion'\nimport React, { useState } from 'react'\nimport { useWindowSize } from '../../hooks/useDimensions'\nimport useLocalStorage from '../../hooks/useLocalStorage'\nimport { PerspectiveController } from '../PerspectiveController'\nimport { TAPREDONEshooting } from './shooting/TAP.REDONE.main'\n\ninterface IProps {\n  demo: boolean\n  trainingLanguage: boolean\n  handleLanguage: () => void\n}\n\nexport const TAPREDONEcontainer: React.FC<IProps> = ({\n  demo,\n  trainingLanguage,\n  handleLanguage,\n}) => {\n  const [perspective, setPerspective] = useState<[number, number]>([0, 100])\n\n  const handleSetPerspective = (perspective: number, margin: number) => {\n    setPerspective([perspective, margin])\n  }\n\n  const { width } = useWindowSize()\n\n  return (\n    <>\n      <motion.div\n        animate={{}}\n        // className={`select-none ${appear || `opacity-0`}`}\n        className={`mt-[70px] flex flex-col items-center justify-center`}\n        // style={{\n        //   marginTop: perspective[1],\n        //   transform: `perspective(1000px) translateZ(${perspective[0]}px)`,\n        //   transition: '0.05s ease-in-out',\n        // }}\n      >\n        <div\n          className={`-translate-y-0px flex flex-col items-center  justify-center transition-opacity duration-700 ease-in-out`}\n          style={{ transition: `0.7s ease-in-out` }}\n        >\n          <TAPREDONEshooting\n            demo={demo}\n            trainingLanguage={trainingLanguage}\n            handleLanguage={handleLanguage}\n          />\n        </div>\n      </motion.div>\n      <PerspectiveController setTap={handleSetPerspective} />\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone-rus/RUS.BOOK.container.tsx",["642","643","644","645","646","647"],"import {\n  capitalsRUS,\n  KEYSRUS,\n  notCapitalsRUS,\n} from './components/strings/strings'\nimport { RUSBOOKBook } from './components/RUS.BOOK.book'\n\nimport { asya as letter1 } from './../../static/letters/rus/asya'\nimport { gogol as letter2 } from './../../static/letters/rus/gogol'\nimport { karamazovbrothers as letter3 } from './../../static/letters/rus/karamazovbrothers'\nimport { robinsonR as letter4 } from './../../static/letters/rus/robinsonRus'\nimport { don as letter5 } from './../../static/letters/rus/don'\nimport { oblomov as letter6 } from './../../static/letters/rus/oblomov'\nimport { karenina as letter7 } from './../../static/letters/rus/karenina'\nimport { masterimargarita as letter8 } from './../../static/letters/rus/masterimargarita'\n\nimport React, { useState, useEffect, useRef } from 'react'\n\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { useKeyPress } from '../../utils/useKeyPress'\n\nimport useLocalStorage from '../../hooks/useLocalStorage'\n\nimport { motion } from 'framer-motion'\nimport useColor from '../../hooks/useColor'\nimport { BOOKBook } from '../book-redone/components/BOOK.book'\nimport { BOOKLayout } from '../book-redone/components/BOOK.layout'\nimport { BOOKfailures } from '../book-redone/components/BOOK.failures'\nimport { BOOKpointer } from '../book-redone/components/BOOK.pointer'\nimport { BOOKkeyboard } from '../book-redone/components/BOOK.keyboard'\nimport { BOOKbuttons } from '../book-redone/components/BOOK.buttons'\nimport { BOOKstats } from '../book-redone/components/BOOK.stats'\nimport { BOOKstring } from '../book-redone/components/strings/BOOK.string'\nimport { moveString } from '../book-redone/components/strings/stringFormation'\nimport { RUSBOOKstring } from './components/strings/RUS.BOOK.string'\n\ninterface IProps {\n  handleLanguage: () => void\n}\n\nexport const RUSBOOKContainer: React.FC<IProps> = ({ handleLanguage }) => {\n  // const startingLetter = Array.from({ length: 500 }, () => 'A').join('') /////////////////////////////////\n\n  // const [currentString, setCurrentString] = useLocalStorage(\n  //   'BK-current string',\n  //   [letter1, letter2, letter3, letter4, letter5, letter6, letter7, letter8][\n  //     Math.floor(Math.random() * 8)\n  //   ]\n  // )\n  const [currentString, setCurrentString] = useState(\n    [letter1, letter2, letter3, letter4, letter5, letter6, letter7, letter8][\n      Math.floor(Math.random() * 8)\n    ]\n  )\n\n  const [STRING, setSTRING] = useLocalStorage('BK-STRING', currentString)\n\n  useEffect(() => {\n    setSTRING(currentString)\n  }, [])\n\n  function handleStringErase(STR: string): void {\n    setCurrentString(STR)\n    setSTRING(STR)\n    successAndFailedTypes.current = 0\n    failedTypesIndexes.current = []\n    failureTypes.current = 0\n  }\n\n  function handleStringNoErase(STR: string): void {\n    setCurrentString(STR)\n    setSTRING(moveString(STR, successAndFailedTypes.current))\n  }\n\n  const [keyDown, setKeyDown] = useState('')\n\n  const successAndFailedTypes = useRef(0)\n  const failureTypes = useRef(0)\n  const failureInARow = useRef(0)\n  // const streakRow = useRef(0)\n  const [streakRow, setStreakRow] = useState(0)\n\n  const failedTypeStatus = useRef(false)\n  const escapeFailedTypeStatus = useRef(false)\n  const failedTypesIndexes = useRef<number[]>([])\n\n  const historyOfFailed = useRef<\n    {\n      desired: string\n      pressed: string\n      previous: string\n    }[]\n  >([])\n\n  const lastKey = useRef('')\n  const prelastKey = useRef('')\n\n  const [hightlighter, setHighlighter] = useLocalStorage('highlight', false)\n\n  const caps = useKeyPress('CapsLock')\n  const shift = useKeyPress('Shift')\n\n  const [capsKey, setCapsKey] = useState(false)\n  const [shiftKey, setShiftKey] = useState(false)\n\n  useDidMountEffect(() => {\n    setCapsKey(caps)\n  }, [caps])\n\n  useDidMountEffect(() => {\n    setShiftKey(shift)\n  }, [shift])\n\n  useDidMountEffect(() => {\n    if (!caps && !shift && capitalsRUS.includes(keyDown)) {\n      setCapsKey(true)\n    }\n    if (caps && notCapitalsRUS.includes(keyDown)) {\n      setCapsKey(false)\n    }\n  }, [keyDown])\n\n  const capsError = useRef(0)\n\n  useEffect(() => {\n    prelastKey.current = lastKey.current\n  }, [keyDown])\n\n  const handleEvent = (event: KeyboardEvent) => {\n    const { key } = event\n    // console.log(\n    //   `key: ${key} , STRING[0]: ${STRING[0]}, is===? ${\n    //     key === STRING[0] ? `yes` : `no`\n    //   }`\n    // )\n\n    if (KEYSRUS.includes(key)) {\n      setKeyDown(key)\n      setKeyDown('')\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEvent)\n    return () => {\n      window.removeEventListener('keydown', handleEvent)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (keyDown === STRING[0]) {\n      // SUCCESS()\n      setIncreaser((prev) => prev + 1)\n    } else if (keyDown !== STRING[0] && KEYSRUS.includes(keyDown)) {\n      FAILURE()\n      if (keyDown.toLowerCase() === STRING[0].toLowerCase() && capsKey) {\n        capsError.current++\n      }\n    }\n\n    if (keyDown === ' ') {\n      lastKey.current = 'Space'\n    } else if (KEYSRUS.includes(keyDown)) {\n      lastKey.current = keyDown\n    }\n  }, [keyDown])\n\n  const [increaser, setIncreaser] = useState(0)\n\n  useDidMountEffect(() => {\n    SUCCESS()\n  }, [increaser])\n\n  const [test, setTest] = useState(0)\n\n  const SUCCESS = (): void => {\n    // setStreakRow(0)\n    setSTRING((str) => str.substring(1) + str[0])\n    successAndFailedTypes.current++\n    failedTypesIndexes.current = failedTypesIndexes.current.map((el) => el + 1)\n    // .filter((el) => el <= 245)\n    if (failedTypeStatus.current && !escapeFailedTypeStatus.current) {\n      // setTimeout(() => {\n      // setTest((prev) => prev + 10)\n      failedTypesIndexes.current = [...failedTypesIndexes.current, 1]\n      // }, 10)\n    }\n    failedTypeStatus.current = false\n    if (escapeFailedTypeStatus.current) {\n      escapeFailedTypeStatus.current = false\n    }\n    if (failureInARow.current !== 0) {\n      failureInARow.current = 0\n    }\n  }\n\n  function FAILURE(): void {\n    if (streakRow === 0 && keyDown === STRING[1]) {\n      setStreakRow((prev) => prev + 1)\n      // console.log(1)\n    } else if (streakRow === 1 && keyDown === STRING[2]) {\n      setStreakRow((prev) => prev + 1)\n      // console.log(2)\n    } else if (streakRow === 2 && keyDown === STRING[3]) {\n      // setIncreaser((prev) => prev + 1)\n      SUCCESS()\n      // setIncreaser((prev) => prev + 1)\n      // setIncreaser((prev) => prev + 1)\n      // setIncreaser((prev) => prev + 1)\n      setTimeout(() => setIncreaser((prev) => prev + 1))\n      setTimeout(() => setIncreaser((prev) => prev + 1))\n      setTimeout(() => setIncreaser((prev) => prev + 1))\n      // setIncreaser((prev) => prev + 1)\n      // setIncreaser((prev) => prev + 1)\n      escapeFailedTypeStatus.current = true\n      failureTypes.current--\n      setStreakRow(0)\n      // console.log(3)\n    } else {\n      setStreakRow(0)\n      // console.log(0)\n    }\n\n    if (failureInARow.current === 0) {\n      setTest((prev) => prev + 1)\n      // setTimeout(() => {\n      failureInARow.current = 1\n      failureTypes.current++\n      // historyOfFailed.current = [\n      //   ...historyOfFailed.current,\n      //   {\n      //     desired: STRING[0] === ' ' ? 'Space' : STRING[0],\n      //     pressed: keyDown === ' ' ? 'Space' : keyDown,\n      //     previous: prelastKey.current,\n      //   },\n      // ]\n      // console.log(historyOfFailed.current)\n\n      failedTypeStatus.current = true\n      // })\n    }\n  }\n\n  useDidMountEffect(() => {\n    failureInARow.current = 1\n    failureTypes.current++\n    historyOfFailed.current = [\n      ...historyOfFailed.current,\n      {\n        desired: STRING[0] === ' ' ? 'Space' : STRING[0],\n        pressed: keyDown === ' ' ? 'Space' : keyDown,\n        previous: prelastKey.current,\n      },\n    ]\n    // console.log(historyOfFailed.current)\n\n    failedTypeStatus.current = true\n  }, [test])\n  const [reseting, setReseting] = useState(0)\n\n  const handleReset = () => {\n    successAndFailedTypes.current = 0\n    failureTypes.current = 0\n    failureInARow.current = 0\n    setStreakRow(0)\n\n    failedTypeStatus.current = false\n    escapeFailedTypeStatus.current = false\n    failedTypesIndexes.current = []\n\n    historyOfFailed.current = []\n    setSTRING(currentString)\n    setReseting((prev) => prev + 1)\n  }\n\n  const [punctuation, setPunctuation] = useLocalStorage(`BK-punctuation`, true)\n  const [caseSensitivity, setCaseSensetivity] = useLocalStorage(`BK-case`, true)\n\n  const renders = useRef<number>(0)\n\n  useEffect(() => {\n    renders.current++\n  })\n\n  const [running, setRunning] = useState(false)\n\n  useDidMountEffect(() => {\n    setRunning(true)\n\n    let id = setTimeout(() => setRunning(false), 2000)\n\n    return () => clearTimeout(id)\n  }, [successAndFailedTypes.current])\n\n  const [fontW, setFontW] = useLocalStorage(`BC-fontWeight`, false)\n  const handleFW = () => setFontW((prev) => !prev)\n\n  const [pointer, setPointer] = useLocalStorage(`BC-pointer`, true)\n\n  const [show, setShow] = useLocalStorage<[boolean, boolean, boolean, boolean]>(\n    `BC-show`,\n    [false, true, true, true]\n  )\n\n  const handleShow = (num: 0 | 1 | 2 | 3) => {\n    if (num === 0) {\n      setShow((prev) => [!prev[0], prev[1], prev[2], prev[3]])\n    }\n  }\n\n  const { themeColor1 } = useColor()\n\n  const [isFirst, setIsFirst] = useLocalStorage(`BC-isFIrst`, false)\n\n  useDidMountEffect(() => {}, [successAndFailedTypes])\n\n  return (\n    <>\n      <motion.div\n        // animate={{ scale: width >= 1500 ? 1 : width > 1300 ? 0.85 : 0.75 }}\n        className={`w-f font-courier my-12 flex min-h-[830px] border-black  ${`font-CourierC`}\n       flex-col items-center justify-start opacity-${\n         //  appear || demo || 0\n         100\n       } duration-00 transition ease-in-out`}\n      >\n        <div className=\" w-f  flex flex-col items-center justify-center border-black\">\n          <div\n            className={` mt-6\n        flex flex-col items-center justify-center `}\n          >\n            <RUSBOOKBook STRING={STRING} fontW={fontW} />\n            {hightlighter && (\n              <BOOKLayout STRING={STRING} highlighter={hightlighter} />\n            )}\n            {hightlighter && (\n              <BOOKfailures\n                failedTypesIndexes={failedTypesIndexes.current}\n                highlighter={hightlighter}\n              />\n            )}\n            {pointer && <BOOKpointer overall={successAndFailedTypes.current} />}\n            {/* test */}\n          </div>\n        </div>\n        <div\n          className={`py px translate -x-[50px] my-3 mt-10 h-[1px] w-[1000px] ${themeColor1.bg.t200}`}\n        />\n        <BOOKkeyboard\n          isLocalEng={false}\n          show={show}\n          handleShow={handleShow}\n          handleLanguage={handleLanguage}\n        />\n        <div\n          className={`py px translate-x- [50px] my-3 h-[1px] w-[1000px] ${themeColor1.bg.t200}`}\n        />\n        <BOOKbuttons\n          highlighter={hightlighter}\n          setHighlighter={setHighlighter}\n          punctuation={punctuation}\n          caseSensitivity={caseSensitivity}\n          setCaseSensetivity={setCaseSensetivity}\n          setPunctuation={setPunctuation}\n          caps={capsKey}\n          capsError={capsError.current}\n          running={running}\n          handleReset={handleReset}\n          handleTest={() => {}}\n          fontW={fontW}\n          handleFW={handleFW}\n          pointer={pointer}\n          setPointer={setPointer}\n        />\n        <div\n          className={`py px translate-x- [50px] my-3 h-[1px] w-[1000px] ${themeColor1.bg.t200}`}\n        />\n\n        <div className={`z-60`}>\n          <BOOKstats\n            show={true}\n            overall={successAndFailedTypes.current}\n            failedTypesIndexes={failedTypesIndexes.current}\n            reseting={reseting}\n            keyboard={show[0]}\n          />\n        </div>\n        <div\n          className={`py px translate-x- [50px] my-3 h-[1px] w-[1000px] ${themeColor1.bg.t200}`}\n        />\n        <RUSBOOKstring\n          show={true}\n          currentString={currentString}\n          handleStringErase={handleStringErase}\n          handleStringNoErase={handleStringNoErase}\n          overall={successAndFailedTypes.current}\n          uppercase={shiftKey || capsKey}\n          punctuation={punctuation}\n          caseSensitivity={caseSensitivity}\n          running={running}\n        />\n      </motion.div>\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/authorization/signup/AUTH.signup.container.tsx",["648","649","650","651","652"],"import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../../../context/AuthContext'\nimport { useHttp } from '../../../hooks/http.hook'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { PasswordState, UsernameState } from '../auth.types'\nimport { AUTHlsignup } from './AUTH.signup'\nimport { signupPasswordCheck, signUpUsernameCheck } from './signupUtils'\n\ninterface IProps {\n  setAuthOpen: (auth: boolean) => void\n}\n\nexport const AUTHsignupContainer: React.FC<IProps> = ({ setAuthOpen }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [password2, setPassword2] = useState('')\n\n  const [usernameMessage, setUsernameMessage] = useState<null | string>(null)\n  const [passwordMessage, setPasswordMessage] = useState<null | string>(null)\n  const [password2Message, setPassword2Message] = useState<null | string>(null)\n\n  const [usernameState, setUsernameState] = useState<UsernameState>('default')\n  const [passwordState, setPasswordState] = useState<PasswordState>('default')\n  const [password2State, setPassword2State] = useState<UsernameState>('default')\n\n  const [loading, setLoading] = useState(false)\n\n  const { loading: loadingAuth, request, error, clearError } = useHttp()\n\n  // useEffect(() => {\n  //   setLoading(loadingAuth)\n  // }, [loadingAuth])\n\n  // useDidMountEffect(() => {\n  //   if (loading) {\n  //     setLoadingOn()\n  //   } else {\n  //     setLoadingOff()\n  //   }\n  // }, [loading])\n\n  useDidMountEffect(() => {\n    if (error === 'TAKEN') {\n      setUsernameState('error')\n      setUsernameMessage('username is already taken')\n    }\n  }, [error])\n\n  useDidMountEffect(() => {\n    setUsernameState('default')\n    setUsernameMessage('')\n\n    let id0 = setTimeout(\n      () => setUsernameState(signUpUsernameCheck(username)[0]),\n      1000\n    )\n    let id1 = setTimeout(\n      () => setUsernameMessage(signUpUsernameCheck(username)[1]),\n      1000\n    )\n\n    return () => {\n      clearTimeout(id0)\n      clearTimeout(id1)\n    }\n  }, [username])\n\n  useDidMountEffect(() => {\n    setPasswordState('default')\n    setPasswordMessage('')\n    let id0 = setTimeout(\n      () => setPasswordState(signupPasswordCheck(password)[0]),\n      1000\n    )\n    let id1 = setTimeout(\n      () => setPasswordMessage(signupPasswordCheck(password)[1]),\n      1000\n    )\n\n    return () => {\n      clearTimeout(id0)\n      clearTimeout(id1)\n    }\n  }, [password])\n\n  useDidMountEffect(() => {\n    setPassword2State('default')\n    setPassword2Message('')\n\n    let id0 = setTimeout(() => {\n      if (password === password2) {\n        setPassword2State('success')\n        setPassword2Message('')\n      } else {\n        setPassword2State('error')\n        setPassword2Message('passwords do not match')\n      }\n    }, 1000)\n\n    return () => {\n      clearTimeout(id0)\n    }\n  }, [password2])\n\n  const [noErrors, setNoErrors] = useState(true)\n\n  useDidMountEffect(() => {\n    if (\n      usernameState === 'error' ||\n      passwordState === 'error' ||\n      password2State === 'error' ||\n      // !username ||\n      // !password ||\n      !password2\n    ) {\n      setNoErrors(false)\n    } else {\n      setNoErrors(true)\n    }\n  }, [usernameState, passwordState, password2State])\n\n  const auth = useContext(AuthContext)\n\n  const handleSumbit = async () => {\n    if (!username) {\n      setUsernameState(signUpUsernameCheck(username)[0])\n      setUsernameMessage(signUpUsernameCheck(username)[1])\n    }\n\n    if (!password) {\n      setPasswordState(signupPasswordCheck(password)[0])\n      setPasswordMessage(signupPasswordCheck(password)[1])\n    }\n\n    if (!password2 || password2 !== password) {\n      setPassword2State('error')\n      setPassword2Message('passwords do not match')\n    }\n\n    if (!noErrors || !username || !password || !password2) return\n    // setTimeout(() => setOpenOff(), 100)\n\n    // setTimeout(() => signUp({ username, password }), 200)\n\n    try {\n      const data = await request('/api/auth/register/', 'POST', {\n        email: username,\n        password,\n      })\n      setTimeout(async () => {\n        try {\n          const data = await request('/api/auth/login/', 'POST', {\n            email: username,\n            password,\n          })\n\n          auth.login(data.token, data.userId, username)\n\n          setTimeout(() => {\n            setUsername('')\n            setPassword('')\n            setPassword2('')\n            setUsernameState('default')\n            setPasswordState('default')\n            setPassword2State('default')\n            setUsernameMessage('')\n            setPasswordMessage('')\n            setPassword2Message('')\n          }, 50)\n        } catch {\n          setTimeout(() => setAuthOpen(false), 25)\n        }\n      }, 500)\n\n      setTimeout(() => setAuthOpen(false), 25)\n    } catch {\n      setUsernameState(`error`)\n      setPasswordState(`error`)\n      setPassword2State(`error`)\n\n      setUsernameMessage(`try again please`)\n      setPasswordMessage(`try again please`)\n      setPassword2Message(`try again please`)\n\n      setTimeout(() => {\n        setUsernameState('default')\n        setPasswordState('default')\n        setPassword2State('default')\n        setUsernameMessage('')\n        setPasswordMessage('')\n        setPassword2Message('')\n      }, 1550)\n    }\n  }\n\n  return (\n    <>\n      <AUTHlsignup\n        username={username}\n        setUsername={setUsername}\n        password={password}\n        setPassword={setPassword}\n        password2={password2}\n        setPassword2={setPassword2}\n        usernameMessage={usernameMessage}\n        passwordMessage={passwordMessage}\n        password2Message={password2Message}\n        usernameState={usernameState}\n        passwordState={passwordState}\n        password2State={password2State}\n        noErrors={noErrors}\n        handleSubmit={handleSumbit}\n        isLoading={loading}\n      />\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/BOOK.container.tsx",["653","654","655","656","657"],"import React, { useState, useEffect, useRef } from 'react'\nimport { BOOKBook } from './components/BOOK.book'\nimport { BOOKLayout } from './components/BOOK.layout'\n\nimport { capitals, KEYS, notCapitals } from './components/strings/strings'\n\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { BOOKpointer } from './components/BOOK.pointer'\nimport { BOOKbuttons } from './components/BOOK.buttons'\nimport { BOOKstring } from './components/strings/BOOK.string'\nimport { moveString } from './components/strings/stringFormation'\nimport { useKeyPress } from '../../utils/useKeyPress'\nimport { BOOKfailures } from './components/BOOK.failures'\nimport { BOOKstats } from './components/BOOK.stats'\nimport { lorem as letter1, lorem } from './../../static/letters/lorem'\nimport { gonewiththewind as letter2 } from './../../static/letters/gonewiththewind'\nimport { thelordoftherings as letter3 } from './../../static/letters/thelordoftherings'\nimport { robinson as letter4 } from './../../static/letters/robinson'\nimport { the1984 as letter5 } from './../../static/letters/the1984'\nimport { thegreatgatsby as letter6 } from './../../static/letters/thegreatgatsby'\nimport { tokillamockinbird as letter7 } from './../../static/letters/tokillamockinbird'\nimport { lionwitch as letter8 } from './../../static/letters/lionwitch'\nimport useLocalStorage from '../../hooks/useLocalStorage'\nimport { BOOKkeyboard } from './components/BOOK.keyboard'\n\nimport { motion } from 'framer-motion'\nimport useColor from '../../hooks/useColor'\n\ninterface IProps {\n  handleLanguage: () => void\n}\n\nexport const BOOKContainer: React.FC<IProps> = ({ handleLanguage }) => {\n  // const startingLetter = Array.from({ length: 500 }, () => 'A').join('') /////////////////////////////////\n\n  // const [currentString, setCurrentString] = useLocalStorage(\n  //   'BK-current string',\n  //   [letter1, letter2, letter3, letter4, letter5, letter6, letter7, letter8][\n  //     Math.floor(Math.random() * 8)\n  //   ]\n  // )\n  const [currentString, setCurrentString] = useState(\n    [letter1, letter2, letter3, letter4, letter5, letter6, letter7, letter8][\n      Math.floor(Math.random() * 8)\n    ]\n  )\n\n  const [STRING, setSTRING] = useLocalStorage('BK-STRING', currentString)\n\n  useEffect(() => {\n    setSTRING(currentString)\n  }, [])\n\n  function handleStringErase(STR: string): void {\n    setCurrentString(STR)\n    setSTRING(STR)\n    successAndFailedTypes.current = 0\n    failedTypesIndexes.current = []\n    failureTypes.current = 0\n  }\n\n  function handleStringNoErase(STR: string): void {\n    setCurrentString(STR)\n    setSTRING(moveString(STR, successAndFailedTypes.current))\n  }\n\n  const [keyDown, setKeyDown] = useState('')\n\n  const successAndFailedTypes = useRef(0)\n  const failureTypes = useRef(0)\n  const failureInARow = useRef(0)\n  // const streakRow = useRef(0)\n  const [streakRow, setStreakRow] = useState(0)\n\n  const failedTypeStatus = useRef(false)\n  const escapeFailedTypeStatus = useRef(false)\n  const failedTypesIndexes = useRef<number[]>([])\n\n  const historyOfFailed = useRef<\n    {\n      desired: string\n      pressed: string\n      previous: string\n    }[]\n  >([])\n\n  const lastKey = useRef('')\n  const prelastKey = useRef('')\n\n  const [hightlighter, setHighlighter] = useLocalStorage('highlight', false)\n\n  const caps = useKeyPress('CapsLock')\n  const shift = useKeyPress('Shift')\n\n  const [capsKey, setCapsKey] = useState(false)\n  const [shiftKey, setShiftKey] = useState(false)\n\n  useDidMountEffect(() => {\n    setCapsKey(caps)\n  }, [caps])\n\n  useDidMountEffect(() => {\n    setShiftKey(shift)\n  }, [shift])\n\n  useDidMountEffect(() => {\n    if (!caps && !shift && capitals.includes(keyDown)) {\n      setCapsKey(true)\n    }\n    if (caps && notCapitals.includes(keyDown)) {\n      setCapsKey(false)\n    }\n  }, [keyDown])\n\n  const capsError = useRef(0)\n\n  useEffect(() => {\n    prelastKey.current = lastKey.current\n  }, [keyDown])\n\n  const handleEvent = (event: KeyboardEvent) => {\n    const { key } = event\n    // console.log(\n    //   `key: ${key} , STRING[0]: ${STRING[0]}, is===? ${\n    //     key === STRING[0] ? `yes` : `no`\n    //   }`\n    // )\n\n    if (KEYS.includes(key)) {\n      setKeyDown(key)\n      setKeyDown('')\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEvent)\n    return () => {\n      window.removeEventListener('keydown', handleEvent)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (keyDown === STRING[0]) {\n      // SUCCESS()\n      setIncreaser((prev) => prev + 1)\n    } else if (keyDown !== STRING[0] && KEYS.includes(keyDown)) {\n      FAILURE()\n      if (keyDown.toLowerCase() === STRING[0].toLowerCase() && capsKey) {\n        capsError.current++\n      }\n    }\n\n    if (keyDown === ' ') {\n      lastKey.current = 'Space'\n    } else if (KEYS.includes(keyDown)) {\n      lastKey.current = keyDown\n    }\n  }, [keyDown])\n\n  const [increaser, setIncreaser] = useState(0)\n\n  useDidMountEffect(() => {\n    SUCCESS()\n  }, [increaser])\n\n  const [test, setTest] = useState(0)\n\n  const SUCCESS = (): void => {\n    // setStreakRow(0)\n    setSTRING((str) => str.substring(1) + str[0])\n    successAndFailedTypes.current++\n    failedTypesIndexes.current = failedTypesIndexes.current.map((el) => el + 1)\n    // .filter((el) => el <= 245)\n    if (failedTypeStatus.current && !escapeFailedTypeStatus.current) {\n      // setTimeout(() => {\n      // setTest((prev) => prev + 10)\n      failedTypesIndexes.current = [...failedTypesIndexes.current, 1]\n      // }, 10)\n    }\n    failedTypeStatus.current = false\n    if (escapeFailedTypeStatus.current) {\n      escapeFailedTypeStatus.current = false\n    }\n    if (failureInARow.current !== 0) {\n      failureInARow.current = 0\n    }\n  }\n\n  function FAILURE(): void {\n    if (streakRow === 0 && keyDown === STRING[1]) {\n      setStreakRow((prev) => prev + 1)\n      // console.log(1)\n    } else if (streakRow === 1 && keyDown === STRING[2]) {\n      setStreakRow((prev) => prev + 1)\n      // console.log(2)\n    } else if (streakRow === 2 && keyDown === STRING[3]) {\n      // setIncreaser((prev) => prev + 1)\n      SUCCESS()\n      // setIncreaser((prev) => prev + 1)\n      // setIncreaser((prev) => prev + 1)\n      // setIncreaser((prev) => prev + 1)\n      setTimeout(() => setIncreaser((prev) => prev + 1))\n      setTimeout(() => setIncreaser((prev) => prev + 1))\n      setTimeout(() => setIncreaser((prev) => prev + 1))\n      // setIncreaser((prev) => prev + 1)\n      // setIncreaser((prev) => prev + 1)\n      escapeFailedTypeStatus.current = true\n      failureTypes.current--\n      setStreakRow(0)\n      // console.log(3)\n    } else {\n      setStreakRow(0)\n      // console.log(0)\n    }\n\n    if (failureInARow.current === 0) {\n      setTest((prev) => prev + 1)\n      // setTimeout(() => {\n      failureInARow.current = 1\n      failureTypes.current++\n      // historyOfFailed.current = [\n      //   ...historyOfFailed.current,\n      //   {\n      //     desired: STRING[0] === ' ' ? 'Space' : STRING[0],\n      //     pressed: keyDown === ' ' ? 'Space' : keyDown,\n      //     previous: prelastKey.current,\n      //   },\n      // ]\n      // console.log(historyOfFailed.current)\n\n      failedTypeStatus.current = true\n      // })\n    }\n  }\n\n  useDidMountEffect(() => {\n    failureInARow.current = 1\n    failureTypes.current++\n    historyOfFailed.current = [\n      ...historyOfFailed.current,\n      {\n        desired: STRING[0] === ' ' ? 'Space' : STRING[0],\n        pressed: keyDown === ' ' ? 'Space' : keyDown,\n        previous: prelastKey.current,\n      },\n    ]\n    // console.log(historyOfFailed.current)\n\n    failedTypeStatus.current = true\n  }, [test])\n  const [reseting, setReseting] = useState(0)\n\n  const handleReset = () => {\n    successAndFailedTypes.current = 0\n    failureTypes.current = 0\n    failureInARow.current = 0\n    setStreakRow(0)\n\n    failedTypeStatus.current = false\n    escapeFailedTypeStatus.current = false\n    failedTypesIndexes.current = []\n\n    historyOfFailed.current = []\n    setSTRING(currentString)\n    setReseting((prev) => prev + 1)\n  }\n\n  const [punctuation, setPunctuation] = useLocalStorage(`BK-punctuation`, true)\n  const [caseSensitivity, setCaseSensetivity] = useLocalStorage(`BK-case`, true)\n\n  const renders = useRef<number>(0)\n\n  useEffect(() => {\n    renders.current++\n  })\n\n  const [running, setRunning] = useState(false)\n\n  useDidMountEffect(() => {\n    setRunning(true)\n\n    let id = setTimeout(() => setRunning(false), 2000)\n\n    return () => clearTimeout(id)\n  }, [successAndFailedTypes.current])\n\n  const [fontW, setFontW] = useLocalStorage(`BC-fontWeight`, false)\n  const handleFW = () => setFontW((prev) => !prev)\n\n  const [pointer, setPointer] = useLocalStorage(`BC-pointer`, true)\n\n  const [show, setShow] = useLocalStorage<[boolean, boolean, boolean, boolean]>(\n    `BC-show`,\n    [false, true, true, true]\n  )\n\n  const handleShow = (num: 0 | 1 | 2 | 3) => {\n    if (num === 0) {\n      setShow((prev) => [!prev[0], prev[1], prev[2], prev[3]])\n    }\n  }\n\n  const { themeColor1 } = useColor()\n\n  const [isFirst, setIsFirst] = useLocalStorage(`BC-isFIrst`, false)\n\n  useDidMountEffect(() => {}, [successAndFailedTypes])\n\n  return (\n    <>\n      <motion.div\n        // animate={{ scale: width >= 1500 ? 1 : width > 1300 ? 0.85 : 0.75 }}\n        className={`w-f font-courier my-12 flex min-h-[830px] border-black  ${`font-CourierC`}\n       flex-col items-center justify-start opacity-${\n         //  appear || demo || 0\n         100\n       } duration-00 transition ease-in-out`}\n      >\n        <div className=\" w-f  flex flex-col items-center justify-center border-black\">\n          <div\n            className={` mt-6\n        flex flex-col items-center justify-center `}\n          >\n            <BOOKBook STRING={STRING} fontW={fontW} />\n            {hightlighter && (\n              <BOOKLayout STRING={STRING} highlighter={hightlighter} />\n            )}\n            {hightlighter && (\n              <BOOKfailures\n                failedTypesIndexes={failedTypesIndexes.current}\n                highlighter={hightlighter}\n              />\n            )}\n            {pointer && <BOOKpointer overall={successAndFailedTypes.current} />}\n            {/* test */}\n          </div>\n        </div>\n        <div\n          className={`py px translate -x-[50px] my-3 mt-10 h-[1px] w-[1000px] ${themeColor1.bg.t200}`}\n        />\n        <BOOKkeyboard\n          isLocalEng={true}\n          show={show}\n          handleShow={handleShow}\n          handleLanguage={handleLanguage}\n        />\n        <div\n          className={`py px translate-x- [50px] my-3 h-[1px] w-[1000px] ${themeColor1.bg.t200}`}\n        />\n        <BOOKbuttons\n          highlighter={hightlighter}\n          setHighlighter={setHighlighter}\n          punctuation={punctuation}\n          caseSensitivity={caseSensitivity}\n          setCaseSensetivity={setCaseSensetivity}\n          setPunctuation={setPunctuation}\n          caps={capsKey}\n          capsError={capsError.current}\n          running={running}\n          handleReset={handleReset}\n          handleTest={() => {}}\n          fontW={fontW}\n          handleFW={handleFW}\n          pointer={pointer}\n          setPointer={setPointer}\n        />\n        <div\n          className={`py px translate-x- [50px] my-3 h-[1px] w-[1000px] ${themeColor1.bg.t200}`}\n        />\n\n        <div className={`z-60`}>\n          <BOOKstats\n            show={true}\n            overall={successAndFailedTypes.current}\n            failedTypesIndexes={failedTypesIndexes.current}\n            reseting={reseting}\n            keyboard={show[0]}\n          />\n        </div>\n        <div\n          className={`py px translate-x- [50px] my-3 h-[1px] w-[1000px] ${themeColor1.bg.t200}`}\n        />\n        <BOOKstring\n          show={true}\n          currentString={currentString}\n          handleStringErase={handleStringErase}\n          handleStringNoErase={handleStringNoErase}\n          overall={successAndFailedTypes.current}\n          uppercase={shiftKey || capsKey}\n          punctuation={punctuation}\n          caseSensitivity={caseSensitivity}\n          running={running}\n        />\n      </motion.div>\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/authorization/login/AUTH.login.container.tsx",["658","659"],"import React, { useContext, useState } from 'react'\nimport { AuthContext } from '../../../context/AuthContext'\nimport { useHttp } from '../../../hooks/http.hook'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { AUTHlogin } from './AUTH.login'\n\ninterface IProps {\n  setAuthOpen: (auth: boolean) => void\n}\n\nexport const AUTHloginContainer: React.FC<IProps> = ({ setAuthOpen }) => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const [error, setError] = useState(false)\n\n  const [success, setSuccess] = useState(false)\n\n  const [rememberMe, setRememberMe] = useState(true)\n\n  const { loading, request, error: hookError, clearError } = useHttp()\n\n  useDidMountEffect(() => {\n    handleIncorrectUsernameOrPassword()\n  }, [hookError])\n\n  const auth = useContext(AuthContext)\n\n  const handleSubmit = async () => {\n    // console.log(users)\n    // console.log(username)\n    // console.log(password)\n    // console.log(response)\n    // setTimeout(() => {\n    // if (response) {\n    // logIn(response, rememberMe)\n    try {\n      const data = await request('/api/auth/login/', 'POST', {\n        email: username,\n        password,\n      })\n\n      setSuccess(true)\n\n      setTimeout(() => {\n        auth.login(data.token, data.userId, username)\n        setUsername('')\n        setPassword('')\n        setAuthOpen(false)\n        setSuccess(false)\n      }, 500)\n    } catch {\n      handleIncorrectUsernameOrPassword()\n    }\n\n    // setUsername('')\n    // setPassword('')\n    // setOpenOff()\n    // return\n    // }\n    // handleIncorrectUsernameOrPassword()\n    // }, 0)\n  }\n\n  const handleIncorrectUsernameOrPassword = (): void => {\n    setTimeout(() => {\n      setError(true)\n    }, 300)\n\n    setTimeout(() => {\n      setError(false)\n    }, 1500)\n  }\n\n  return (\n    <>\n      <AUTHlogin\n        username={username}\n        setUsername={setUsername}\n        setPassword={setPassword}\n        password={password}\n        error={error}\n        success={success}\n        rememberMe={rememberMe}\n        setRememberMe={setRememberMe}\n        handleSubmit={handleSubmit}\n      />\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/utils/useKeyPress.ts",["660"],"import { useState, useEffect } from 'react'\n\nexport function useKeyPress(targetKey: string): boolean {\n  const [keyPressed, setKeyPressed] = useState(false)\n\n  const downHandler = (event: KeyboardEvent) => {\n    const { key } = event\n    if (targetKey === key) {\n      setKeyPressed(true)\n    }\n  }\n\n  const upHandler = (event: KeyboardEvent) => {\n    const { key } = event\n    if (targetKey === key) {\n      setKeyPressed(false)\n    }\n  }\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, [])\n  return keyPressed\n}\n","/Users/skywalker/Web/KBRD/client/src/hooks/http.hook.ts",[],"/Users/skywalker/Web/KBRD/client/src/components/authorization/signup/signupUtils.ts",["661"],"import useLanguage from '../../../hooks/useLanguage'\nimport { PasswordState } from '../auth.types'\nimport { UsernameState } from '../auth.types'\n\nconst usernameAllowed =\n  `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890_`.split('')\n\nexport const signUpUsernameCheck = (\n  username: string\n): [status: UsernameState, message: string] => {\n  if (!username.split('').every((el) => usernameAllowed.includes(el))) {\n    return ['error', 'username must contain only a-z, A-Z, 0-9, _']\n  } else if (\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '_'].includes(\n      username[0]\n    )\n  ) {\n    return ['error', 'username must start with a letter']\n  } else if (username.length <= 1) {\n    return ['error', 'username must contain at least 2 characters']\n  } else if (username.length > 25) {\n    return ['error', 'username must contain 2-25 characters']\n  } else if (username.split('').every((el) => '1234567890_'.includes(el))) {\n    return ['error', 'username must contain a-z or A-Z']\n  } else {\n    return ['success', '']\n  }\n}\n\nconst passwordAllowed =\n  `abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-_/!@#$%^&*`.split(\n    ''\n  )\n\nconst weaknessCheck = (password: string): boolean => {\n  let arr = password.split('')\n  if (!arr.some((el) => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.includes(el))) {\n    return true\n  } else if (!arr.some((el) => '-_/!@#$%^&*1234567890'.includes(el))) {\n    return true\n  }\n  return false\n}\n\nexport const signupPasswordCheck = (\n  password: string\n): [status: PasswordState, message: string] => {\n  if (!password.split('').every((el) => passwordAllowed.includes(el))) {\n    return ['error', 'only a-z, A-Z, 0-9, -_/!@#$%^&*']\n  } else if (password.length <= 3) {\n    return ['error', 'password must contain at least 4 characters']\n  } else if (password.length > 30) {\n    return ['error', 'password must contain 2-30 characters']\n  } else if (1 > 2) {\n    return ['error', 'this username is already taken']\n  } else if (weaknessCheck(password)) {\n    return ['warning', 'password is too weak']\n  } else {\n    return ['success', '']\n  }\n}\n","/Users/skywalker/Web/KBRD/client/src/static/letters/the1984.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/gonewiththewind.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/thegreatgatsby.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/robinson.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/thelordoftherings.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/lorem.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/tokillamockinbird.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/lionwitch.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/rus/robinsonRus.ts",[],["662","663"],"/Users/skywalker/Web/KBRD/client/src/static/letters/rus/don.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/rus/gogol.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/rus/karamazovbrothers.ts",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/rus/karenina.ts",[],"/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.main.tsx",["664","665","666","667","668","669"],"import React, { useEffect, useState, useRef } from 'react'\nimport useLanguage from '../../../hooks/useLanguage'\nimport useLocalStorage from '../../../hooks/useLocalStorage'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { TAPREDONEbuttons } from './buttons/TAP.REDONE.buttons'\nimport { TAPREDONEstats } from './TAP.REDONE.stats'\nimport { TAPREDONEtap } from './TAP.REDONE.tap'\nimport { TAPtimer } from './TAP.timer'\n\nexport type KeyColor = 'red' | 'emerald' | 'cyan' | 'amber' | 'fuchsia' | 'pink'\n\nexport enum State {\n  STOP = `STOP`,\n  RUN = `RUN`,\n  PAUSE = `PAUSE`,\n}\n\nexport enum AppearType {\n  INTERVAL = `INTERVAL`,\n  PREPARED = `PREPARED`,\n}\n\ninterface IProps {\n  demo: boolean\n  trainingLanguage: boolean\n  handleLanguage: () => void\n}\n\nexport const TAPREDONEshooting: React.FC<IProps> = ({\n  demo,\n  trainingLanguage,\n  handleLanguage,\n}) => {\n  const success = useRef(0)\n  const errors = useRef(0)\n\n  const [missclicks, setMissclicks] = useState(0)\n\n  // const [state, setState] = useLocalStorage(`TC-state`, State.STOP)\n  const [state, setState] = useState(State.STOP)\n  const [started, setStarted] = useState(false)\n  const [block, setBlock] = useState(false)\n\n  const handleStart = () => {\n    if (!block) {\n      setStarted((prev) => !prev)\n    }\n  }\n\n  const [startingArray, setStartingArray] = useState(\n    Array.from({ length: 19 }, () => null)\n  )\n\n  const [cells, setCells] = useLocalStorage<(null | string)[]>(\n    `TC-cells`,\n    startingArray\n  )\n  const [keyDown, setKeyDown] = useState('')\n  const [lastKey, setLastKey] = useState(``)\n  const [limit, setLimit] = useLocalStorage(`TC-limit`, 18)\n  const [limitMemory, setLimitMemory] = useLocalStorage(`TC-limit-memory`, 18)\n\n  useEffect(() => {\n    if (limit > 19 && cells.length <= 19) {\n      setStartingArray(Array.from({ length: 29 }, () => null))\n      setCells((prev) => [\n        ...prev,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n      ])\n    } else if (limit <= 19 && cells.length > 19) {\n      setStartingArray(Array.from({ length: 19 }, () => null))\n      setCells((prev) => prev.filter((_, i) => i < 19))\n    }\n  }, [limit])\n\n  const [keyColor, setKeyColor] = useLocalStorage<KeyColor>(\n    `TC-keyColor`,\n    'red'\n  )\n  const [keyType, setKeyType] = useLocalStorage<[boolean, boolean, boolean]>(\n    `TC-keyType`,\n    [true, false, false]\n  )\n\n  const part1: string = trainingLanguage\n    ? 'abcdefghijklmnopqrstuvwxyz'\n    : 'абвгдежзийклмнопрстуфхцчшщъыьэюя'\n  const part2: string = '0123456789'\n  const part3: string = `!@#$%^&*()-_=+[]{}:;'\"/?.,<>`\n\n  let l = keyType[0] ? part1 : ''\n  let n = keyType[1] ? part2 : ''\n  let p = keyType[2] ? part3 : ''\n  let alphabet = l + n + p\n\n  const [maxLimit, setMaxLimit] = useState(25)\n  const [lastRemoved, setLastRemoved] = useState(0)\n\n  useEffect(() => {\n    if (alphabet.length >= 29) {\n      setMaxLimit(29)\n    } else {\n      setMaxLimit(alphabet.length)\n    }\n  }, [keyType])\n\n  const pushCell = () => {\n    let allowed = alphabet\n      .split('')\n      .filter((el) => !cells.includes(el) && el !== lastKey)\n\n    if (allowed.length < 1) {\n      gameOver()\n      return\n    }\n\n    let randomNumber = Math.floor(allowed.length * Math.random())\n    let randomChar = allowed[randomNumber]\n\n    let allowedIndexes: number[] = []\n\n    cells.forEach((el, i) => !el && allowedIndexes.push(i))\n    allowedIndexes = allowedIndexes.filter((el) => el !== lastRemoved)\n    const allowedIndex =\n      allowedIndexes[Math.floor(Math.random() * allowedIndexes.length)]\n\n    // console.log(`allowedIndex: ${allowedIndex}`)\n    setLastKey(randomChar)\n    setCells((prev) =>\n      prev.map((el, i) => (i === allowedIndex ? randomChar : el))\n    )\n  }\n\n  const removeCell = (char: string) => {\n    setLastRemoved(cells.indexOf(char))\n    setCells((prev) => prev.map((el) => (el === char ? null : el)))\n  }\n\n  const gameOver = () => {\n    setState(State.STOP)\n    setStarted(false)\n    clearCells()\n  }\n\n  const clearCells = () => {\n    setCells(startingArray)\n  }\n\n  useDidMountEffect(() => {\n    if (appearType === AppearType.PREPARED) return\n\n    if (\n      cells.filter((el) => el).length >= limit ||\n      cells.filter((el) => !el).length < 1\n    ) {\n      gameOver()\n    }\n  }, [cells])\n\n  const handleKeyTypes = (type: 1 | 2 | 3) => {\n    if (type === 1) {\n      if (!keyType[1] && !keyType[2]) return\n      setKeyType((prev) => [!prev[0], prev[1], prev[2]])\n    } else if (type === 2) {\n      if (!keyType[0] && !keyType[2]) return\n      setKeyType((prev) => [prev[0], !prev[1], prev[2]])\n    } else if (type === 3) {\n      if (!keyType[1] && !keyType[0]) return\n      setKeyType((prev) => [prev[0], prev[1], !prev[2]])\n    }\n  }\n\n  const KEYS = (part1 + part2 + part3).split('')\n\n  useDidMountEffect(() => {\n    if (demo) return\n\n    if (keyDown === ' ') handleStart()\n\n    if (!KEYS.includes(keyDown) || state !== State.RUN) return\n\n    if (cells.includes(keyDown)) {\n      success.current++\n\n      if (appearType === AppearType.PREPARED) {\n        setIncreaser((prev) => prev + 1)\n      }\n\n      removeCell(keyDown)\n    } else {\n      errors.current++\n      setMissclicks((prev) => prev + 1)\n    }\n  }, [keyDown])\n\n  useDidMountEffect(() => {\n    if (demo) {\n      gameOver()\n    }\n  }, [demo])\n\n  const handleEvent = (event: KeyboardEvent): void => {\n    // event.preventDefault()\n    if (event.key === ' ') {\n      setSpaceDown(true)\n    }\n    setKeyDown('')\n    setKeyDown(event.key.toLowerCase())\n  }\n\n  const [spaceDown, setSpaceDown] = useState(false)\n\n  const upHandler = (event: KeyboardEvent): void => {\n    if (event.key === ' ') {\n      setSpaceDown(false)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleEvent)\n    window.addEventListener('keyup', upHandler)\n    return () => {\n      window.removeEventListener('keydown', handleEvent)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, [])\n\n  const [appearType, setAppearType] = useLocalStorage<AppearType>(\n    `TC-appear type`,\n    AppearType.PREPARED\n  )\n\n  const [targets, setTargets] = useLocalStorage(`TC-targets`, 5)\n  let Ptargets = targets - 1\n\n  const [interval, setInterval] = useLocalStorage(`TC-interval`, 700)\n  const [tick, setTick] = useState(true)\n\n  const handleTick = () => {\n    setTick((prev) => !prev)\n  }\n  const [increaser, setIncreaser] = useState(0)\n  const [decreaser, setDecreaser] = useState(0)\n\n  useDidMountEffect(() => {\n    pushCell()\n  }, [increaser])\n\n  useDidMountEffect(() => {\n    let randomChar = cells.filter((el) => el)[\n      Math.floor(Math.random() * cells.filter((el) => el).length)\n    ]\n    removeCell(randomChar as string)\n  }, [decreaser])\n\n  useEffect(() => {\n    clearCells()\n\n    if (appearType === AppearType.INTERVAL) {\n      setLimit(limitMemory)\n      return\n    } else {\n      setLimitMemory(limit)\n      setLimit(9)\n    }\n    if (state === State.RUN) {\n      // setTest((prev) => prev + 10)\n      for (let i = 0; i < targets; i++) {\n        setIncreaser((prev) => prev + 1)\n      }\n    }\n  }, [appearType])\n\n  useEffect(() => {\n    clearCells()\n\n    if (appearType === AppearType.INTERVAL || state !== State.RUN) return\n    for (let i = 0; i < targets; i++) {\n      setIncreaser((prev) => prev + 1)\n    }\n  }, [state])\n\n  useEffect(() => {\n    if (appearType !== AppearType.PREPARED || state !== State.RUN) {\n      return\n    }\n    if (cells.filter((el) => el).length < Ptargets) {\n      setIncreaser((prev) => prev + 1)\n    } else if (cells.filter((el) => el).length > targets) {\n      setDecreaser((prev) => prev + 1)\n    }\n  }, [cells, targets])\n\n  useDidMountEffect(() => {\n    if (state !== State.RUN) return\n    if (cells.filter((el) => el).length < targets) {\n      setIncreaser((prev) => prev + 1)\n    } else if (cells.filter((el) => el).length > targets) {\n      // setDecreaser((prev) => prev + 1)\n    }\n  }, [targets])\n\n  useEffect(() => {\n    if (appearType === AppearType.PREPARED) return\n\n    if (state === State.RUN && interval > 50) {\n      pushCell()\n    }\n  }, [tick])\n\n  const { isEng } = useLanguage()\n\n  const swap = () => {\n    let arr1 = 'abcdefghijklmnopqrstuvwxyz'\n    let arr2 = 'абвгдежзийклмнопрстуфхчэшя'\n    if (trainingLanguage) {\n      setCells((prev) =>\n        prev.map((el) => {\n          if (arr1.includes(el as string)) {\n            return arr2[arr1.indexOf(el as string)]\n          } else {\n            return null\n          }\n        })\n      )\n    } else {\n      clearCells()\n      // setStarted(false)\n    }\n  }\n\n  useDidMountEffect(() => {\n    swap()\n  }, [trainingLanguage])\n\n  return (\n    <div\n      className={`flex flex-col items-center justify-center gap-4 ${\n        isEng || `font-CourierC`\n      }`}\n    >\n      <TAPREDONEbuttons\n        demo={demo}\n        state={state}\n        handleStart={handleStart}\n        interval={interval}\n        setInterval={setInterval}\n        keyColor={keyColor}\n        setKeyColor={setKeyColor}\n        keyType={keyType}\n        handleKeyType={handleKeyTypes}\n        limit={limit}\n        setLimit={setLimit}\n        spaceDown={spaceDown}\n        started={started}\n        maxLimit={maxLimit}\n        appearType={appearType}\n        setAppearType={setAppearType}\n        targets={targets}\n        setTargets={setTargets}\n        trainingLanguage={trainingLanguage}\n        handleLanguage={handleLanguage}\n      />\n      <TAPREDONEstats\n        succesed={success.current}\n        errors={errors.current}\n        show={!demo}\n      />\n      <TAPREDONEtap\n        cells={cells}\n        state={state}\n        limit={limit}\n        missclicks={missclicks}\n        handleStart={handleStart}\n        keyColor={keyColor}\n        started={started}\n        setState={setState}\n        block={block}\n        setBlock={setBlock}\n        trainingLanguage={trainingLanguage}\n      />\n      <TAPtimer handleTick={handleTick} interval={interval} />\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/static/letters/rus/asya.ts",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.stats.tsx",["670"],"import React, { useEffect, useState } from 'react'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { BOOKaccuracyCounter } from './stats/B.stats.accuracyCounter'\nimport { BOOKstatsAccuracyWidget } from './stats/B.stats.accuracy.widget'\nimport { BOOKstatsCPMcounter } from './stats/BOOK.stats.CPMcounter'\nimport { BOOKstatsCPMWidget } from './stats/B.stats.cpm.widget'\nimport { LEVELcontainer } from '../../leveling/LEVEL.container'\nimport { BOOKstatsOverallWidget } from './stats/B.stats.overall.widget'\nimport { BOOKstatsErrorsWidget } from './stats/B.stats.error.widget'\nimport useLanguage from '../../../hooks/useLanguage'\n\ninterface IProps {\n  show: boolean\n  overall: number\n  failedTypesIndexes: number[]\n  reseting: any\n  keyboard: boolean\n}\n\nexport const BOOKstats: React.FC<IProps> = ({\n  show,\n  overall,\n  failedTypesIndexes: fti,\n  reseting,\n  keyboard,\n}) => {\n  // const successfulRow = fti.length > 0 ? fti[fti.length - 1] - 1 : overall\n  const [accuracy, setAccuracy] = useState(0)\n  const [CPM, setCPM] = useState(0)\n  const [avgCPM, setAvgCPM] = useState(0)\n\n  const [overallLocal, setOverallLocal] = useState(0)\n  const [errorsLocal, setErrorsLocal] = useState(0)\n\n  useDidMountEffect(() => {\n    if (overall) {\n      setOverallLocal((prev) => prev + 1)\n    }\n  }, [overall])\n\n  useDidMountEffect(() => {\n    if (fti.length) {\n      setErrorsLocal((prev) => prev + 1)\n    }\n  }, [fti.length])\n\n  const [running, setRunning] = useState(false)\n\n  useDidMountEffect(() => {\n    setAccuracy(0)\n    setCPM(0)\n    setAvgCPM(0)\n    setErrorsLocal(0)\n    setOverallLocal(0)\n  }, [reseting])\n\n  useDidMountEffect(() => {\n    setRunning(true)\n\n    let id = setTimeout(() => setRunning(false), 2000)\n\n    return () => clearTimeout(id)\n  }, [overall])\n\n  const [hide, setHide] = useState(false)\n\n  const { isEng } = useLanguage()\n  return (\n    <>\n      <div\n        className={`absolute ${\n          show || `opacity-0`\n        } transition duration-500 ease-in-out ${\n          isEng || `font-CourierC`\n        } translate-y-[225px]`}\n        style={\n          {\n            // transform: `translateY(${appear && show ? 220 : 2000}px)`,\n          }\n        }\n      >\n        <LEVELcontainer\n          overall={overall}\n          fti={fti}\n          errors={errorsLocal}\n          overallLocal={overallLocal}\n          avgCPM={avgCPM}\n          CPM={CPM}\n          accuracy={accuracy}\n          setHide={setHide}\n          keyboard={keyboard}\n        />\n      </div>\n      <div\n        className={`w-1000  borde duration-800 flex select-none items-center justify-center border-black pt-2 pb-2 transition ease-in-out `}\n      >\n        <div\n          className={`w-f borde-red-800 borde mx-8 flex flex-row items-center justify-between text-xl text-gray-600 ${\n            hide && `-z-10`\n          }`}\n        >\n          <div className={`flex items-center justify-center`}>\n            <BOOKstatsOverallWidget overall={overallLocal} />\n          </div>\n\n          <div className={`mr-24 flex items-center justify-center`}>\n            {`\\u00a0`}\n            <div className={`absolute `}>\n              <BOOKstatsAccuracyWidget\n                currentAccuracy={accuracy}\n                // overall={overall}\n                // fti={fti}\n                overall={overallLocal}\n                errors={errorsLocal}\n              />\n            </div>\n          </div>\n\n          <div className={`flex items-center justify-center`}>\n            {`\\u00a0`}\n\n            <div className={`absolute `}>\n              <BOOKstatsCPMWidget CPM={CPM} avgCPM={avgCPM} />\n            </div>\n          </div>\n          <div className={`flex items-center justify-center`}>\n            <BOOKstatsErrorsWidget errors={errorsLocal} />\n          </div>\n        </div>\n      </div>\n      <BOOKstatsCPMcounter\n        overall={overallLocal}\n        setCPM={setCPM}\n        setAvgCPM={setAvgCPM}\n        running={running}\n      />\n      <BOOKaccuracyCounter\n        overall={overall}\n        fti={fti}\n        setAccuracy={setAccuracy}\n        running={running}\n      />\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.pointer.tsx",[],"/Users/skywalker/Web/KBRD/client/src/static/letters/rus/masterimargarita.ts",[],"/Users/skywalker/Web/KBRD/client/src/components/authorization/signup/AUTH.signup.tsx",["671","672","673","674","675"],"import React, { useEffect, useState, KeyboardEvent } from 'react'\nimport {\n  PasswordState,\n  SignupPasswordColor,\n  UsernameState,\n} from '../auth.types'\nimport { SignupUsernameColor } from '../auth.types'\nimport { NBAbutton } from '../../profile/NBA.button'\nimport { NBAinput } from '../../profile/NBA.input'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport useLanguage from '../../../hooks/useLanguage'\n\ninterface IProps {\n  username: string\n  setUsername(username: string): void\n  password: string\n  setPassword(password: string): void\n  password2: string\n  setPassword2(password: string): void\n  usernameMessage: null | string\n  passwordMessage: null | string\n  password2Message: null | string\n  usernameState: UsernameState\n  passwordState: PasswordState\n  password2State: PasswordState\n  noErrors: boolean\n  handleSubmit(): void\n  isLoading: boolean\n}\n\nexport const AUTHlsignup: React.FC<IProps> = ({\n  username,\n  setUsername,\n  password,\n  setPassword,\n  password2,\n  setPassword2,\n  usernameMessage,\n  passwordMessage,\n  password2Message,\n  usernameState,\n  passwordState,\n  password2State,\n  noErrors,\n  handleSubmit,\n  isLoading,\n}) => {\n  const [usernameColor, setUsernameColor] =\n    useState<SignupUsernameColor>('info')\n\n  useEffect(() => {\n    if (usernameState === 'default') setUsernameColor('info')\n    else if (usernameState === 'success') setUsernameColor('success')\n    else if (usernameState === 'error') setUsernameColor('error')\n  }, [usernameState])\n\n  const [passwordColor, setPasswordColor] =\n    useState<SignupPasswordColor>('info')\n\n  useEffect(() => {\n    if (passwordState === 'default') setPasswordColor('info')\n    else if (passwordState === 'success') setPasswordColor('success')\n    else if (passwordState === 'warning') setPasswordColor('warning')\n    else if (passwordState === 'error') setPasswordColor('error')\n  }, [passwordState])\n\n  const [password2Color, setPassword2Color] =\n    useState<SignupUsernameColor>('info')\n\n  useEffect(() => {\n    if (password2State === 'default') setPassword2Color('info')\n    else if (password2State === 'success') setPassword2Color('success')\n    else if (password2State === 'error') setPassword2Color('error')\n  }, [password2State])\n\n  ////////\n\n  const [userEnter, setUserEnter] = useState(0)\n  const [passEnter, setPassEnter] = useState(0)\n  const [pass2Enter, setPass2Enter] = useState(0)\n\n  const [userFocus, setUserFocus] = useState(0)\n  const [passFocus, setPassFocus] = useState(0)\n  const [pass2Focus, setPass2Focus] = useState(0)\n\n  const handleEnterUser = () => {\n    setUserEnter((prev) => prev + 1)\n  }\n\n  const handleEnterPass = () => {\n    setPassEnter((prev) => prev + 1)\n  }\n\n  const handleEnterPass2 = () => {\n    setPassEnter((prev) => prev + 1)\n  }\n\n  useDidMountEffect(() => {\n    if (!username || usernameState === `error`) {\n      return\n    } else if (!password || passwordState === `error`) {\n      setPassFocus((prev) => prev + 1)\n    } else if (!password2 || password2State === `error`) {\n      setPass2Focus((prev) => prev + 1)\n    } else {\n      handleSubmit()\n    }\n  }, [userEnter])\n\n  useDidMountEffect(() => {\n    if (!password || passwordState === `error`) {\n      return\n    } else if (!username || usernameState === `error`) {\n      setUserFocus((prev) => prev + 1)\n    } else if (!password2 || password2State === `error`) {\n      setPass2Focus((prev) => prev + 1)\n    } else {\n      handleSubmit()\n    }\n  }, [passEnter])\n\n  useDidMountEffect(() => {\n    if (!password2 || password2State === `error`) {\n      return\n    } else if (!username || usernameState === `error`) {\n      setUserFocus((prev) => prev + 1)\n    } else if (!password || passwordState === `error`) {\n      setPassFocus((prev) => prev + 1)\n    } else {\n      handleSubmit()\n    }\n  }, [pass2Enter])\n\n  const { isEng } = useLanguage()\n  return (\n    <div\n      className={`font-courier no-select box-border flex flex-col items-center justify-evenly gap-2`}\n      style={{ width: '400px', height: '400px' }}\n    >\n      <div style={{ width: '100%', marginBottom: '' }}>\n        <NBAinput\n          value={username}\n          onChange={setUsername}\n          id={`usernameSignUp`}\n          placeholder={isEng ? `USERNAME` : ` ЛОГИН`}\n          helper={usernameMessage || ` `}\n          error={usernameState === 'error'}\n          success={usernameState === `success`}\n          onEnter={handleEnterUser}\n          focus={userFocus}\n        />\n      </div>\n      <div className={``} style={{ width: '100%' }}>\n        <NBAinput\n          value={password}\n          onChange={setPassword}\n          id={`passwordSignUp`}\n          type={`password`}\n          placeholder={isEng ? `PASSWORD` : `ПАРОЛЬ`}\n          helper={passwordMessage || ` `}\n          error={passwordState === 'error'}\n          success={passwordState === `success`}\n          warning={passwordState === `warning`}\n          onEnter={handleEnterPass}\n          focus={passFocus}\n          password\n        />\n      </div>\n      <div style={{ width: '100%' }}>\n        <NBAinput\n          value={password2}\n          onChange={setPassword2}\n          id={`password2SignUp`}\n          type={`password`}\n          placeholder={isEng ? `PASSWORD` : `ПАРОЛЬ`}\n          helper={password2Message || ` `}\n          error={password2State === 'error'}\n          success={password2State === `success`}\n          warning={password2State === `warning`}\n          onEnter={handleEnterPass2}\n          focus={pass2Focus}\n          password\n          the34\n        />\n      </div>\n      <div className={`flex flex-col gap-2`}>\n        <div className={`flex w-full justify-center`}>\n          <NBAbutton\n            onClick={handleSubmit}\n            tag={isEng ? `SUBMIT` : `ОТПРАВИТЬ `}\n            border={\n              passwordState === `error` ||\n              password2State === `error` ||\n              usernameState === `error` ||\n              !username ||\n              !password\n                ? `border-red-500`\n                : `border-sky-500`\n            }\n            hov={\n              passwordState === `error` ||\n              password2State === `error` ||\n              usernameState === `error` ||\n              !username ||\n              !password\n                ? `bg-red-500`\n                : `bg-sky-500`\n            }\n            bg={\n              passwordState === `error` ||\n              password2State === `error` ||\n              usernameState === `error` ||\n              !username ||\n              !password\n                ? `bg-red-300`\n                : `bg-sky-300`\n            }\n            px={`px-16`}\n            disableCursor={\n              passwordState === `error` ||\n              password2State === `error` ||\n              usernameState === `error` ||\n              !username ||\n              !password ||\n              !password2\n            }\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n",["676","677"],"/Users/skywalker/Web/KBRD/client/src/static/letters/rus/oblomov.ts",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone-rus/components/RUS.BOOK.book.tsx",["678","679","680","681","682","683"],"import React from 'react'\nimport useColor from '../../../hooks/useColor'\nimport useDarkMode from '../../../hooks/useDarkMode'\nimport { useWindowSize } from '../../../hooks/useDimensions'\nimport useLanguage from '../../../hooks/useLanguage'\n\ninterface IProps {\n  STRING: string\n  fontW: boolean\n}\n\nexport const RUSBOOKBook: React.FC<IProps> = ({ STRING, fontW }) => {\n  const RIGHT: string = STRING.slice(0, 35)\n  const RIGHT1: string = STRING.slice(35, 105)\n  const RIGHT2: string = STRING.slice(105, 175)\n  const RIGHT3: string = STRING.slice(175, 245)\n  const LEFT: string = STRING.slice(-35)\n  const LEFT1: string = STRING.slice(-105, -35)\n  const LEFT2: string = STRING.slice(-175, -105)\n  const LEFT3: string = STRING.slice(-245, -175)\n\n  const formating = (str: string) => {\n    return str.replace(/ /g, '\\u00a0')\n  }\n\n  const rowing = (str: string) => {\n    return (\n      <div className={`flex w-full flex-row whitespace-nowrap`}>\n        {formating(str)}\n      </div>\n    )\n  }\n\n  const { isDarkMode } = useDarkMode()\n  const { isEng } = useLanguage()\n\n  const { width } = useWindowSize()\n  let xl = width >= 1500\n\n  const { themeColor1 } = useColor()\n  return (\n    <div\n      className={`w-1000 ${\n        !fontW ? `font-CourierC` : `font-CourierC font-extrabold`\n      } visible z-40 flex flex-col  transition duration-700 ease-in-out`}\n    >\n      <div\n        className={`w-1000  z-40 flex flex-col space-y-4 text-2xl ${\n          isDarkMode ? `text-[rgb(17 24 39)]` : themeColor1.text.t100\n        } `}\n      >\n        <div className={``}>{rowing(LEFT1)}</div>\n\n        <div className={`flex flex-row  `}>\n          <div>{rowing(LEFT)}</div>\n\n          <div className={isDarkMode ? `text-gray-50` : `text-black`}>\n            {rowing(RIGHT)}\n          </div>\n        </div>\n\n        <div className={``}>{rowing(RIGHT1)}</div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/strings/stringFormation.ts",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/strings/strings.ts",["684"],"export const notCapitals = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n]\n\nexport const capitals = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n]\n\nexport const KEYS = [\n  ' ',\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '0',\n  '!',\n  '@',\n  '#',\n  '$',\n  '%',\n  '&',\n  '*',\n  '(',\n  ')',\n  '-',\n  '_',\n  '=',\n  '+',\n  `\\\\`,\n  '|',\n  '[',\n  ']',\n  '{',\n  '}',\n  ';',\n  ':',\n  `'`,\n  '/',\n  '?',\n  '.',\n  '>',\n  ',',\n  '<',\n  `\"`,\n]\n\nconst forbidden = [`—`, '‘']\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone-rus/components/strings/strings.ts",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.failures.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.book.tsx",["685","686","687","688","689","690"],"import React from 'react'\nimport useColor from '../../../hooks/useColor'\nimport useDarkMode from '../../../hooks/useDarkMode'\nimport { useWindowSize } from '../../../hooks/useDimensions'\nimport useLanguage from '../../../hooks/useLanguage'\n\ninterface IProps {\n  STRING: string\n  fontW: boolean\n}\n\nexport const BOOKBook: React.FC<IProps> = ({ STRING, fontW }) => {\n  const RIGHT: string = STRING.slice(0, 35)\n  const RIGHT1: string = STRING.slice(35, 105)\n  const RIGHT2: string = STRING.slice(105, 175)\n  const RIGHT3: string = STRING.slice(175, 245)\n  const LEFT: string = STRING.slice(-35)\n  const LEFT1: string = STRING.slice(-105, -35)\n  const LEFT2: string = STRING.slice(-175, -105)\n  const LEFT3: string = STRING.slice(-245, -175)\n\n  const formating = (str: string) => {\n    return str.replace(/ /g, '\\u00a0')\n  }\n\n  const rowing = (str: string) => {\n    return (\n      <div className={`flex w-full flex-row whitespace-nowrap`}>\n        {formating(str)}\n      </div>\n    )\n  }\n\n  const { isDarkMode } = useDarkMode()\n  const { isEng } = useLanguage()\n\n  const { width } = useWindowSize()\n  let xl = width >= 1500\n\n  const { themeColor1 } = useColor()\n  return (\n    <div\n      className={`w-1000 ${\n        fontW ? `font-courier font-[100]` : ``\n      } visible z-40 flex flex-col  transition duration-700 ease-in-out`}\n    >\n      <div\n        className={`w-1000  z-40 flex flex-col space-y-4 text-2xl ${\n          isDarkMode ? `text-[rgb(17 24 39)]` : themeColor1.text.t100\n        } `}\n      >\n        {/* <div>{`\\u00a0`}</div> */}\n        {/* <div>{`\\u00a0`}</div> */}\n\n        {/* {rowing(LEFT3)} */}\n        {/* <div className={`text-gray-700`}>{rowing(LEFT3)}</div> */}\n\n        {/* <div className={`text-gray-800`}>{rowing(LEFT2)}</div> */}\n        <div className={``}>{rowing(LEFT1)}</div>\n\n        <div\n          className={`flex flex-row  ${\n            `` // isDarkMode ? `text-gray-50` : `text-black`\n          }`}\n        >\n          <div>{rowing(LEFT)}</div>\n\n          <div className={isDarkMode ? `text-gray-50` : `text-black`}>\n            {rowing(RIGHT)}\n          </div>\n        </div>\n\n        <div className={``}>{rowing(RIGHT1)}</div>\n\n        {/* <div className={`text-gray-800`}>{rowing(RIGHT2)}</div> */}\n        {/* <div className={`text-gray-700`}>{rowing(RIGHT3)}</div> */}\n\n        {/* <div>{`\\u00a0`}</div> */}\n        {/* <div>{`\\u00a0`}</div> */}\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/authorization/login/AUTH.login.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.layout.tsx",["691","692","693","694","695","696"],"import React from 'react'\nimport useColor from '../../../hooks/useColor'\nimport useDarkMode from '../../../hooks/useDarkMode'\nimport { useWindowSize } from '../../../hooks/useDimensions'\n\ninterface IProps {\n  STRING: string\n  highlighter: boolean\n}\n\nexport const BOOKLayout: React.FC<IProps> = ({ STRING, highlighter }) => {\n  const rawRIGHT: string = STRING.slice(0, 35)\n  const rawRIGHT1: string = STRING.slice(35, 105)\n  const rawRIGHT2: string = STRING.slice(105, 175)\n  const rawRIGHT3: string = STRING.slice(175, 245)\n  const rawLEFT: string = STRING.slice(-35)\n  const rawLEFT1: string = STRING.slice(-105, -35)\n  const rawLEFT2: string = STRING.slice(-175, -105)\n  const rawLEFT3: string = STRING.slice(-245, -175)\n\n  const { themeColor1 } = useColor()\n  const { isDarkMode } = useDarkMode()\n\n  const formating = (str: string) => {\n    return str.split('').map((el, i) => {\n      if (el === ' ') {\n        return (\n          <div key={el + i} className=\"bg-red-00 select-none\">\n            {'\\u00A0'}\n            {/* {el} */}\n          </div>\n        )\n      } else {\n        return (\n          <div\n            key={el + i}\n            className={`bg-ed-200 flex select-none items-center justify-center ${\n              !highlighter && `opacity-0`\n            }`}\n          >\n            {'\\u00A0'}\n            {/* {el} */}\n            <div\n              className={`absolute rounded-sm ${\n                isDarkMode ? themeColor1.bg.t700 : themeColor1.bg.t200\n              }`}\n              style={{ padding: '0 2px' }}\n            >\n              {'\\u00A0'}\n            </div>\n          </div>\n        )\n      }\n    })\n  }\n\n  const rowing = (str: string, bl?: 1 | 2) => {\n    let bluring = bl === 1 ? `opacity-80` : bl === 2 ? `opacity-70` : ` `\n\n    return (\n      <div className={`flex w-full flex-row ${bluring}`}>{formating(str)}</div>\n    )\n  }\n  let xl = true\n\n  return (\n    <div\n      className={`z-31 visible absolute space-y-4 rounded-xl text-2xl transition duration-700 ease-in-out`}\n    >\n      <div className=\"w-1000 font-courier z-10 flex flex-col   space-y-4 text-2xl\">\n        {/* <div className=\"flex flex-row \">{'\\u00A0'}</div> */}\n        {/* <div>{`\\u00a0`}</div> */}\n\n        {/* {rowing(rawLEFT3, 2)} */}\n        {/* {rowing(rawLEFT2, 1)} */}\n        {rowing(rawLEFT1)}\n\n        <div className=\"flex flex-row\">\n          {rowing(rawLEFT)}\n\n          {rowing(rawRIGHT)}\n        </div>\n\n        {rowing(rawRIGHT1)}\n        {/* {rowing(rawRIGHT2, 1)} */}\n        {/* {rowing(rawRIGHT3, 2)} */}\n        {/* <div>{`\\u00a0`}</div> */}\n        {/* <div className=\"flex flex-row \">{'\\u00A0'}</div> */}\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.buttons.tsx",["697"],"import React, { useEffect, useState } from 'react'\nimport { BOOKfunctionalButtons } from './buttons/BOOK.functionalButtons'\n\ninterface IProps {\n  punctuation: boolean\n  caseSensitivity: boolean\n  setCaseSensetivity(cs: boolean): void\n  setPunctuation(p: boolean): void\n\n  highlighter: boolean\n  setHighlighter(turn: boolean): void\n  caps: boolean\n  capsError: number\n  running: boolean\n  handleReset(): void\n  handleTest(): void\n  fontW: boolean\n  handleFW: () => void\n  pointer: boolean\n  setPointer: (pointer: boolean) => void\n}\n\nexport const BOOKbuttons: React.FC<IProps> = ({\n  setHighlighter,\n  highlighter,\n  punctuation,\n  caseSensitivity,\n  setCaseSensetivity,\n  setPunctuation,\n  caps,\n  capsError,\n  running,\n  handleReset,\n  handleTest,\n  fontW,\n  handleFW,\n  pointer,\n  setPointer,\n}) => {\n  const [hover, setHover] = useState(false)\n\n  // useEffect(() => {\n  //   setInterval(() => {\n  //     handleTest()\n  //     setHover(true)\n  //     setHover(false)\n  //   }, 1000)\n  // }, [])\n\n  return (\n    <>\n      <div\n        className={`bg-rd-200  w-1000px z-10 flex select-none  flex-col items-center justify-center transition duration-500 ease-in-out`}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        <div\n          className={`${\n            running && !hover && `opacity-80`\n          } flex  w-full flex-col items-center justify-center  transition duration-200 ease-in-out`}\n        >\n          <div className={`w-f flex flex-col  justify-center `}>\n            {/* <div onMouseDown={handleTest}>TEST</div> */}\n\n            <BOOKfunctionalButtons\n              setHighlighter={setHighlighter}\n              highlighter={highlighter}\n              punctuation={punctuation}\n              setPunctuation={setPunctuation}\n              caseSensitivity={caseSensitivity}\n              setCaseSensetivity={setCaseSensetivity}\n              caps={caps}\n              capsError={capsError}\n              handleReset={handleReset}\n              fontW={fontW}\n              handleFW={handleFW}\n              pointer={pointer}\n              setPointer={setPointer}\n            />\n          </div>\n          {/* <div className={`py w-1000px px my-3 h-[1px] bg-emerald-200`}></div> */}\n        </div>\n      </div>\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/strings/BOOK.string.tsx",["698"],"import React, { useEffect, useRef, useState } from 'react'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\nimport {\n  goToRandom,\n  lowerAll,\n  removePunctuation,\n  shuffle,\n  upperAll,\n} from './stringFormation'\nimport {\n  BOOKstringButton,\n  BOOKstringButtonFunctional,\n} from './BOOK.string.button'\n\nimport { lorem as letter1 } from '../../../../static/letters/lorem'\nimport { gonewiththewind as letter2 } from '../../../../static/letters/gonewiththewind'\nimport { thelordoftherings as letter3 } from '../../../../static/letters/thelordoftherings'\nimport { robinson as letter4 } from '../../../../static/letters/robinson'\nimport { the1984 as letter5 } from '../../../../static/letters/the1984'\nimport { thegreatgatsby as letter6 } from '../../../../static/letters/thegreatgatsby'\nimport { tokillamockinbird as letter7 } from '../../../../static/letters/tokillamockinbird'\nimport { lionwitch as letter8 } from '../../../../static/letters/lionwitch'\n\nimport useLocalStorage from '../../../../hooks/useLocalStorage'\nimport useLanguage from '../../../../hooks/useLanguage'\n\n// let test = `Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. `\n\ninterface IProps {\n  show: boolean\n  overall: number\n  currentString: string\n  handleStringErase(str: string): void\n  handleStringNoErase(str: string): void\n  uppercase: boolean\n  punctuation: boolean\n  caseSensitivity: boolean\n  running: boolean\n}\n\nexport const BOOKstring: React.FC<IProps> = ({\n  show,\n  currentString,\n  handleStringErase,\n  handleStringNoErase,\n  overall,\n  uppercase,\n  punctuation,\n  caseSensitivity,\n  running,\n}) => {\n  // const { isEng } = useLanguage()\n\n  const [now, setNow] = useLocalStorage('BS-currentString', currentString)\n  const choosenString = useRef<number>(5)\n\n  useDidMountEffect(() => {\n    handleString(now, true)\n  }, [now])\n\n  function handleString(string: string, erase: boolean) {\n    if (!punctuation) {\n      string = removePunctuation(string, overall)\n    }\n\n    if (!caseSensitivity) {\n      if (uppercase) {\n        string = upperAll(string)\n      } else {\n        string = lowerAll(string)\n      }\n    }\n    if (erase) {\n      handleStringErase(string)\n    } else {\n      handleStringNoErase(string)\n    }\n  }\n\n  useDidMountEffect(() => {\n    handleString(now, false)\n  }, [punctuation, caseSensitivity, uppercase])\n\n  const handleShuffle = () => {\n    handleString(shuffle(now), true)\n    // handleString('12345', true)\n  }\n\n  const letters = [\n    letter1,\n    letter2,\n    letter3,\n    letter4,\n    letter5,\n    letter6,\n    letter7,\n    letter8,\n  ]\n\n  const { isEng } = useLanguage()\n\n  const handleSetString = (str: string, num: number) => {\n    setNow(str)\n    choosenString.current = num\n  }\n\n  useEffect(() => {\n    handleRandom()\n  }, [])\n\n  const handleRandom = () => {\n    let n = Math.floor(Math.random() * letters.length)\n    while (n === choosenString.current) {\n      n = Math.floor(Math.random() * letters.length)\n    }\n\n    handleSetString(letters[n], n)\n  }\n\n  const handleGoToRandomSentence = () => {\n    let a = goToRandom(letters[choosenString.current])\n    handleSetString(a, choosenString.current)\n    console.log(a)\n  }\n\n  const handleToBeginning = () => {\n    // handleString(letters[choosenString.current], true)\n    handleString(now, true)\n  }\n\n  const exampleButtons = letters.map((el, i) => (\n    <BOOKstringButton\n      key={i}\n      // localEng={localEng}\n      choosenString={choosenString.current}\n      handleSetString={handleSetString}\n      num={letters.indexOf(el)}\n      str={el}\n    />\n  ))\n  const [hover, setHover] = useState(false)\n\n  // return <>do something with STRING length</>\n  return (\n    <div\n      className={`${'font-CourierC'} w-1000px borde z-50 mt-4 flex  transform select-none flex-col items-center gap-4 border-black text-xl text-gray-800 ${\n        show || `opacity-0`\n      } transition duration-700 ease-in-out`}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <div\n        className={`w-f flex flex-wrap items-center justify-evenly ${\n          running && !hover && `opacity-80`\n        } transition duration-200 ease-in-out`}\n      >\n        {exampleButtons}\n      </div>\n      <div className={`w-f flex flex-row items-center justify-around`}>\n        <BOOKstringButtonFunctional\n          title={isEng ? `shuffle` : `перемешать`}\n          onClick={handleShuffle}\n        />\n        <BOOKstringButtonFunctional\n          title={isEng ? `random book` : `случайная книга`}\n          onClick={handleRandom}\n        />\n        <BOOKstringButtonFunctional\n          title={isEng ? `jump over` : `случайное место`}\n          onClick={handleGoToRandomSentence}\n        />\n        <BOOKstringButtonFunctional\n          title={isEng ? `to beginning` : `в начало`}\n          onClick={handleToBeginning}\n        />\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone-rus/components/strings/RUS.BOOK.string.tsx",["699","700","701"],"import React, { useEffect, useRef, useState } from 'react'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\n\nimport R from '../../../../static/profiles/russia.png'\nimport E from '../../../../static/profiles/uk.png'\n\nimport useLocalStorage from '../../../../hooks/useLocalStorage'\nimport useLanguage from '../../../../hooks/useLanguage'\n\nimport { asya as letter1 } from '../../../../static/letters/rus/asya'\nimport { gogol as letter2 } from '../../../../static/letters/rus/gogol'\nimport { karamazovbrothers as letter3 } from '../../../../static/letters/rus/karamazovbrothers'\nimport { robinsonR as letter4 } from '../../../../static/letters/rus/robinsonRus'\nimport { don as letter5 } from '../../../../static/letters/rus/don'\nimport { oblomov as letter6 } from '../../../../static/letters/rus/oblomov'\nimport { karenina as letter7 } from '../../../../static/letters/rus/karenina'\nimport { masterimargarita as letter8 } from '../../../../static/letters/rus/masterimargarita'\nimport {\n  goToRandom,\n  lowerAll,\n  removePunctuation,\n  shuffle,\n  upperAll,\n} from '../../../book-redone/components/strings/stringFormation'\nimport {\n  BOOKstringButton,\n  BOOKstringButtonFunctional,\n} from '../../../book-redone/components/strings/BOOK.string.button'\n\n// let test = `Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. `\n\ninterface IProps {\n  show: boolean\n  overall: number\n  currentString: string\n  handleStringErase(str: string): void\n  handleStringNoErase(str: string): void\n  uppercase: boolean\n  punctuation: boolean\n  caseSensitivity: boolean\n  running: boolean\n}\n\nexport const RUSBOOKstring: React.FC<IProps> = ({\n  show,\n  currentString,\n  handleStringErase,\n  handleStringNoErase,\n  overall,\n  uppercase,\n  punctuation,\n  caseSensitivity,\n  running,\n}) => {\n  // const { isEng } = useLanguage()\n\n  const [now, setNow] = useLocalStorage('BS-currentString', currentString)\n  const choosenString = useRef<number>(5)\n\n  useDidMountEffect(() => {\n    handleString(now, true)\n  }, [now])\n\n  function handleString(string: string, erase: boolean) {\n    if (!punctuation) {\n      string = removePunctuation(string, overall)\n    }\n\n    if (!caseSensitivity) {\n      if (uppercase) {\n        string = upperAll(string)\n      } else {\n        string = lowerAll(string)\n      }\n    }\n    if (erase) {\n      handleStringErase(string)\n    } else {\n      handleStringNoErase(string)\n    }\n  }\n\n  useDidMountEffect(() => {\n    handleString(now, false)\n  }, [punctuation, caseSensitivity, uppercase])\n\n  const handleShuffle = () => {\n    handleString(shuffle(now), true)\n    // handleString('12345', true)\n  }\n\n  const letters = [\n    letter1,\n    letter2,\n    letter3,\n    letter4,\n    letter5,\n    letter6,\n    letter7,\n    letter8,\n  ]\n\n  const { isEng } = useLanguage()\n\n  const handleSetString = (str: string, num: number) => {\n    setNow(str)\n    choosenString.current = num\n  }\n\n  useEffect(() => {\n    handleRandom()\n  }, [])\n\n  const handleRandom = () => {\n    let n = Math.floor(Math.random() * letters.length)\n    while (n === choosenString.current) {\n      n = Math.floor(Math.random() * letters.length)\n    }\n\n    handleSetString(letters[n], n)\n  }\n\n  const handleGoToRandomSentence = () => {\n    let a = goToRandom(letters[choosenString.current])\n    handleSetString(a, choosenString.current)\n    console.log(a)\n  }\n\n  const handleToBeginning = () => {\n    // handleString(letters[choosenString.current], true)\n    handleString(now, true)\n  }\n\n  const exampleButtons = letters.map((el, i) => (\n    <BOOKstringButton\n      key={i}\n      choosenString={choosenString.current}\n      handleSetString={handleSetString}\n      num={letters.indexOf(el)}\n      str={el}\n    />\n  ))\n  const [hover, setHover] = useState(false)\n\n  // return <>do something with STRING length</>\n  return (\n    <div\n      className={`font-CourierC w-1000px borde z-50 mt-4 flex  transform select-none flex-col items-center gap-4 border-black text-xl text-gray-800 ${\n        show || `opacity-0`\n      } transition duration-700 ease-in-out`}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <div\n        className={`w-f flex flex-wrap items-center justify-evenly ${\n          running && !hover && `opacity-80`\n        } transition duration-200 ease-in-out`}\n      >\n        {exampleButtons}\n      </div>\n      <div className={`w-f flex flex-row items-center justify-around`}>\n        <BOOKstringButtonFunctional\n          title={isEng ? `shuffle` : `перемешать`}\n          onClick={handleShuffle}\n        />\n        <BOOKstringButtonFunctional\n          title={isEng ? `random book` : `случайная книга`}\n          onClick={handleRandom}\n        />\n        <BOOKstringButtonFunctional\n          title={isEng ? `jump over` : `случайное место`}\n          onClick={handleGoToRandomSentence}\n        />\n        <BOOKstringButtonFunctional\n          title={isEng ? `to beginning` : `в начало`}\n          onClick={handleToBeginning}\n        />\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/utils/shuffleArray.ts",["702"],"export const shuffleArray = (arr: string[]): string[] => {\n  let a: number[] = Array.from({ length: arr.length }, (_, i) => i)\n  let res: string[] = []\n  for (let i = 0; i < arr.length; i++) {\n    let r = Math.floor(Math.random() * (arr.length - i))\n    res.push(arr[a[r]])\n    a = a.filter((el) => el !== a[r])\n  }\n  return res\n}\n","/Users/skywalker/Web/KBRD/client/src/components/profile/NBA.input.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.stats.tsx",["703"],"import React from 'react'\nimport useLanguage from '../../../hooks/useLanguage'\nimport { BOOKstatsErrorsWidget } from '../../book-redone/components/stats/B.stats.error.widget'\nimport { TAPerrors } from './stats/TAP.errors'\nimport { TAPoverall } from './stats/TAP.overall'\n\ninterface IProps {\n  succesed: number\n  errors: number\n  show: boolean\n}\n\nexport const TAPREDONEstats: React.FC<IProps> = ({\n  succesed,\n  errors,\n  show,\n}) => {\n  const { isEng } = useLanguage()\n  return (\n    <div\n      className={`w-[1080px] ${\n        isEng ? `font-courier` : `font-CourierC`\n      } borde  z-50 flex select-none items-center justify-center border-black  transition duration-500 ease-in-out ${\n        show || `opacity-0`\n      }`}\n    >\n      <div\n        className={`w-f borde-red-800 borde mx-8 flex flex-row items-center justify-between text-xl text-gray-600 ${\n          `` // hide && `-z-10`\n        }`}\n      >\n        <div className={`flex items-center justify-center`}>\n          <TAPoverall overall={succesed} />\n        </div>\n\n        <div className={`mr-24 flex items-center justify-center`}>\n          {`\\u00a0`}\n          <div className={`absolute `}>\n            {/* <BOOKstatsAccuracyWidget\n              currentAccuracy={accuracy}\n              // overall={overall}\n              // fti={fti}\n              overall={overallLocal}\n              errors={errorsLocal}\n            /> */}\n          </div>\n        </div>\n\n        <div className={`flex items-center justify-center`}>\n          {`\\u00a0`}\n\n          <div className={`absolute `}>\n            {/* <BOOKstatsCPMWidget CPM={CPM} avgCPM={avgCPM} /> */}\n          </div>\n        </div>\n        <div className={`flex translate-x-[-60px] items-center justify-center`}>\n          <TAPerrors errors={errors} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/profile/NBA.checkbox.tsx",["704"],"import { motion } from 'framer-motion'\nimport React, { useState } from 'react'\n\ninterface IProps {\n  active: boolean\n  onClick?: () => void\n  border?: string\n  bg?: string\n  hov?: string\n}\n\nexport const NBAcheckbox: React.FC<IProps> = ({\n  active,\n  onClick = () => {},\n  border = `border-gray-800`,\n  bg = `bg-sky-50`,\n  hov = `bg-sky-300`,\n}) => {\n  const [hover, setHover] = useState(false)\n  const [counter, setCounter] = useState(0)\n\n  return (\n    <div className={`flex justify-center items-center cursor-pointer `}>\n      <motion.div\n        whileHover={{ scale: 1.1 }}\n        animate={{\n          rotate: 90 * counter,\n        }}\n        transition={{\n          type: `spring`,\n        }}\n        className={`  absolute w-16px h-16px border rounded-sm ${border} ${\n          active ? hov : bg\n        } transition-colors duration-300 ease-in-out`}\n        onMouseEnter={() => {\n          setHover(true)\n          setCounter((prev) => prev + 1)\n        }}\n        onMouseLeave={() => setHover(false)}\n        onMouseDown={onClick}\n      />\n      <div style={{ transform: `translate(0px, -1px)`, zIndex: 10 }}>\n        <div>\n          <motion.div\n            animate={{\n              width: 8,\n              height: 11,\n              rotate: active ? 45 : -45,\n              x: active ? 0 : -300,\n              y: active ? 0 : -100,\n              opacity: active ? 1 : 0,\n            }}\n            transition={{\n              default: { type: `spring` },\n              width: {\n                delay: 0.1,\n                duration: 0.2,\n              },\n              height: { duration: 0.3 },\n            }}\n            className={`border-b-2 border-r-2 border-black rounded-xs`}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.tap.tsx",["705","706"],"import { motion } from 'framer-motion'\nimport React, { useEffect, useState } from 'react'\nimport useColor from '../../../hooks/useColor'\nimport useDarkMode from '../../../hooks/useDarkMode'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { TAPREDONEelement } from './TAP.REDONE.element'\nimport { TAPREDONEframe } from './TAP.REDONE.frame'\n\nimport { KeyColor, State } from './TAP.REDONE.main'\n\ninterface IProps {\n  cells: Array<string | null>\n  limit: number\n  state: State\n  missclicks: number\n  handleStart: () => void\n  keyColor: KeyColor\n  started: boolean\n  setState: (state: State) => void\n  block: boolean\n  setBlock: (block: boolean) => void\n  trainingLanguage: boolean\n}\n\nexport const TAPREDONEtap: React.FC<IProps> = ({\n  cells,\n  state,\n  missclicks,\n  handleStart,\n  keyColor,\n  limit,\n  started,\n  setState,\n  block,\n  setBlock,\n  trainingLanguage,\n}) => {\n  const { themeColor2 } = useColor()\n\n  const [missTime, setMissTime] = useState(false)\n\n  // const [frameColor, setFrameColor] = useState(`bg-black`)\n\n  const { isDarkMode } = useDarkMode()\n\n  const getColor = () => {\n    switch (keyColor) {\n      case `red`:\n        return isDarkMode ? `bg-red-300` : `bg-red-500`\n      case `emerald`:\n        return isDarkMode ? `bg-emerald-300` : `bg-emerald-500`\n      case `cyan`:\n        return isDarkMode ? `bg-cyan-300` : `bg-cyan-500`\n      case `amber`:\n        return isDarkMode ? `bg-amber-300` : `bg-amber-500`\n      case `fuchsia`:\n        return isDarkMode ? `bg-fuchsia-300` : `bg-fuchsia-500`\n      case `pink`:\n        return isDarkMode ? `bg-pink-300` : `bg-pink-500`\n    }\n  }\n\n  useDidMountEffect(() => {\n    setMissTime(true)\n    let id = setTimeout(() => setMissTime(false), 175)\n\n    return () => {\n      clearTimeout(id)\n      setMissTime(false)\n    }\n  }, [missclicks])\n\n  useDidMountEffect(() => {}, [state])\n\n  // useEffect(() => {\n  //   if (state === State.STOP) {\n  //     setFrameColor(themeColor2.bg.t500)\n  //   } else if (state === State.PAUSE) {\n  //     setFrameColor(themeColor2.bg.t400)\n  //   } else {\n  //     setFrameColor(`bg-transparent`)\n  //   }\n  // }, [state])\n\n  // useEffect(() => {\n  //   if (!missclicks) return\n\n  //   setFrameColor(`bg-red-500`)\n\n  //   let id = setTimeout(() => setFrameColor(`bg-transparent`), 175)\n\n  //   return () => {\n  //     clearTimeout(id)\n  //     setFrameColor(`bg-transparent`)\n  //   }\n  // }, [missclicks])\n\n  let element = (cell: number) => {\n    return (\n      <TAPREDONEelement\n        char={cells[cell]}\n        color={getColor()}\n        trainingLanguage={trainingLanguage}\n      />\n    )\n  }\n\n  return (\n    <div\n      className={`w-1100px  flex translate-y-[-30px] items-center justify-center`}\n    >\n      <TAPREDONEframe\n        state={state}\n        color={\n          missTime\n            ? `bg-red-500`\n            : state === State.RUN\n            ? `bg-transparent`\n            : isDarkMode\n            ? themeColor2.bg.t300\n            : themeColor2.bg.t500\n        }\n        limit={limit}\n        handleStart={handleStart}\n        started={started}\n        setState={setState}\n        block={block}\n        setBlock={setBlock}\n      />\n      <div className={`flex flex-col items-center justify-center gap-6`}>\n        <div className={`flex flex-row justify-center gap-14`}>\n          {element(25)}\n          {element(13)}\n          {element(14)}\n          {element(15)}\n          {element(26)}\n        </div>\n        <div className={`flex flex-row justify-center gap-14`}>\n          {element(21)}\n          {element(7)}\n          {element(3)}\n          {element(4)}\n          {element(10)}\n          {element(22)}\n        </div>\n        <div className={`flex flex-row justify-center gap-14`}>\n          {element(19)}\n          {element(8)}\n          {element(1)}\n          {element(0)}\n          {element(2)}\n          {element(11)}\n          {element(20)}\n        </div>\n        <div className={`flex flex-row justify-center gap-14`}>\n          {element(23)}\n          {element(9)}\n          {element(5)}\n          {element(6)}\n          {element(12)}\n          {element(24)}\n        </div>\n        <div className={`flex flex-row justify-center gap-14`}>\n          {element(27)}\n          {element(16)}\n          {element(17)}\n          {element(18)}\n          {element(28)}\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.timer.tsx",["707"],"import React, { useEffect } from 'react'\n\ninterface IProps {\n  interval: number\n  handleTick(): void\n}\n\nexport const TAPtimer: React.FC<IProps> = ({ interval, handleTick }) => {\n  useEffect(() => {\n    let id = setInterval(() => handleTick(), interval)\n\n    return () => {\n      clearInterval(id)\n    }\n  }, [interval])\n\n  return <></>\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.error.widget.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.accuracyCounter.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/strings/BOOK.string.button.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.cpm.widget.tsx",["708"],"import React, { useState } from 'react'\nimport useColor from '../../../../hooks/useColor'\nimport useDarkMode from '../../../../hooks/useDarkMode'\nimport useLanguage from '../../../../hooks/useLanguage'\nimport useLocalStorage from '../../../../hooks/useLocalStorage'\nimport { FadeText } from '../../../../utils/FadeText'\nimport { PingingCircles } from './BOOK.pingingCircles'\nimport INFO from '../../../../static/profiles/info.svg'\n\ninterface IProps {\n  CPM: number\n  avgCPM: number\n}\n\nexport const BOOKstatsCPMWidget: React.FC<IProps> = ({ CPM, avgCPM }) => {\n  const [isHovered, setIsHovered] = useState(false)\n  const [isHovered2, setIsHovered2] = useState(false)\n  const [isHoveredCurrent, setIsHoveredCurrent] = useState(false)\n  const [isHoveredChapter, setIsHoveredChapter] = useState(false)\n\n  const [showType, setShowType] = useLocalStorage<`short` | `long`>(\n    `cpm-widget`,\n    'long'\n  )\n\n  const { isEng } = useLanguage()\n\n  const { isDarkMode } = useDarkMode()\n\n  // const accuracyValue =\n  //   currentAccuracy > 0\n  //     ? currentAccuracy === 1000\n  //       ? `999`\n  //       : `${currentAccuracy}`\n  //     : `000`\n\n  // const chapterAccuracy = Math.floor(((overall - fti.length) / overall) * 1000)\n\n  const { themeColor1 } = useColor()\n\n  return (\n    <div\n      className={`flex items-center justify-center ${isEng || `font-CourierC`}`}\n    >\n      <div\n        className={`z-10 flex flex-row rounded-xl  px-2 ${\n          (isHovered || isHovered2) &&\n          (isDarkMode ? themeColor1.bg.t90030 : themeColor1.bg.t100)\n        } ${isDarkMode ? `text-gray-300` : `text-gray-900`}`}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        {isEng ? `CPM` : 'скорость'} |{`\\u00a0`}\n        {CPM === 0 ? (\n          <PingingCircles />\n        ) : (\n          <FadeText title={`${CPM}`} delay={[200, 600]} blink={CPM} />\n        )}\n        {`\\u00a0`}\n        {showType === `short` ? `` : isEng ? `c/min` : 'с/мин'}\n      </div>\n      {isHovered || isHovered2 ? (\n        <div\n          className={`w-340px h-260px shadow-10th  -translate-y-85px  absolute flex rounded-xl border ${\n            isDarkMode ? themeColor1.border.t300 : themeColor1.border.t500\n          }  ${\n            isDarkMode ? themeColor1.bg.t900 : themeColor1.bg.t200\n          } p-2 px-6 ${isDarkMode ? `text-gray-200` : `text-gray-900`}`}\n          onMouseEnter={() => setIsHovered2(true)}\n          onMouseLeave={() => setIsHovered2(false)}\n        >\n          <div className={`w-f flex  justify-center`}>\n            {\n              <div className={`w-f flex  flex-col items-center`}>\n                <div\n                  className={`w-f flex justify-center text-xl ${\n                    isDarkMode ? `text-gray-200` : `text-gray-900`\n                  }`}\n                >\n                  {isEng ? ` characters per minute` : `символов в минуту`}\n                </div>\n                <div\n                  className={`w-f mx-2 my-2 h-px rounded-full ${\n                    isDarkMode ? themeColor1.bg.t200 : themeColor1.bg.t400\n                  }`}\n                ></div>\n                <div className={`w-f flex flex-col items-start gap-4`}>\n                  {/* ////////// */}\n                  {isHoveredChapter ? (\n                    <div className={`w-f flex items-center justify-center `}>\n                      {`\\u00a0`}\n                      <div\n                        className={`w-270px h-0px translate-x-10px translate-y-5px absolute`}\n                        style={{\n                          borderBottom: isDarkMode\n                            ? '30px solid rgb(153 27 27)'\n                            : '30px solid #fca5a5',\n                          borderLeft: '30px solid transparent',\n                        }}\n                      >\n                        <div\n                          className={`flex flex-row flex-nowrap items-center whitespace-nowrap ${\n                            isDarkMode ? `text-gray-200` : `text-gray-900`\n                          }`}\n                        >\n                          {isEng ? `no pauses included` : `без учета остановок`}{' '}\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className={` flex `}>\n                      <span\n                        className={`flex ${\n                          isDarkMode ? `text-gray-200` : `text-gray-900`\n                        } `}\n                      >\n                        <span\n                          className={` flex translate-x-[-10px] translate-y-[6px] items-center justify-center rounded-full border text-sm ${\n                            isDarkMode\n                              ? `border-blue-200 bg-blue-700 text-blue-200`\n                              : `border-blue-500 bg-blue-200 text-blue-500`\n                          }`}\n                          style={{ width: 16, height: 16 }}\n                          onMouseEnter={() => setIsHoveredCurrent(true)}\n                          onMouseLeave={() => setIsHoveredCurrent(false)}\n                        >\n                          i\n                        </span>\n                        {/* <img\n                          alt=\"\"\n                          src={INFO}\n                          className={`mr-2 ${\n                            isDarkMode ? `fill-blue-300` : `fill-blue-500`\n                          }`}\n                          style={{ width: 16, height: 16 }}\n                          onMouseEnter={() => setIsHoveredCurrent(true)}\n                          onMouseLeave={() => setIsHoveredCurrent(false)}\n                        /> */}\n                        {isEng ? `current` : `текущая`}:{' '}\n                      </span>\n                      <span\n                        className={`whitespace-nowrap ${\n                          isDarkMode ? `text-gray-200` : `text-gray-900`\n                        }`}\n                      >\n                        {CPM === 0 ? (\n                          isEng ? (\n                            `\\u00a0to be defined`\n                          ) : (\n                            `\\u00a0не определено`\n                          )\n                        ) : (\n                          <>\n                            {CPM}{' '}\n                            {showType === 'long' && (isEng ? `c/min` : 'с/мин')}\n                          </>\n                        )}\n                      </span>\n                    </div>\n                  )}\n                  {/* ///////////// */}\n                  {isHoveredCurrent ? (\n                    <div className={`w-f flex items-center justify-center `}>\n                      {`\\u00a0`}\n                      <div\n                        className={`w-270px h-0px translate-x-10px translate-y-5px absolute ${\n                          isDarkMode ? `text-gray-200` : `text-gray-900`\n                        }`}\n                        style={{\n                          borderTop: isDarkMode\n                            ? '30px solid rgb(153 27 27)'\n                            : '30px solid #fca5a5',\n                          borderLeft: '30px solid transparent',\n                        }}\n                      >\n                        <div\n                          style={{\n                            transform: 'translateY(-28px) translateX(16px)',\n                          }}\n                        >\n                          {isEng ? `last 40 chars` : `последние 40 симв.`}{' '}\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className={`flex items-center`}>\n                      <span\n                        className={`flex  ${\n                          isDarkMode ? `text-gray-200` : `text-gray-900`\n                        }`}\n                      >\n                        <span\n                          className={` flex translate-x-[-10px] translate-y-[6px] items-center justify-center rounded-full border text-sm ${\n                            isDarkMode\n                              ? `border-blue-200 bg-blue-700 text-blue-200`\n                              : `border-blue-500 bg-blue-200 text-blue-500`\n                          }`}\n                          style={{ width: 16, height: 16 }}\n                          onMouseEnter={() => {\n                            setIsHoveredChapter(true)\n                          }}\n                          onMouseLeave={() => setIsHoveredChapter(false)}\n                        >\n                          {/* <img\n                          alt=\"\"\n                          src={INFO}\n                          className={`mr-2 ${\n                            isDarkMode ? `fill-blue-300` : `fill-blue-500`\n                          }`}\n                          style={{ width: 16, height: 16 }}\n                          onMouseEnter={() => {\n                            setIsHoveredChapter(true)\n                          }}\n                          onMouseLeave={() => setIsHoveredChapter(false)}\n                        /> */}\n                          i\n                        </span>\n                        {isEng ? `average` : `средняя`}:{' '}\n                      </span>\n                      <span\n                        className={`whitespace-nowrap  ${\n                          isDarkMode ? `text-gray-200` : `text-gray-900`\n                        }`}\n                      >\n                        {avgCPM === 0 ? (\n                          isEng ? (\n                            `\\u00a0to be defined`\n                          ) : (\n                            `\\u00a0не определено`\n                          )\n                        ) : (\n                          <>\n                            {avgCPM} {showType === 'long' && 'c/min'}\n                          </>\n                        )}\n                      </span>\n                    </div>\n                  )}\n                  {/* /////// */}\n                  <div className={`  w-f flex justify-center`}>\n                    <div className={`borde flex items-center justify-center `}>\n                      <div\n                        className={`cursor-pointer rounded-l-xl border-l border-t border-b   ${\n                          themeColor1.border.t400\n                        } py-1   px-7 ${\n                          showType === `short`\n                            ? ` ${themeColor1.bg.t400}  text-gray-900`\n                            : isDarkMode\n                            ? themeColor1.bg.t900\n                            : themeColor1.bg.t200\n                        } transition duration-300 ease-in-out ${\n                          isDarkMode ? `text-gray-200` : `text-gray-900`\n                        }`}\n                        onMouseDown={() => setShowType(`short`)}\n                      >\n                        {CPM || 167}\n                      </div>\n                      <div\n                        className={`cursor-pointer rounded-r-xl border-r border-t border-b  ${\n                          themeColor1.border.t400\n                        } py-1 px-6 ${\n                          showType === `long`\n                            ? isDarkMode\n                              ? `${themeColor1.bg.t500} text-gray-200`\n                              : ` ${themeColor1.bg.t400} text-gray-900`\n                            : isDarkMode\n                            ? themeColor1.bg.t900\n                            : themeColor1.bg.t200\n                        } transition duration-300 ease-in-out  `}\n                        onMouseDown={() => setShowType(`long`)}\n                      >\n                        {CPM || 167} {` `} {isEng ? `c/min` : 'с/мин'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.container.tsx",["709"],"import React, { useEffect, useState } from 'react'\nimport { useDidMountEffect } from '../../hooks/useDidMountEffect'\nimport useLocalStorage from '../../hooks/useLocalStorage'\nimport { LEVELlevel } from './LEVEL.level'\nimport { LEVELrecorder } from './LEVEL.recorder'\nimport { LEVELupper } from './LEVEL.upper'\n\ninterface IProps {\n  overall: number\n  fti: number[]\n  avgCPM: number\n  CPM: number\n  accuracy: number\n  setHide(hide: boolean): void\n  errors: number\n  overallLocal: number\n  keyboard: boolean\n\n  // appear: boolean\n}\n\nexport enum ExpMessage {\n  Practice = `Practice`,\n  HardWorker = `Hard Worker`,\n  TaskAheadOfYou = `Task Ahead Of You`,\n  MaraphonRunner = `Marathon Runner`,\n\n  FastFingers = `Fast Fingers`,\n  WayTooFast = `Way Too Fast`,\n  FastAndFurious = `Fast And Furious`,\n\n  TheBullsEye = `The Bull's Eye`,\n  Marksman = `Marksman`,\n  AccurateAsStephCurry = `Accurate As Steph Curry`,\n\n  FastRun = `Awesome Run`,\n  FastAndPerfectRace = `Fast And Perfect Race`,\n\n  TopSkills = `Top Skills`,\n  Excellence = `Excellence`,\n  NotAverage = `Not Average`,\n\n  Pianist = `Pianist`,\n  AbsoluteMaster = `Absolute Master`,\n\n  PracticeRus = `Так Держать`,\n  TaskAheadOfYouRus = `Прогресс Налицо`,\n  HardWorkerRus = `Полноценная Тренировка`,\n  MaraphonRunnerRus = `Марафонец`,\n\n  FastFingersRus = `Молниеносный`,\n  WayTooFastRus = `Ооочень Быстро`,\n  FastAndFuriousRus = `Со Скоростью Света`,\n\n  MarksmanRus = `Снайпер`,\n  TheBullsEyeRus = `В Яблочко`,\n  AccurateAsStephCurryRus = `Точен Как Стеф Карри`,\n\n  FastRunRus = `Хорошая Заявка`,\n  FastAndPerfectRaceRus = `Лучше Не Бывает`,\n\n  NotAverageRus = `Выше Остальных`,\n  ExcellenceRus = `Вне Конкуренции`,\n  TopSkillsRus = `Навыки На Высшем Уровне`,\n\n  PianistRus = `Пианист`,\n  AbsoluteMasterRus = `Лучший В Своем Деле`,\n}\n\nexport type ExpMSG = null | string | ExpMessage\n\nexport const LEVELcontainer: React.FC<IProps> = ({\n  overall,\n  fti,\n  CPM,\n  avgCPM,\n  accuracy,\n  setHide,\n  errors,\n  overallLocal,\n  keyboard,\n  // appear,\n}) => {\n  // const levels = [250, 500, 1_000, 2_000, 3_750, 6_000, 10_000, 15_000, 25_000]\n  // const levels = [250, 625, 1_175, 2_000, 3_250, 5_125, 7_950, 12_200, 18_600]\n\n  const levels =\n    // [250, 575, 1_000, 1_575, 2_350, 3_375, 4_750, 6_575, 9_000]\n    [0, 250, 825, 1825, 3400, 5750, 9125, 13875, 20450, 29450]\n\n  const [exp, setExp] = useState<number>(0)\n\n  const [localExp, setLocalExp] = useLocalStorage<number>('exp', 0)\n\n  useEffect(() => {\n    setExp(localExp)\n  }, [])\n\n  useDidMountEffect(() => {\n    if (exp % 5 === 0) {\n      setLocalExp(exp)\n    }\n  }, [exp])\n\n  const getLevel = (expirience: number) => {\n    let lvl = 0\n\n    levels.forEach((el) => {\n      if (el <= expirience) {\n        lvl = levels.indexOf(el)\n        //         lvl = el\n      }\n    })\n    return lvl + 1\n  }\n  const level = getLevel(exp)\n\n  const [expMSG, setExpMSG] = useState<ExpMSG>(null)\n\n  const handleSetExp = (value: number) => {\n    for (let i = 0; i < value; i++) {\n      setTimeout(() => {\n        setExp((prev) => prev + 1)\n      }, i * 50 + 20)\n    }\n  }\n\n  const handleSetExpLogin = (value: number) => {\n    for (let i = 0; i < value; i++) {\n      setTimeout(() => {\n        setExp((prev) => prev + 1)\n      }, 0)\n    }\n  }\n\n  let levelExp = (): number => {\n    let res = 0\n    levels.forEach((el, i) => (i < level ? (res += el) : el))\n    return res\n  }\n\n  return (\n    <div className={` select-none `}>\n      <LEVELlevel\n        exp={[exp - levels[level - 1], levels[level] - levelExp()]}\n        level={level}\n        expMSG={expMSG}\n        setHide={setHide}\n        keyboard={keyboard}\n      />\n      {/* <div className={`flex flex-row justify-evenly items-center w-f`}> */}\n      {/* <div onMouseDown={() => handleSetExp(10)}>+10</div> */}\n      {/* <div onMouseDown={() => handleSetExp(50)}>+50</div> */}\n      {/* <div onMouseDown={() => setLevel((prev) => prev + 1)}>lvlup</div>\n        <div onMouseDown={() => setLevel(5)}>5</div>\n        <div onMouseDown={() => setLevel(10)}>10</div> */}\n      {/* </div> */}\n      <LEVELupper\n        handleSetExp={handleSetExp}\n        overall={overall}\n        fti={fti}\n        errors={errors}\n        overallLocal={overallLocal}\n        avgCPM={avgCPM}\n        setExpMSG={setExpMSG}\n      />\n      <LEVELrecorder level={level} handleExp={handleSetExpLogin} exp={exp} />\n    </div>\n  )\n}\n\n// let test = (start) => {\n//   let res = [start * 25]\n//   let increment = 250\n//   for(i = 0; i < 8; i++) {\n//     increment *= 1.33\n//     let next = Math.floor((res[res.length - 1] + increment) /25 )\n\n//     res.push(next * 25)\n//   }\n\n//   return res\n// }\n\n//   console.log(test(10))\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/BOOK.stats.CPMcounter.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.overall.widget.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.stats.accuracy.widget.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/buttons/BOOK.functionalButtons.tsx",["710","711"],"import React, { useState, useEffect } from 'react'\nimport useLanguage from '../../../../hooks/useLanguage'\nimport {\n  BOOKbuttonVisual,\n  BOOKbuttonVisualFunctional,\n} from './BOOK.buttonVisual'\nimport { BOOKcapsLockButton } from './BOOK.CapsLockButton'\n\ninterface IProps {\n  setHighlighter(turn: boolean): void\n  highlighter: boolean\n  punctuation: boolean\n  setPunctuation(value: boolean): void\n  caseSensitivity: boolean\n  setCaseSensetivity(value: boolean): void\n  caps: boolean\n  capsError: any\n  handleReset(): void\n  fontW: boolean\n  handleFW: () => void\n  pointer: boolean\n  setPointer: (pointer: boolean) => void\n}\n\nexport const BOOKfunctionalButtons: React.FC<IProps> = ({\n  setHighlighter,\n  highlighter,\n  punctuation,\n  setPunctuation,\n  caseSensitivity,\n  setCaseSensetivity,\n  caps,\n  capsError,\n  handleReset,\n  fontW,\n  handleFW,\n  pointer,\n  setPointer,\n}) => {\n  const [show, setShow] = useState(true)\n\n  // useEffect(() => {\n  //   let id = setTimeout(() => {\n  //     setShow(true)\n  //   }, 900)\n  //   return () => clearTimeout(id)\n  // }, [])\n\n  const { isEng } = useLanguage()\n\n  return (\n    <div\n      className={`borde ease z-10 flex w-[100%] flex-grow flex-row  items-center justify-start border-red-900  transition duration-500 ${\n        isEng || `font-CourierC`\n      }`}\n    >\n      <div\n        className={`-z-1 borde flex flex-grow flex-row items-center justify-start  gap-4 border-red-500  transition  delay-100 duration-700 ease-in-out `}\n        style={{\n          transform: `rotateY(${show ? 0 : -90}deg) translateX(${\n            show ? 0 : -500\n          }px)`,\n        }}\n      >\n        <BOOKbuttonVisual\n          tag={isEng ? 'hightlighter' : `выделитель`}\n          active={highlighter}\n          onClick={setHighlighter}\n        />\n        <BOOKbuttonVisual\n          tag={isEng ? `punctuation` : `пунктуация`}\n          active={punctuation}\n          onClick={setPunctuation}\n          // onClick={(test: boolean) => {}}\n        />\n        <BOOKbuttonVisual\n          tag={isEng ? `case` : `регистр`}\n          active={caseSensitivity}\n          onClick={setCaseSensetivity}\n        />\n        <BOOKbuttonVisual\n          tag={isEng ? `A` : `A`}\n          active={fontW}\n          onClick={handleFW}\n        />\n        <BOOKbuttonVisual\n          tag={isEng ? `pointer` : 'указатель'}\n          active={pointer}\n          onClick={setPointer}\n        />\n        <div className={'flex-grow'}></div>\n        <BOOKbuttonVisualFunctional\n          title={isEng ? `reset` : `сброс`}\n          onClick={handleReset}\n        />\n        <div className={'px-2'}></div>\n        <BOOKcapsLockButton caps={caps} capsError={capsError} />\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/buttons/TAP.REDONE.buttons.tsx",["712"],"import React from 'react'\nimport useLanguage from '../../../../hooks/useLanguage'\nimport { NBAbutton } from '../../../profile/NBA.button'\nimport { NBAslider } from '../../../profile/NBA.slider'\nimport { AppearType, KeyColor, State } from '../TAP.REDONE.main'\nimport { TAPREDONEappear } from './TAP.REDONE.appear'\nimport { TAPREDONEkeyColor } from './TAP.REDONE.key.color'\nimport { TAPREDONEkeyType } from './TAP.REDONE.key.type'\n\nimport R from '../../../../static/profiles/russia.png'\nimport E from '../../../../static/profiles/uk.png'\nimport { motion } from 'framer-motion'\nimport useColor from '../../../../hooks/useColor'\nimport useDarkMode from '../../../../hooks/useDarkMode'\n\ninterface IProps {\n  demo: boolean\n  state: State\n  handleStart: () => void\n  interval: number\n  setInterval: (interval: number) => void\n  keyColor: KeyColor\n  setKeyColor: (color: KeyColor) => void\n  keyType: [boolean, boolean, boolean]\n  handleKeyType: (type: 1 | 2 | 3) => void\n  limit: number\n  setLimit: (limit: number) => void\n  spaceDown: boolean\n  started: boolean\n  maxLimit: number\n  appearType: AppearType\n  setAppearType: (type: AppearType) => void\n  targets: number\n  setTargets: (targets: number) => void\n  trainingLanguage: boolean\n  handleLanguage: () => void\n}\n\nexport const TAPREDONEbuttons: React.FC<IProps> = ({\n  demo,\n  state,\n  handleStart,\n  interval,\n  setInterval,\n  keyColor,\n  setKeyColor,\n  keyType,\n  handleKeyType,\n  limit,\n  setLimit,\n  spaceDown,\n  started,\n  maxLimit,\n  appearType,\n  setAppearType,\n  targets,\n  setTargets,\n  trainingLanguage,\n  handleLanguage,\n}) => {\n  const { themeColor2 } = useColor()\n\n  const { isDarkMode } = useDarkMode()\n\n  const { isEng } = useLanguage()\n\n  return (\n    <div\n      className={`w-1000px borde ${\n        isEng ? `font-courier` : `font-CourierC`\n      } flex select-none items-center justify-center gap-10  ${\n        demo && `opacity-0`\n      } grid-cols-custom1 grid transition duration-500 ease-in-out`}\n    >\n      <div className={`flex items-center justify-end`}>\n        <TAPREDONEappear\n          interval={interval}\n          setInterval={setInterval}\n          limit={limit}\n          setLimit={setLimit}\n          maxLimit={maxLimit}\n          appearType={appearType}\n          setAppearType={setAppearType}\n          targets={targets}\n          setTargets={setTargets}\n          keyColor={keyColor}\n        />\n      </div>\n      <div className={` flex items-center justify-center`}>\n        <NBAbutton\n          tag={\n            started && state !== State.RUN\n              ? isEng\n                ? `READY`\n                : `ПАУЗА`\n              : state === State.RUN\n              ? isEng\n                ? `PAUSE`\n                : `ПАУЗА`\n              : isEng\n              ? `START`\n              : `СТАРТ`\n          }\n          onClick={handleStart}\n          bg={\n            started && state !== State.RUN\n              ? isDarkMode\n                ? themeColor2.bg.t700\n                : themeColor2.bg.t200\n              : state === State.RUN\n              ? isDarkMode\n                ? `bg-red-700`\n                : `bg-red-200`\n              : isDarkMode\n              ? `bg-emerald-700`\n              : `bg-emerald-200`\n          }\n          hov={\n            started && state !== State.RUN\n              ? isDarkMode\n                ? themeColor2.bg.t800\n                : themeColor2.bg.t300\n              : state === State.RUN\n              ? isDarkMode\n                ? `bg-red-800`\n                : `bg-red-300`\n              : isDarkMode\n              ? `bg-emerald-800`\n              : `bg-emerald-300`\n          }\n          border={\n            started && state !== State.RUN\n              ? isDarkMode\n                ? themeColor2.border.t200\n                : themeColor2.border.t400\n              : state === State.RUN\n              ? isDarkMode\n                ? `border-red-200`\n                : `border-red-400`\n              : isDarkMode\n              ? `border-emerald-200`\n              : `border-emerald-400`\n          }\n          space\n          extraActive={spaceDown}\n          isDark={isDarkMode}\n        />\n      </div>\n      <div\n        className={`flex h-[70px] w-[400px] items-center justify-evenly gap-8 rounded-md border  ${\n          isDarkMode ? themeColor2.border.t700 : themeColor2.border.t300\n        }`}\n      >\n        <TAPREDONEkeyColor setKeyColor={setKeyColor} keyColor={keyColor} />\n        <TAPREDONEkeyType\n          keyType={keyType}\n          handleKeyType={handleKeyType}\n          keyColor={keyColor}\n        />\n        <motion.div\n          initial={{ x: -11 }}\n          whileHover={{ scale: 1.16 }}\n          whileTap={{ scale: 0.9 }}\n          onMouseDown={handleLanguage}\n          className={`h-[30px] w-[30px]  cursor-pointer rounded-full border ${\n            isDarkMode ? `border-gray-100` : `border-gray-600`\n          }`}\n        >\n          <img alt=\"\" src={trainingLanguage ? E : R} />\n        </motion.div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/hooks/useDidMountEffect.ts",["713","714"],"/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.level.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.recorder.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.upper.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.element.tsx",["715"],"import { motion } from 'framer-motion'\nimport React, { useState } from 'react'\nimport useLanguage from '../../../hooks/useLanguage'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\n\ninterface IProps {\n  char: null | string\n  color: string\n  trainingLanguage: boolean\n}\n\nexport const TAPREDONEelement: React.FC<IProps> = ({\n  char,\n  color,\n  trainingLanguage,\n}) => {\n  const [show, setShow] = useState(false)\n  const [tag, setTag] = useState(``)\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {})\n    if (char) {\n      setTag(char)\n      setShow(true)\n    } else {\n      setTag(``)\n      id = setTimeout(() => setShow(false), 100)\n    }\n    return () => clearTimeout(id)\n  }, [char])\n\n  const { isEng } = useLanguage()\n\n  // char = `A`\n  return (\n    <div\n      className={`${\n        trainingLanguage ? `font-courier` : `font-CourierC`\n      } w-100px h-100px flex items-center justify-center text-gray-900 `}\n    >\n      {show ? (\n        <motion.div\n          initial={{ width: 75, height: 75, fontSize: `9em` }}\n          animate={{\n            width: tag ? 50 : [60, 10],\n            height: tag ? 50 : [60, 10],\n            fontSize: tag ? `2.5em` : `0.5em`,\n            border: tag ? `` : `1px solid grey`,\n          }}\n          transition={{ duration: 0.2 }}\n          className={`${color}  flex items-center justify-center rounded-full uppercase`}\n        >\n          <div\n            className={` flex items-center justify-center`}\n            style={{\n              marginTop: `:;()[]{}-_`.split('').includes(tag || ` `)\n                ? `-10px`\n                : ``,\n            }}\n          >\n            {tag}\n            {[`f`, 'j', 'а', 'о'].includes(tag) && (\n              <div\n                className={` w-10px h-2px translate-y-18px absolute rounded-full bg-gray-800`}\n              />\n            )}\n          </div>\n        </motion.div>\n      ) : (\n        <div className={`w-50px h-50px`} />\n      )}\n    </div>\n    // <div>{char}</div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.frame.tsx",["716"],"import { motion } from 'framer-motion'\nimport React, { useEffect, useState } from 'react'\nimport { TAPREDONEinside } from './TAP.REDONE.inside'\nimport { State } from './TAP.REDONE.main'\n\ninterface IProps {\n  state: State\n  color: string\n  limit: number\n  handleStart: () => void\n  started: boolean\n  setState: (state: State) => void\n  block: boolean\n  setBlock: (block: boolean) => void\n}\n\nexport const TAPREDONEframe: React.FC<IProps> = ({\n  state,\n  color,\n  limit,\n  handleStart,\n  started,\n  setState,\n  block,\n  setBlock,\n}) => {\n  const [dimensions, setDimensions] = useState({\n    width: 766,\n    // height: 620,\n    clipPath1: `polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%,${``} 1% 50%, 25.5% 98.75%,${``} 74.5% 98.75%, 99% 50%, 74.5% 1.15%, 25.5% 1.15%,${``} 1% 50%, 0% 50%)`,\n    clipPath2: `polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)`,\n  })\n\n  useEffect(() => {\n    if (limit < 19) {\n      return setDimensions({\n        width: 766,\n        // height: 620,\n        clipPath1: `polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%,${``} 1% 50%, 25.5% 98.75%,${``} 74.5% 98.75%, 99% 50%, 74.5% 1.15%, 25.5% 1.15%,${``} 1% 50%, 0% 50%)`,\n        clipPath2: `polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)`,\n      })\n    } else {\n      return setDimensions({\n        width: 1110,\n        // height: 620,\n        clipPath1: `polygon(18% 0%, 82% 0%, 100% 50%, 82% 100%, 18% 100%, 0% 50%,${``} 1% 50%, 18.5% 98.5%,${``} 81.5% 98.5%, 99% 50%, 81.5% 1.5%, 18.5% 1.5%,${``} 1% 50%, 0% 50%)`,\n        clipPath2: `polygon(18% 0%, 82% 0%, 100% 50%, 82% 100%, 18% 100%, 0% 50%`,\n      })\n    }\n  }, [limit])\n\n  return (\n    <motion.div\n      animate={{\n        height: 620,\n        width: dimensions.width,\n        clipPath: dimensions.clipPath2,\n        backdropFilter: state == State.PAUSE ? `blur(10px)` : ``,\n      }}\n      className={`absolute z-10 flex items-center justify-center `}\n    >\n      <TAPREDONEinside\n        state={state}\n        handleStart={handleStart}\n        started={started}\n        setState={setState}\n        block={block}\n        setBlock={setBlock}\n      />\n\n      {/* <div\n        // initial={{ clipPath: dimensions.clipPath1 }}\n        // animate={{\n        //   height: 620,\n        //   width: dimensions.width,\n        //   clipPath: dimensions.clipPath1,\n        // }}\n        className={` relative ${color} transition-colors duration-300 ease-in-out `}\n        style={{\n          height: 620,\n          width: dimensions.width,\n          clipPath: `polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%,${``} 1% 50%, 25.5% 98.75%,${``} 74.5% 98.75%, 99% 50%, 74.5% 1.15%, 25.5% 1.15%,${``} 1% 50%, 0% 50%)`,\n        }}\n      >\n      /\n      */}\n      <motion.div\n        animate={{\n          height: 620,\n          width: dimensions.width,\n          clipPath: dimensions.clipPath1,\n        }}\n        className={`${color}`}\n      />\n    </motion.div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/BOOK.pingingCircles.tsx",["717","718"],"import React, { useState, useEffect, useRef } from 'react'\nimport useColor from '../../../../hooks/useColor'\n\ninterface IProps {\n  // amount?: number\n}\n\nexport const PingingCircles: React.FC<IProps> = ({}) => {\n  const amount = 3\n  const [refresher, setRefresher] = useState(false)\n  const ref1 = useRef(2)\n  const ref2 = useRef(4)\n  const ref3 = useRef(6)\n\n  const refs = [ref1.current, ref2.current, ref3.current]\n\n  const { mainColor1 } = useColor()\n\n  useEffect(() => {\n    let id = setInterval(() => {\n      ref1.current < 6 ? (ref1.current = ref1.current + 2) : (ref1.current = 2)\n      ref2.current < 6 ? (ref2.current = ref2.current + 2) : (ref2.current = 2)\n      ref3.current < 6 ? (ref3.current = ref3.current + 2) : (ref3.current = 2)\n      setRefresher((prev) => !prev)\n    }, 400)\n\n    return () => clearInterval(id)\n  }, [])\n\n  const circle = (num: number, key: any) => (\n    <div key={key} className={`flex items-center justify-center`}>\n      {'\\u00a0'}\n      <div\n        className={`absolute rounded-full bg-${mainColor1}-${\n          refs[num] * 100\n        } w-8px h-8px transition duration-500 ease-in-out`}\n      ></div>\n    </div>\n  )\n\n  const circles = Array.from({ length: amount }, (_, i) => i)\n    .reverse()\n    .map((el, i) => <>{circle(el, el)}</>)\n\n  return <div className={`flex flex-row`}>{circles}</div>\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/B.electronic.meter.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/BOOK.physical.meter.tsx",["719","720"],"import React, { useEffect, useState } from 'react'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\nimport { BOOKmeter2 } from './BOOK.meter'\n\ninterface IProps {\n  mileage: number\n  start?: boolean\n  starting?: number\n  red?: boolean\n}\n\nexport const BOOKphysicalmeter: React.FC<IProps> = ({\n  mileage,\n  start = false,\n  starting = 1043,\n  red = false,\n}) => {\n  const [changer, setChanger] = useState(0)\n\n  useEffect(() => {\n    if (start) {\n      for (let i = 0; i < starting; i++) {\n        setTimeout(() => {\n          setChanger((prev) => prev + 1)\n        }, i * 2)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (start) {\n      return\n    }\n    for (let i = 0; i < mileage; i++) {\n      setTimeout(() => {\n        setChanger((prev) => prev + 1)\n      }, i * 2)\n    }\n  }, [])\n\n  useDidMountEffect(() => {\n    setChanger((prev) => prev + 1)\n  }, [mileage])\n  if (red) {\n    return (\n      <div className={`flex`}>\n        <BOOKmeter2 changer={changer} multiple={0.01} red />\n        <BOOKmeter2 changer={changer} multiple={0.1} red />\n        <BOOKmeter2 changer={changer} multiple={1} red />\n      </div>\n    )\n  }\n\n  return (\n    <div className={`flex`}>\n      <BOOKmeter2 changer={changer} multiple={0.00001} />\n      <BOOKmeter2 changer={changer} multiple={0.0001} />\n      <BOOKmeter2 changer={changer} multiple={0.001} />\n      <BOOKmeter2 changer={changer} multiple={0.01} />\n      <BOOKmeter2 changer={changer} multiple={0.1} />\n      <BOOKmeter2 changer={changer} multiple={1} />\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/buttons/BOOK.CapsLockButton.tsx",["721"],"import React, { useState } from 'react'\nimport useDarkMode from '../../../../hooks/useDarkMode'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\n\ninterface IProps {\n  caps: boolean\n  capsError: number\n}\n\nexport const BOOKcapsLockButton: React.FC<IProps> = ({ caps, capsError }) => {\n  const [blinking, setBlinking] = useState(false)\n  const { isDarkMode } = useDarkMode()\n\n  useDidMountEffect(() => {\n    setBlinking(true)\n    let id = setTimeout(() => setBlinking(false), 200)\n\n    return () => {\n      setBlinking(false)\n      clearTimeout(id)\n    }\n  }, [capsError])\n\n  return (\n    <div\n      className={` rounded-md border-2 p-3 ${\n        blinking ? '${bg-red-300} animate-ping' : ''\n      } ${\n        caps\n          ? isDarkMode\n            ? 'border-red-400 text-red-400'\n            : 'border-red-500 text-red-500'\n          : isDarkMode\n          ? 'border-gray-800/80 text-gray-800/80'\n          : 'border-gray-300 text-gray-300'\n      } `}\n    >\n      CAPS LOCK\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/buttons/TAP.REDONE.key.type.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/stats/TAP.errors.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/buttons/TAP.REDONE.key.color.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/stats/TAP.overall.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/buttons/BOOK.buttonVisual.tsx",["722"],"import { motion } from 'framer-motion'\nimport React, { useState } from 'react'\nimport useColor from '../../../../hooks/useColor'\nimport useDarkMode from '../../../../hooks/useDarkMode'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\n\ninterface IProps {\n  tag: string\n  onClick?(active: boolean): void\n  active: boolean\n  hoverInfo?: string\n}\n\nexport const BOOKbuttonVisual: React.FC<IProps> = ({\n  tag,\n  onClick = () => {},\n  active,\n  hoverInfo = 'just a text to test if its working',\n}) => {\n  const [isHovered, setIsHovered] = useState(false)\n\n  const { themeColor1 } = useColor()\n  const { isDarkMode } = useDarkMode()\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.1, y: -2 }}\n      whileTap={{ scale: 0.9 }}\n      className={`${\n        tag === `A` && `font-courier font-extrabold`\n      } flex items-center justify-center overflow-hidden rounded-xl `}\n    >\n      <button\n        className={`relative z-10 justify-self-end overflow-hidden rounded-xl px-4  py-2 outline-none ${\n          active\n            ? isDarkMode\n              ? `${themeColor1.bg.t300} ${\n                  isHovered ? themeColor1.text.t300 : themeColor1.text.t800\n                }`\n              : `${themeColor1.bg.t400} ${themeColor1.text.t800}`\n            : isDarkMode\n            ? 'bg-gray-800/60 text-gray-400'\n            : 'bg-gray-200/60 text-gray-600'\n        } transition duration-1000 ease-in-out`}\n        onMouseDown={(e) => {\n          e.preventDefault()\n          onClick(!active)\n          setIsHovered(false)\n        }}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        {tag}\n        <div\n          className={`absolute -z-10 transition duration-300 ease-in-out`}\n          style={{\n            transform: `translate(${!isHovered ? `-250` : '-20'}px, -100px)`,\n          }}\n        >\n          <div\n            className={`w-220px h-150px rotate-20deg ${\n              isDarkMode ? themeColor1.bg.t700 : themeColor1.bg.t200\n            }`}\n          />\n        </div>\n      </button>\n      <button\n        className={`absolute  animate-pulse rounded-xl px-3  py-1 ${\n          active && `shadow-8th`\n        }  ease bg-transparent  ${\n          themeColor1.shadow.t600\n        } transition duration-500`}\n        disabled\n      >\n        {tag}\n      </button>\n    </motion.div>\n  )\n}\n\ninterface IProps2 {\n  title: string\n  onClick(): void\n}\n\nexport const BOOKbuttonVisualFunctional: React.FC<IProps2> = ({\n  title,\n  onClick,\n}) => {\n  const [hover, setHover] = useState(false)\n\n  const { themeColor1 } = useColor()\n  const { isDarkMode } = useDarkMode()\n\n  return (\n    <motion.div\n      whileHover={{ scale: 1.1, y: -2 }}\n      whileTap={{ scale: 0.9 }}\n      className={`overflow-hidden rounded-xl `}\n    >\n      <div\n        className={`duration-250 relative cursor-pointer overflow-hidden rounded-xl  border  ${\n          isDarkMode\n            ? `text-gray-300 ${themeColor1.border.t200}`\n            : themeColor1.border.t400\n        } px-4 py-2 transition ease-in-out active:bg-white`}\n        onMouseDown={onClick}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        {title}\n        <div\n          className={`absolute -z-10 transition duration-300 ease-in-out`}\n          style={{\n            transform: `translate(${!hover ? `-245` : '-120'}px, -100px)`,\n          }}\n        >\n          <div\n            className={`w-220px h-150px rotate-20deg  ${\n              isDarkMode ? themeColor1.bg.t700 : themeColor1.bg.t400\n            }`}\n          />\n        </div>\n        <div\n          className={`w-200px h-100px absolute -z-20  ${\n            isDarkMode ? themeColor1.bg.t700 : themeColor1.bg.t200\n          }`}\n          style={{\n            transform: `translate(-100px, -50px)`,\n          }}\n        />\n      </div>\n    </motion.div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/buttons/TAP.REDONE.appear.tsx",["723"],"import { motion } from 'framer-motion'\nimport React from 'react'\nimport useColor from '../../../../hooks/useColor'\nimport useDarkMode from '../../../../hooks/useDarkMode'\nimport useLanguage from '../../../../hooks/useLanguage'\nimport { NBAslider } from '../../../profile/NBA.slider'\nimport { AppearType, KeyColor } from '../TAP.REDONE.main'\n\ninterface IProps {\n  interval: number\n  setInterval: (interval: number) => void\n  limit: number\n  setLimit: (limit: number) => void\n  maxLimit: number\n  appearType: AppearType\n  setAppearType: (type: AppearType) => void\n  targets: number\n  setTargets: (targets: number) => void\n  keyColor: KeyColor\n}\n\nexport const TAPREDONEappear: React.FC<IProps> = ({\n  interval,\n  setInterval,\n  limit,\n  setLimit,\n  maxLimit,\n  appearType,\n  setAppearType,\n  targets,\n  setTargets,\n  keyColor,\n}) => {\n  const getColor = () => {\n    switch (keyColor) {\n      case `emerald`:\n        return [\n          isDarkMode ? `bg-emerald-300 ` : `bg-emerald-500 `,\n          `bg-emerald-200`,\n          `border-emerald-300`,\n        ]\n      case `cyan`:\n        return [\n          isDarkMode ? `bg-cyan-300 ` : `bg-cyan-500 `,\n          `bg-cyan-200`,\n          `border-cyan-300`,\n        ]\n      case `amber`:\n        return [\n          isDarkMode ? `bg-amber-300 ` : `bg-amber-500 `,\n          `bg-amber-200`,\n          `border-amber-300`,\n        ]\n      case `fuchsia`:\n        return [\n          isDarkMode ? `bg-fuchsia-300 ` : `bg-fuchsia-500 `,\n          `bg-fuchsia-200`,\n          `border-fuchsia-300`,\n        ]\n      case `pink`:\n        return [\n          isDarkMode ? `bg-pink-300 ` : `bg-pink-500 `,\n          `bg-pink-200`,\n          `border-pink-300`,\n        ]\n      default:\n        return [\n          isDarkMode ? `bg-red-300 ` : `bg-red-500 `,\n          `bg-red-200`,\n          `border-red-300`,\n        ]\n    }\n  }\n\n  let prepared = appearType !== AppearType.PREPARED\n  const { isDarkMode } = useDarkMode()\n  const { isEng } = useLanguage()\n  const { themeColor2 } = useColor()\n\n  return (\n    <>\n      <div\n        className={` h-[70px] w-[400px] overflow-hidden rounded-md border ${\n          isDarkMode ? themeColor2.border.t700 : themeColor2.border.t300\n        } pb-1.5`}\n      >\n        {/* <div\n          className={`duration-400 absolute -z-10 w-[199px] origin-right border-b  border-r   ${\n            isDarkMode\n              ? `themeColor2.border.t700 text-gray-100 ${themeColor2.bg.t800}`\n              : `themeColor2.border.t300 text-gray-100 ${themeColor2.bg.t800}`\n          }   transition ease-in-out`}\n          style={{\n            backgroundColor: `red`,\n            borderBottomRightRadius: 6,\n            transform: `rotateY(${prepared ? 0 : 180}deg)`,\n          }}\n        >\n          {' '}\n          {`\\u00a0`}\n        </div> */}\n\n        <div\n          className={`flex items-start justify-evenly ${\n            isDarkMode ? `text-gray-100` : ``\n          }`}\n        >\n          <div\n            className={`w-full cursor-pointer rounded-r-md rounded-t-none border-r border-b  text-center ${\n              appearType !== AppearType.PREPARED\n                ? isDarkMode\n                  ? `${themeColor2.bg.t900} ${themeColor2.border.t700}`\n                  : `${themeColor2.bg.t200} ${themeColor2.border.t300}`\n                : `border-transparent`\n            }`}\n            onMouseDown={() => setAppearType(AppearType.PREPARED)}\n          >\n            {isEng ? `prepared` : `по готовности`}\n          </div>\n          <div\n            className={`w-full cursor-pointer rounded-l-md rounded-t-none border-l border-b  text-center ${\n              appearType == AppearType.PREPARED\n                ? isDarkMode\n                  ? `${themeColor2.bg.t900} ${themeColor2.border.t700}`\n                  : `${themeColor2.bg.t200} ${themeColor2.border.t300}`\n                : `border-transparent`\n            }`}\n            style={{\n              borderTopLeftRadius: 0,\n            }}\n            onMouseDown={() => setAppearType(AppearType.INTERVAL)}\n          >\n            {isEng ? `interval` : `интервал`}\n          </div>\n        </div>\n\n        <div className={`relative flex w-full justify-start overflow-hidden  `}>\n          <motion.div\n            animate={{\n              x: prepared ? 0 : -400,\n            }}\n            transition={{ bounce: 0.5 }}\n            className={`flex items-center justify-start`}\n          >\n            <div\n              className={`flex w-[400px] shrink-0 items-center justify-center gap-8 `}\n            >\n              <NBAslider\n                tag={isEng ? `interval` : `интервал `}\n                min={200}\n                max={1600}\n                step={100}\n                value={interval}\n                setValue={setInterval}\n                postTag={isEng ? `ms` : 'мс'}\n                isDark={isDarkMode}\n              />\n              <NBAslider\n                tag={isEng ? `limit` : ` лимит`}\n                min={5}\n                max={maxLimit}\n                step={1}\n                value={limit}\n                setValue={setLimit}\n                isDark={isDarkMode}\n              />\n            </div>\n            <div\n              className={`flex w-[400px] shrink-0 items-center justify-center gap-8 `}\n            >\n              {[3, 4, 5].map((el) => (\n                <div\n                  key={el}\n                  className={`${\n                    getColor()[0]\n                  } flex h-[35px] w-[35px] cursor-pointer items-center justify-center rounded-full text-[22px]`}\n                  onMouseDown={() => setTargets(el)}\n                >\n                  {el}\n                </div>\n              ))}\n              <NBAslider\n                tag={isEng ? `targets` : `цели `}\n                min={1}\n                max={maxLimit > 15 ? 15 : maxLimit}\n                step={1}\n                value={targets}\n                setValue={setTargets}\n                isDark={isDarkMode}\n              />\n            </div>\n          </motion.div>\n        </div>\n      </div>\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.icon.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/profile/NBA.slider.tsx",["724","725","726","727","728","729"],"import { motion } from 'framer-motion'\nimport React, { FormEvent, useEffect, useRef, useState } from 'react'\nimport Slider, { Range } from 'rc-slider'\nimport 'rc-slider/assets/index.css'\nimport useLanguage from '../../hooks/useLanguage'\n\ninterface IProps {\n  tag: string\n  value: number\n  setValue: (value: number) => void\n  min: number\n  max: number\n  step: number\n  postTag?: string\n  isDark?: boolean\n}\n\nexport const NBAslider: React.FC<IProps> = ({\n  tag,\n  value,\n  setValue,\n  min,\n  max,\n  step,\n  postTag = ``,\n  isDark = false,\n}) => {\n  const getColor1 = () => {\n    const progress =\n      (Math.ceil((1 - (value - min) / (max - min)) * 100) + 10) * 0.8\n\n    if (progress >= 0 && progress < 10) {\n      return `rgb(255, 241, 242)`\n    } else if (progress >= 10 && progress < 20) {\n      return `rgb(255, 228, 230)`\n    } else if (progress >= 20 && progress < 30) {\n      return `rgb(254, 205, 211)`\n    } else if (progress >= 30 && progress < 40) {\n      return `rgb(253, 164, 175)`\n    } else if (progress >= 40 && progress < 50) {\n      return `rgb(251, 113, 133)`\n    } else if (progress >= 50 && progress < 60) {\n      return `rgb(244, 63, 94)`\n    } else if (progress >= 60 && progress < 70) {\n      return `rgb(225, 29, 72)`\n    } else if (progress >= 70 && progress < 80) {\n      return `rgb(190, 18, 60)`\n    } else if (progress >= 80 && progress < 90) {\n      return `rgb(159, 18, 57)`\n    } else if (progress >= 90) {\n      return `rgb(136 19 55)`\n    }\n  }\n\n  const { isEng } = useLanguage()\n\n  return (\n    <div\n      className={`w-150px flex flex-col items-center justify-center ${\n        isDark ? `text-gray-200` : `text-gray-800`\n      }  ${isEng ? `font-courier` : `font-CourierC`} w`}\n    >\n      <span className={`flex items-center justify-center whitespace-nowrap`}>\n        {tag}: {value}\n        {` `}\n        {postTag}\n      </span>\n      <Slider\n        min={min}\n        max={max}\n        step={step}\n        value={value}\n        onChange={setValue}\n        railStyle={{ backgroundColor: `rgb(186, 230, 253)` }}\n        trackStyle={{\n          backgroundColor: getColor1(),\n          transition: `background-color 0.15s ease-in-out`,\n        }}\n        handleStyle={{\n          border: `1px solid ${getColor1()}`,\n          transition: `background-color 0.15s ease-in-out`,\n        }}\n        // dotStyle={{ backgroundColor: `black` }}\n        // activeDotStyle={{ backgroundColor: 'black' }}\n      />\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.info.tsx",["730"],"import React, { useEffect, useState } from 'react'\nimport FastAndFurious from '../../static/speedometer.png'\nimport Lightning from '../../static/lightning.png'\nimport Rocket from '../../static/rocket.png'\nimport Marksman from '../../static/sniper.png'\nimport BullsEye from '../../static/target.png'\nimport Steph from '../../static/steph.png'\nimport Run from '../../static/run.png'\nimport Run2 from '../../static/run2.png'\nimport Maraphon from '../../static/finish.png'\nimport Award from '../../static/award.png'\nimport Cup from '../../static/cup.png'\nimport Grow from '../../static/grow.png'\nimport Mountain from '../../static/mountain.png'\nimport Excellence from '../../static/excellence.png'\nimport Star from '../../static/star.png'\nimport Dumbbell from '../../static/dumbbell.png'\nimport Piano from '../../static/piano.png'\n\nimport { ExpMessage } from './LEVEL.container'\nimport { LEVELelement } from './LEVEL.element'\nimport { motion } from 'framer-motion'\nimport useColor from '../../hooks/useColor'\nimport useLanguage from '../../hooks/useLanguage'\nimport useDarkMode from '../../hooks/useDarkMode'\n\ninterface IProps {\n  setHide(hide: boolean): void\n  keyboard: boolean\n}\n\nexport const LEVELinfo: React.FC<IProps> = ({ setHide, keyboard }) => {\n  const [hover, setHover] = useState(false)\n  const { isEng } = useLanguage()\n\n  // const [hover2, setHover2] = useState(true)\n\n  const achievements: [title: string, image: any, award: number][] = [\n    [isEng ? ExpMessage.Practice : ExpMessage.PracticeRus, Grow, 1],\n    [\n      isEng ? ExpMessage.TaskAheadOfYou : ExpMessage.TaskAheadOfYouRus,\n      Mountain,\n      2,\n    ],\n    [isEng ? ExpMessage.HardWorker : ExpMessage.HardWorkerRus, Dumbbell, 3],\n    [\n      isEng ? ExpMessage.MaraphonRunner : ExpMessage.MaraphonRunnerRus,\n      Maraphon,\n      4,\n    ],\n\n    [isEng ? ExpMessage.FastFingers : ExpMessage.FastFingersRus, Lightning, 3],\n    [\n      isEng ? ExpMessage.FastAndFurious : ExpMessage.FastAndFuriousRus,\n      FastAndFurious,\n      4,\n    ],\n    [isEng ? ExpMessage.WayTooFast : ExpMessage.WayTooFastRus, Rocket, 5],\n\n    [isEng ? ExpMessage.Marksman : ExpMessage.MarksmanRus, Marksman, 2],\n    [isEng ? ExpMessage.TheBullsEye : ExpMessage.TheBullsEyeRus, BullsEye, 3],\n    [\n      isEng\n        ? ExpMessage.AccurateAsStephCurry\n        : ExpMessage.AccurateAsStephCurryRus,\n      Steph,\n      5,\n    ],\n\n    [isEng ? ExpMessage.FastRun : ExpMessage.FastRunRus, Run2, 3],\n    [\n      isEng ? ExpMessage.FastAndPerfectRace : ExpMessage.FastAndPerfectRaceRus,\n      Run,\n      5,\n    ],\n\n    [isEng ? ExpMessage.NotAverage : ExpMessage.NotAverageRus, Star, 2],\n    [isEng ? ExpMessage.Excellence : ExpMessage.ExcellenceRus, Excellence, 3],\n    [isEng ? ExpMessage.TopSkills : ExpMessage.TopSkillsRus, Award, 4],\n\n    [isEng ? ExpMessage.Pianist : ExpMessage.PianistRus, Piano, 3],\n    [isEng ? ExpMessage.AbsoluteMaster : ExpMessage.AbsoluteMasterRus, Cup, 5],\n  ]\n\n  useEffect(() => {\n    setHide(false)\n    if (hover) {\n      setHide(true)\n    }\n  }, [hover])\n\n  const { isDarkMode } = useDarkMode()\n\n  const elements = (from: number, to: number, width: number | string) =>\n    achievements\n      .splice(from, to)\n      .map((el, i) => (\n        <LEVELelement\n          key={i}\n          title={el[0]}\n          image={el[1]}\n          award={el[2]}\n          width={width}\n        />\n      ))\n\n  let hr = <></>\n  // let hr = <div className={`w-f bg-gray-800 mx-4 rounded-full h-1px`} />\n  let title = (title: string) => (\n    <div\n      className={`${\n        isDarkMode ? themeColor1.bg.t900 : themeColor1.bg.t300\n      } px-2 text-center text-lg`}\n    >\n      {title}\n    </div>\n  )\n\n  const { themeColor1 } = useColor()\n\n  return (\n    <>\n      <div\n        className={`h-40px w-42px font-courier shadow-3xl z-[2000]  flex cursor-help items-center justify-center rounded-xl border ${\n          isDarkMode ? `border-gray-300` : `border-gray-900 `\n        } text-3xl  transition duration-150 ease-in-out  ${\n          hover\n            ? isDarkMode\n              ? `${themeColor1.bg.t700} ${themeColor1.shadow.t500}`\n              : `${themeColor1.bg.t300} ${themeColor1.shadow.t500}`\n            : isDarkMode\n            ? `${themeColor1.shadow.t900} ${themeColor1.bg.t800} `\n            : `${themeColor1.shadow.t700} ${themeColor1.bg.t300} `\n        }`}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        <motion.div\n          whileHover={{ rotate: [0, 20, -20, 0], scale: 1.1 }}\n          transition={{ duration: 0.3 }}\n        >\n          ?\n        </motion.div>\n      </div>\n      {hover && (\n        <div\n          className={` opacity-985  shadow-15th absolute ${\n            keyboard\n              ? `w-1040px -translate-x-6px translate-y-[-725px]`\n              : `w-[920px] translate-y-[-520px] translate-x-[54px]`\n          } flex  flex-wrap items-start justify-between overflow-hidden rounded-xl border  text-sm ${\n            isDarkMode\n              ? `border-gray-200 text-gray-200 shadow-gray-700`\n              : `border-gray-800 shadow-gray-400`\n          }  ${isDarkMode ? themeColor1.bg.t800 : themeColor1.bg.t200}`}\n        >\n          <div className={`w-f flex flex-col pb-1 pt-1`}>\n            {title(isEng ? `Volume Of Work` : `Объем Работы`)}\n            <div className={`flex flex-wrap px-1 pt-1`}>\n              {elements(0, 4, `50%`)}\n            </div>\n          </div>\n          {hr}\n          <div className={`w-f flex flex-col pb-1`}>\n            {title(isEng ? `Speed` : `Скорость`)}\n\n            <div className={`flex flex-wrap px-1 pt-1`}>\n              {' '}\n              {elements(0, 3, `50%`)}\n            </div>\n          </div>\n          {hr}{' '}\n          <div className={`w-f flex flex-col pb-1`}>\n            {title(isEng ? `Row With No Errors` : `Безошибочная Печать`)}\n\n            <div className={`flex flex-wrap px-1 pt-1`}>\n              {elements(0, 3, `50%`)}{' '}\n            </div>\n          </div>\n          {hr}{' '}\n          <div className={`w-f flex flex-col pb-1`}>\n            {title(\n              isEng ? `Speed Row With No Errors` : `Быстрая Безошибочная Печать`\n            )}\n\n            <div className={`flex flex-wrap px-1 pt-1`}>\n              {elements(0, 2, `50%`)}{' '}\n            </div>\n          </div>\n          {hr}{' '}\n          <div className={`w-f flex flex-col pb-1`}>\n            {title(isEng ? `Average Accuracy` : `Средняя Точность`)}\n\n            <div className={`flex flex-wrap px-1 pt-1`}>\n              {elements(0, 3, `50%`)}{' '}\n            </div>\n          </div>\n          {hr}{' '}\n          <div className={`w-f flex flex-col pb-1`}>\n            {title(\n              isEng\n                ? `Average Speed And Accuracy`\n                : `Средняя Скорость И Точность`\n            )}\n\n            <div className={`flex flex-wrap px-1 pt-1`}>\n              {elements(0, 2, `50%`)}{' '}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/TAP.REDONE.inside.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/stats/BOOK.meter.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/leveling/LEVEL.element.tsx",["731","732"],"import React, { useState } from 'react'\nimport useDarkMode from '../../hooks/useDarkMode'\nimport star from '../../static/awardstar.svg'\n\ninterface IProps {\n  image: any\n  title: string\n  description?: string | null\n  width: number | string\n  award: number\n}\n\nexport const LEVELelement: React.FC<IProps> = ({\n  image,\n  title,\n  width,\n  award,\n}) => {\n  const [hover, setHover] = useState(false)\n  const { isDarkMode } = useDarkMode()\n\n  return (\n    <div\n      className={`  borde border-gray-800 `}\n      style={{ margin: '4px 0', flex: width }}\n    >\n      <div className={`flex flex-nowrap items-start gap-4 `}>\n        <img\n          src={image}\n          className={`h-40px w-40px shadow-6th hover:-translate-y-3px rounded-lg border p-1 ${\n            isDarkMode\n              ? `border-gray-200 bg-gray-800 shadow-gray-200`\n              : `border-gray-800 bg-gray-100  shadow-gray-800`\n          } ${\n            hover && `shadow-3xl shadow-red-500`\n          } transition duration-200 ease-linear `}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        />\n        <div className={`flex flex-col transition duration-200 ease-linear`}>\n          <div className={`text-md whitespace-nowrap font-medium`}>{title}</div>\n          <div className={`invisibl flex `}>\n            {Array.from({ length: award }, (el) => true).map((_, i) => (\n              <img key={i} src={star} style={{ width: 12, height: 12 }} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/tap-redone/shooting/numbers/TAP.REDONE.numbers.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/NAV.link.tsx",["733"],"import React, { useState } from 'react'\nimport { MainState } from '../../../App'\n\ninterface IProps {\n  link: MainState\n  mainState: MainState\n  onClick(state: MainState): void\n}\n\nexport const NAVlink: React.FC<IProps> = ({ link, mainState, onClick }) => {\n  const [hover, setHover] = useState(false)\n  const [isClicked, setIsClicked] = useState(false)\n\n  return (\n    <div\n      className={`flex cursor-pointer items-center justify-center  py-1`}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={() => {\n        setIsClicked(true)\n        setTimeout(() => setIsClicked(false), 1500)\n        if (mainState === link) {\n          return\n        }\n        setTimeout(() => {\n          onClick(MainState.MAIN)\n        }, 0)\n        setTimeout(() => {\n          onClick(link)\n        }, 600)\n      }}\n    >\n      <a\n        className={`text:xl select-none flex-row  rounded-md lowercase\n         outline-none transition-all md:text-2xl  ${\n           isClicked && 'animate-bounce'\n         }\n         ${\n           hover && 'animate-pusle'\n         }  cursor-pointer text-gray-800 hover:text-black `}\n        style={{\n          transform: `translateY(${hover ? -6 : 0}px)`,\n        }}\n      >\n        <div>{link}</div>\n      </a>\n    </div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.keyboard.tsx",["734","735"],"import React, { useState } from 'react'\nimport { useKeyCode } from '../../../utils/useKeyCode'\nimport { BOOKkey } from './BOOK.key'\nimport E from '../../../static/profiles/uk.png'\nimport useColor from '../../../hooks/useColor'\nimport useDarkMode from '../../../hooks/useDarkMode'\n\ninterface IProps {\n  isLocalEng: boolean\n  show: [boolean, boolean, boolean, boolean]\n  handleShow: (show: 0) => void\n  handleLanguage: () => void\n}\n\nexport const BOOKkeyboard: React.FC<IProps> = ({\n  isLocalEng,\n  show,\n  handleShow,\n  handleLanguage,\n}) => {\n  // isLocalEng = false\n  const isMac = true\n  const row1: [string[], boolean][] = [\n    [['~', '`'], useKeyCode(`Backquote`)],\n    [isLocalEng ? [`!`, `1`] : [`!`, `1`], useKeyCode(`Digit1`)],\n    [isLocalEng ? [`@`, `2`] : [`\"`, `2`], useKeyCode(`Digit2`)],\n    [isLocalEng ? [`#`, `3`] : [`№`, `3`], useKeyCode(`Digit3`)],\n    [isLocalEng ? [`$`, `4`] : [`;`, `4`], useKeyCode(`Digit4`)],\n    [isLocalEng ? [`%`, `5`] : [`%`, `5`], useKeyCode(`Digit5`)],\n    [isLocalEng ? [`^`, `6`] : [`:`, `6`], useKeyCode(`Digit6`)],\n    [isLocalEng ? [`&`, `7`] : [`?`, `7`], useKeyCode(`Digit7`)],\n    [isLocalEng ? [`*`, `8`] : [`*`, `8`], useKeyCode(`Digit8`)],\n    [isLocalEng ? [`(`, `9`] : [`(`, `9`], useKeyCode(`Digit9`)],\n    [isLocalEng ? [`)`, `0`] : [`%`, `0`], useKeyCode(`Digit0`)],\n    [[`—`, `-`], useKeyCode(`Minus`)],\n    [[`+`, `=`], useKeyCode(`Equal`)],\n    [isLocalEng ? [`Delete`] : [`Delete`], useKeyCode(`Backspace`)],\n  ]\n\n  const row2: [string[], boolean][] = [\n    [[`Tab`], useKeyCode(`Tab`)],\n    [isLocalEng ? [`Q`] : [`Й`], useKeyCode(`KeyQ`)],\n    [isLocalEng ? [`W`] : [`Ц`], useKeyCode(`KeyW`)],\n    [isLocalEng ? [`E`] : [`У`], useKeyCode(`KeyE`)],\n    [isLocalEng ? [`R`] : [`К`], useKeyCode(`KeyR`)],\n    [isLocalEng ? [`T`] : [`Е`], useKeyCode(`KeyT`)],\n    [isLocalEng ? [`Y`] : [`Н`], useKeyCode(`KeyY`)],\n    [isLocalEng ? [`U`] : [`Г`], useKeyCode(`KeyU`)],\n    [isLocalEng ? [`I`] : [`Ш`], useKeyCode(`KeyI`)],\n    [isLocalEng ? [`O`] : [`Щ`], useKeyCode(`KeyO`)],\n    [isLocalEng ? [`P`] : [`З`], useKeyCode(`KeyP`)],\n    [isLocalEng ? [`{`, `[`] : [`Х`], useKeyCode(`BracketLeft`)],\n    [isLocalEng ? [`{`, `]`] : ['Ъ'], useKeyCode(`BracketRight`)],\n    [[`|`, `\\\\`], useKeyCode(`Backslash`)],\n  ]\n  const row3: [string[], boolean][] = [\n    [[isMac ? `Caps Lock` : `CapsLk`], useKeyCode(`CapsLock`)],\n    [isLocalEng ? [`A`] : [`Ф`], useKeyCode(`KeyA`)],\n    [isLocalEng ? [`S`] : [`Ы`], useKeyCode(`KeyS`)],\n    [isLocalEng ? [`D`] : [`В`], useKeyCode(`KeyD`)],\n    [isLocalEng ? [`F`] : [`А`], useKeyCode(`KeyF`)],\n    [isLocalEng ? [`G`] : [`П`], useKeyCode(`KeyG`)],\n    [isLocalEng ? [`H`] : [`Р`], useKeyCode(`KeyH`)],\n    [isLocalEng ? [`J`] : [`О`], useKeyCode(`KeyJ`)],\n    [isLocalEng ? [`K`] : [`Л`], useKeyCode(`KeyK`)],\n    [isLocalEng ? [`L`] : [`Д`], useKeyCode(`KeyL`)],\n    [isLocalEng ? [`:`, `;`] : [`Ж`], useKeyCode(`Semicolon`)],\n    [isLocalEng ? [`\"`, `'`] : [`Э`], useKeyCode(`Quote`)],\n    [[isMac ? `Return` : `Enter`], useKeyCode(`Enter`)],\n  ]\n  const row4: [string[], boolean][] = [\n    [[`Shift`], useKeyCode(`ShiftLeft`)],\n    [isLocalEng ? [`Z`] : [`Я`], useKeyCode(`KeyZ`)],\n    [isLocalEng ? [`X`] : [`Ч`], useKeyCode(`KeyX`)],\n    [isLocalEng ? [`C`] : [`С`], useKeyCode(`KeyC`)],\n    [isLocalEng ? [`V`] : [`М`], useKeyCode(`KeyV`)],\n    [isLocalEng ? [`B`] : [`И`], useKeyCode(`KeyB`)],\n    [isLocalEng ? [`N`] : [`Т`], useKeyCode(`KeyN`)],\n    [isLocalEng ? [`M`] : [`Ь`], useKeyCode(`KeyM`)],\n    [isLocalEng ? [`<`, `,`] : [`Б`], useKeyCode(`Comma`)],\n    [isLocalEng ? [`>`, '.'] : [`Ю`], useKeyCode(`Period`)],\n    [[`?`, `/`], useKeyCode(`Slash`)],\n    [[`ShiftR`], useKeyCode(`ShiftRight`)],\n  ]\n  const row5: [string[], boolean][] = [\n    [[``], useKeyCode(``)],\n\n    [[`Control`], useKeyCode(`ControlLeft`)],\n    [[`Option`], useKeyCode(`AltLeft`)],\n    [[`Command`], useKeyCode(`MetaLeft`)],\n    [[`Space`], useKeyCode(`Space`)],\n    [[`Command`], useKeyCode(`MetaRight`)],\n    [[`Option`], useKeyCode(`AltRight`)],\n    [[``], useKeyCode(``)],\n    [[``], useKeyCode(``)],\n    [[``], useKeyCode(``)],\n  ]\n\n  const { themeColor1 } = useColor()\n\n  const { isDarkMode } = useDarkMode()\n\n  return (\n    <div className={`flex  w-[980px] items-start justify-between  p-1 py-2`}>\n      <div\n        className={`flex cursor-pointer items-center justify-center rounded-full border ${\n          isDarkMode ? `border-gray-300` : `border-gray-600`\n        }`}\n        onMouseDown={handleLanguage}\n      >\n        <img\n          alt=\"\"\n          src={E}\n          className={`${show[0] ? `h-[28px]` : `h-[30px]`} w-[30px]`}\n        />\n      </div>\n\n      {show[0] && (\n        <div\n          className={` flex w-[1000px] flex-col items-center justify-center gap-[0.65rem] `}\n        >\n          <div className={`flex gap-2`}>\n            {row1.map((el) => (\n              <BOOKkey tag={el[0]} active={el[1]} />\n            ))}\n          </div>\n          <div className={`flex gap-2`}>\n            {row2.map((el) => (\n              <BOOKkey tag={el[0]} active={el[1]} />\n            ))}\n          </div>\n          <div className={`flex gap-2`}>\n            {row3.map((el) => (\n              <BOOKkey tag={el[0]} active={el[1]} />\n            ))}\n          </div>\n          <div className={`flex gap-2`}>\n            {row4.map((el) => (\n              <BOOKkey tag={el[0]} active={el[1]} />\n            ))}\n          </div>\n        </div>\n      )}\n\n      <div\n        className={`flex ${\n          show[0] ? `h-[28px]` : `h-[30px]`\n        } w-[30px] cursor-pointer items-center justify-center rounded-full border ${\n          isDarkMode ? `border-gray-300` : `border-gray-600`\n        } ${isDarkMode ? themeColor1.bg.t700 : themeColor1.bg.t300}`}\n        onMouseDown={() => handleShow(0)}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 33.5 19.992\"\n          width=\"20px\"\n          className={show[0] ? `rotate-180` : `translate-y-[2px] `}\n        >\n          <path\n            d=\"M33.5 0v5.223L16.63 19.992 0 5.343V.12l16.63 12.908z\"\n            // fill=\"rgb(107 114 128)\"\n            className={isDarkMode ? `fill-gray-200` : ` fill-gray-900`}\n          ></path>\n        </svg>\n      </div>\n    </div>\n  )\n}\n\n// import React from 'react'\n// import { useKeyCode } from '../../../utils/useKeyCode'\n// import { BOOKkey } from './BOOK.key'\n\n// interface IProps {\n//   isLocalEng: boolean\n// }\n\n// export const BOOKkeyboard: React.FC<IProps> = ({}) => {\n//   let isLocalEng = false\n//   const isMac = true\n//   const row1: [string[], boolean][] = [\n//     [['~', '`'], useKeyCode(`Backquote`)],\n//     [isLocalEng ? [`!`, `1`] : [`!`, `1`], useKeyCode(`Digit1`)],\n//     [isLocalEng ? [`@`, `2`] : [`\"`, `2`], useKeyCode(`Digit2`)],\n//     [isLocalEng ? [`#`, `3`] : [`№`, `3`], useKeyCode(`Digit3`)],\n//     [isLocalEng ? [`$`, `4`] : [`;`, `4`], useKeyCode(`Digit4`)],\n//     [isLocalEng ? [`%`, `5`] : [`%`, `5`], useKeyCode(`Digit5`)],\n//     [isLocalEng ? [`^`, `6`] : [`:`, `6`], useKeyCode(`Digit6`)],\n//     [isLocalEng ? [`&`, `7`] : [`?`, `7`], useKeyCode(`Digit7`)],\n//     [isLocalEng ? [`*`, `8`] : [`*`, `8`], useKeyCode(`Digit8`)],\n//     [isLocalEng ? [`(`, `9`] : [`(`, `9`], useKeyCode(`Digit9`)],\n//     [isLocalEng ? [`)`, `0`] : [`%`, `0`], useKeyCode(`Digit0`)],\n//     [[`—`, `-`], useKeyCode(`Minus`)],\n//     [[`+`, `=`], useKeyCode(`Equal`)],\n//     [isLocalEng ? [`Delete`] : [`Delete`], useKeyCode(`Backspace`)],\n//   ]\n\n//   const row2: [string[], boolean][] = [\n//     [[`Tab`], useKeyCode(`Tab`)],\n//     [isLocalEng ? [`Q`] : [`Й`], useKeyCode(`KeyQ`)],\n//     [isLocalEng ? [`W`] : [`Ц`], useKeyCode(`KeyW`)],\n//     [isLocalEng ? [`E`] : [`У`], useKeyCode(`KeyE`)],\n//     [isLocalEng ? [`R`] : [`К`], useKeyCode(`KeyR`)],\n//     [isLocalEng ? [`T`] : [`Е`], useKeyCode(`KeyT`)],\n//     [isLocalEng ? [`Y`] : [`Н`], useKeyCode(`KeyY`)],\n//     [isLocalEng ? [`U`] : [`Г`], useKeyCode(`KeyU`)],\n//     [isLocalEng ? [`I`] : [`Ш`], useKeyCode(`KeyI`)],\n//     [isLocalEng ? [`O`] : [`Щ`], useKeyCode(`KeyO`)],\n//     [isLocalEng ? [`P`] : [`З`], useKeyCode(`KeyP`)],\n//     [isLocalEng ? [`{`, `[`] : [`Х`], useKeyCode(`BracketLeft`)],\n//     [isLocalEng ? [`{`, `]`] : ['Ъ'], useKeyCode(`BracketRight`)],\n//     [isLocalEng ? [`|`, `\\\\`] : [``], useKeyCode(`Backslash`)],\n//   ]\n//   const row3: [string[], boolean][] = [\n//     [[isMac ? `Caps Lock` : `CapsLk`], useKeyCode(`CapsLock`)],\n//     [isLocalEng ? [`A`] : [`Ф`], useKeyCode(`KeyA`)],\n//     [isLocalEng ? [`S`] : [`Ы`], useKeyCode(`KeyS`)],\n//     [isLocalEng ? [`D`] : [`В`], useKeyCode(`KeyD`)],\n//     [isLocalEng ? [`F`] : [`А`], useKeyCode(`KeyF`)],\n//     [isLocalEng ? [`G`] : [`П`], useKeyCode(`KeyG`)],\n//     [isLocalEng ? [`H`] : [`Р`], useKeyCode(`KeyH`)],\n//     [isLocalEng ? [`J`] : [`О`], useKeyCode(`KeyJ`)],\n//     [isLocalEng ? [`K`] : [`Л`], useKeyCode(`KeyK`)],\n//     [isLocalEng ? [`L`] : [`Д`], useKeyCode(`KeyL`)],\n//     [isLocalEng ? [`:`, `;`] : [`Ж`], useKeyCode(`Semicolon`)],\n//     [isLocalEng ? [`\"`, `'`] : [`Э`], useKeyCode(`Quote`)],\n//     [[isMac ? `Return` : `Enter`], useKeyCode(`Enter`)],\n//   ]\n//   const row4: [string[], boolean][] = [\n//     [[`Shift`], useKeyCode(`ShiftLeft`)],\n//     [isLocalEng ? [`Z`] : [`Я`], useKeyCode(`KeyZ`)],\n//     [isLocalEng ? [`X`] : [`Ч`], useKeyCode(`KeyX`)],\n//     [isLocalEng ? [`C`] : [`С`], useKeyCode(`KeyC`)],\n//     [isLocalEng ? [`V`] : [`М`], useKeyCode(`KeyV`)],\n//     [isLocalEng ? [`B`] : [`И`], useKeyCode(`KeyB`)],\n//     [isLocalEng ? [`N`] : [`Т`], useKeyCode(`KeyN`)],\n//     [isLocalEng ? [`M`] : [`Ь`], useKeyCode(`KeyM`)],\n//     [isLocalEng ? [`<`, `,`] : [`Б`], useKeyCode(`Comma`)],\n//     [isLocalEng ? [`>`, '.'] : [`Ю`], useKeyCode(`Period`)],\n//     [[`?`, `/`], useKeyCode(`Slash`)],\n//     [[`ShiftR`], useKeyCode(`ShiftRight`)],\n//   ]\n//   const row5: [string[], boolean][] = [\n//     [[``], useKeyCode(``)],\n\n//     [[`Control`], useKeyCode(`ControlLeft`)],\n//     [[`Option`], useKeyCode(`AltLeft`)],\n//     [[`Command`], useKeyCode(`MetaLeft`)],\n//     [[`Space`], useKeyCode(`Space`)],\n//     [[`Command`], useKeyCode(`MetaRight`)],\n//     [[`Option`], useKeyCode(`AltRight`)],\n//     [[``], useKeyCode(``)],\n//     [[``], useKeyCode(``)],\n//     [[``], useKeyCode(``)],\n//   ]\n\n//   return (\n//     <div\n//       className={`mt-3 flex h-[350px] w-[1000px] flex-col items-center justify-center gap-[0.65rem]`}\n//     >\n//       <div className={`flex gap-2`}>\n//         {row1.map((el) => (\n//           <BOOKkey tag={el[0]} active={el[1]} />\n//         ))}\n//       </div>\n//       <div className={`flex gap-2`}>\n//         {row2.map((el) => (\n//           <BOOKkey tag={el[0]} active={el[1]} />\n//         ))}\n//       </div>\n//       <div className={`flex gap-2`}>\n//         {row3.map((el) => (\n//           <BOOKkey tag={el[0]} active={el[1]} />\n//         ))}\n//       </div>\n//       <div className={`flex gap-2`}>\n//         {row4.map((el) => (\n//           <BOOKkey tag={el[0]} active={el[1]} />\n//         ))}\n//       </div>\n//       <div className={`flex gap-2`}>\n//         {row5.map((el) => (\n//           <BOOKkey tag={el[0]} active={el[1]} />\n//         ))}\n//       </div>\n//     </div>\n//   )\n// }\n","/Users/skywalker/Web/KBRD/client/src/utils/useKeyCode.ts",["736"],"import { useState, useEffect } from 'react'\n\nexport function useKeyCode(keyCode: string): boolean {\n  const [keyPressed, setKeyPressed] = useState(false)\n\n  const downHandler = (event: KeyboardEvent) => {\n    const { code } = event\n    if (keyCode === code) {\n      setKeyPressed(true)\n    }\n  }\n\n  const upHandler = (event: KeyboardEvent) => {\n    const { code } = event\n    if (keyCode === code) {\n      setKeyPressed(false)\n    }\n  }\n\n  const resizeHandler = () => {\n    setKeyPressed(false)\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n    window.addEventListener('resize', resizeHandler)\n\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n      window.removeEventListener('resize', resizeHandler)\n    }\n  }, [])\n  return keyPressed\n}\n","/Users/skywalker/Web/KBRD/client/src/components/book-redone/components/BOOK.key.tsx",[],"/Users/skywalker/Web/KBRD/client/src/components/main-redone/NEW.container.tsx",["737","738","739","740","741"],"import React from 'react'\nimport { MainState } from '../../App'\nimport { MAINREDONEbook } from './MAIN.REDONE.BOOK'\nimport { MAINREDONEtap } from './MAIN.REDONE.TAP'\nimport mainsvg from '../../static/mainsvg.svg'\nimport { MAINREDONEinfo } from './MAIN.REDONE.INFO'\nimport { BOOKContainer } from '../book-redone/BOOK.container'\nimport { TAPREDONEcontainer } from '../tap-redone/TAP.REDONE.container'\nimport { motion } from 'framer-motion'\nimport useColor from '../../hooks/useColor'\nimport useElementSize from '../../hooks/useElementSize'\nimport useDarkMode from '../../hooks/useDarkMode'\nimport { RUSBOOKContainer } from '../book-redone-rus/RUS.BOOK.container'\n\ninterface IProps {\n  mainState: MainState\n  setMainState: (state: MainState) => void\n  trainingLanguage: boolean\n  handleLanguage: () => void\n  BOOK: boolean\n  navHeight: number\n}\n\nexport const NEWContainer: React.FC<IProps> = ({\n  mainState,\n  setMainState,\n  trainingLanguage,\n  handleLanguage,\n  BOOK,\n  navHeight,\n}) => {\n  const { themeColor1, themeColor2 } = useColor()\n\n  const { isDarkMode } = useDarkMode()\n\n  // return (\n  //   <div className={`font-BebasNeue pt-10 text-[6.5rem]`}>\n  //     <div\n  //       className={` flex h-[10rem] w-[10rem] flex-col items-center justify-center`}\n  //     >\n  //       {[\n  //         ['K', `rotate-[-45deg] translate-x-[-2px] translate-y-[2px]`],\n  //         ['B', `rotate-[45deg]`],\n  //         ['R', `rotate-[135deg] translate-x-[1px] translate-y-[-1px]`],\n  //         ['D', `rotate-[225deg]`],\n  //       ].map((el) => (\n  //         <div\n  //           className={`absolute flex h-[2px] w-[2px] ${el[1]} items-center justify-center `}\n  //         >\n  //           {' '}\n  //           <div className={`absolute translate-y-[-3.1rem]`}>{el[0]}</div>\n  //         </div>\n  //       ))}\n  //     </div>\n  //   </div>\n  // )\n\n  return (\n    <motion.div\n      className={`min-h-100vh flex w-[100vw] justify-start overflow-hidden `}\n      // className={` flex h-[100vh] w-[100vw] items-center justify-center border-4 border-black`}\n    >\n      <motion.div\n        initial={{ x: BOOK ? '0%' : '-50%' }}\n        animate={{ x: BOOK ? '0%' : '-50%' }}\n        transition={{ duration: 0.6 }}\n        className={`min-h-100vh flex w-[200vw] justify-start ${\n          isDarkMode ? `bg-black` : `bg-white`\n        }`}\n      >\n        <div\n          className={`flex min-h-[100vh] w-[100vw] items-start justify-center ${\n            isDarkMode ? themeColor1.bg.t90030 : themeColor1.bg.t50\n          } transition-colors duration-200 ease-in-out`}\n        >\n          {trainingLanguage ? (\n            <BOOKContainer handleLanguage={handleLanguage} />\n          ) : (\n            <RUSBOOKContainer handleLanguage={handleLanguage} />\n          )}\n        </div>\n        <div\n          className={`flex min-h-[100vh] w-[100vw] items-start justify-center  ${\n            isDarkMode ? themeColor2.bg.t90030 : themeColor2.bg.t50\n          }   transition-colors duration-200 ease-in-out`}\n        >\n          <TAPREDONEcontainer\n            demo={false}\n            handleLanguage={handleLanguage}\n            trainingLanguage={trainingLanguage}\n          />\n        </div>\n      </motion.div>\n    </motion.div>\n  )\n}\n","/Users/skywalker/Web/KBRD/client/src/hooks/useColor.ts",[],"/Users/skywalker/Web/KBRD/client/src/hooks/colorThemes.ts",[],"/Users/skywalker/Web/KBRD/client/src/components/navbar/nav-components/Pallete.tsx",[],"/Users/skywalker/Web/KBRD/client/src/hooks/useScroll.ts",[],"/Users/skywalker/Web/KBRD/client/src/hooks/useElementSize.ts",[],"/Users/skywalker/Web/KBRD/client/src/hooks/useOnClickOutside.ts",[],"/Users/skywalker/Web/KBRD/client/src/hooks/useDarkMode.ts",[],"/Users/skywalker/Web/KBRD/client/src/hooks/useUpdateEffect.ts",[],"/Users/skywalker/Web/KBRD/client/src/hooks/useMediaQuery.ts",[],"/Users/skywalker/Web/KBRD/client/src/hooks/useIsFirstRender.ts",[],{"ruleId":"742","replacedBy":"743"},{"ruleId":"744","replacedBy":"745"},{"ruleId":"746","severity":1,"message":"747","line":4,"column":10,"nodeType":"748","messageId":"749","endLine":4,"endColumn":15},{"ruleId":"746","severity":1,"message":"750","line":5,"column":10,"nodeType":"748","messageId":"749","endLine":5,"endColumn":20},{"ruleId":"746","severity":1,"message":"751","line":13,"column":10,"nodeType":"748","messageId":"749","endLine":13,"endColumn":21},{"ruleId":"746","severity":1,"message":"752","line":14,"column":10,"nodeType":"748","messageId":"749","endLine":14,"endColumn":29},{"ruleId":"746","severity":1,"message":"753","line":16,"column":10,"nodeType":"748","messageId":"749","endLine":16,"endColumn":14},{"ruleId":"746","severity":1,"message":"754","line":70,"column":18,"nodeType":"748","messageId":"749","endLine":70,"endColumn":23},{"ruleId":"746","severity":1,"message":"755","line":70,"column":25,"nodeType":"748","messageId":"749","endLine":70,"endColumn":31},{"ruleId":"746","severity":1,"message":"756","line":70,"column":33,"nodeType":"748","messageId":"749","endLine":70,"endColumn":39},{"ruleId":"746","severity":1,"message":"757","line":70,"column":41,"nodeType":"748","messageId":"749","endLine":70,"endColumn":46},{"ruleId":"746","severity":1,"message":"758","line":71,"column":9,"nodeType":"748","messageId":"749","endLine":71,"endColumn":24},{"ruleId":"759","severity":1,"message":"760","line":168,"column":1,"nodeType":"761","messageId":"762","endLine":170,"endColumn":2},{"ruleId":"763","severity":1,"message":"764","line":21,"column":6,"nodeType":"748","endLine":21,"endColumn":10},{"ruleId":"763","severity":1,"message":"765","line":21,"column":6,"nodeType":"748","endLine":21,"endColumn":10,"suggestions":"766"},{"ruleId":"763","severity":1,"message":"767","line":161,"column":6,"nodeType":"768","endLine":161,"endColumn":24,"suggestions":"769"},{"ruleId":"763","severity":1,"message":"770","line":170,"column":6,"nodeType":"768","endLine":170,"endColumn":8,"suggestions":"771"},{"ruleId":"772","severity":1,"message":"773","line":73,"column":11,"nodeType":"774","endLine":73,"endColumn":46},{"ruleId":"775","severity":1,"message":"776","line":77,"column":19,"nodeType":"774","endLine":77,"endColumn":46},{"ruleId":"772","severity":1,"message":"773","line":77,"column":19,"nodeType":"774","endLine":77,"endColumn":46},{"ruleId":"772","severity":1,"message":"773","line":81,"column":11,"nodeType":"774","endLine":81,"endColumn":44},{"ruleId":"777","severity":1,"message":"778","line":93,"column":9,"nodeType":"774","messageId":"779","endLine":97,"endColumn":10,"fix":"780"},{"ruleId":"746","severity":1,"message":"781","line":2,"column":10,"nodeType":"748","messageId":"749","endLine":2,"endColumn":21},{"ruleId":"746","severity":1,"message":"782","line":7,"column":10,"nodeType":"748","messageId":"749","endLine":7,"endColumn":17},{"ruleId":"746","severity":1,"message":"747","line":9,"column":10,"nodeType":"748","messageId":"749","endLine":9,"endColumn":15},{"ruleId":"746","severity":1,"message":"783","line":10,"column":8,"nodeType":"748","messageId":"749","endLine":10,"endColumn":19},{"ruleId":"746","severity":1,"message":"784","line":15,"column":10,"nodeType":"748","messageId":"749","endLine":15,"endColumn":24},{"ruleId":"746","severity":1,"message":"785","line":79,"column":9,"nodeType":"748","messageId":"749","endLine":79,"endColumn":11},{"ruleId":"746","severity":1,"message":"786","line":80,"column":9,"nodeType":"748","messageId":"749","endLine":80,"endColumn":11},{"ruleId":"746","severity":1,"message":"787","line":135,"column":10,"nodeType":"748","messageId":"749","endLine":135,"endColumn":19},{"ruleId":"763","severity":1,"message":"788","line":139,"column":6,"nodeType":"768","endLine":139,"endColumn":14,"suggestions":"789"},{"ruleId":"746","severity":1,"message":"790","line":1,"column":17,"nodeType":"748","messageId":"749","endLine":1,"endColumn":26},{"ruleId":"791","severity":1,"message":"792","line":9,"column":37,"nodeType":"793","messageId":"794","endLine":9,"endColumn":39},{"ruleId":"795","severity":1,"message":"796","line":62,"column":40,"nodeType":"797","messageId":"798","endLine":62,"endColumn":41},{"ruleId":"746","severity":1,"message":"753","line":6,"column":10,"nodeType":"748","messageId":"749","endLine":6,"endColumn":14},{"ruleId":"746","severity":1,"message":"799","line":9,"column":10,"nodeType":"748","messageId":"749","endLine":9,"endColumn":16},{"ruleId":"777","severity":1,"message":"778","line":25,"column":9,"nodeType":"774","messageId":"779","endLine":25,"endColumn":81,"fix":"800"},{"ruleId":"746","severity":1,"message":"801","line":3,"column":8,"nodeType":"748","messageId":"749","endLine":3,"endColumn":15},{"ruleId":"746","severity":1,"message":"802","line":6,"column":10,"nodeType":"748","messageId":"749","endLine":6,"endColumn":23},{"ruleId":"742","replacedBy":"803"},{"ruleId":"744","replacedBy":"804"},{"ruleId":"746","severity":1,"message":"805","line":3,"column":8,"nodeType":"748","messageId":"749","endLine":3,"endColumn":16},{"ruleId":"746","severity":1,"message":"806","line":20,"column":9,"nodeType":"748","messageId":"749","endLine":20,"endColumn":34},{"ruleId":"746","severity":1,"message":"807","line":27,"column":9,"nodeType":"748","messageId":"749","endLine":27,"endColumn":13},{"ruleId":"808","severity":1,"message":"809","line":174,"column":55,"nodeType":"797","messageId":"794","endLine":174,"endColumn":57},{"ruleId":"746","severity":1,"message":"810","line":56,"column":10,"nodeType":"748","messageId":"749","endLine":56,"endColumn":14},{"ruleId":"746","severity":1,"message":"811","line":56,"column":16,"nodeType":"748","messageId":"749","endLine":56,"endColumn":23},{"ruleId":"746","severity":1,"message":"812","line":18,"column":10,"nodeType":"748","messageId":"749","endLine":18,"endColumn":14},{"ruleId":"746","severity":1,"message":"813","line":18,"column":16,"nodeType":"748","messageId":"749","endLine":18,"endColumn":23},{"ruleId":"746","severity":1,"message":"814","line":24,"column":11,"nodeType":"748","messageId":"749","endLine":24,"endColumn":16},{"ruleId":"746","severity":1,"message":"790","line":2,"column":29,"nodeType":"748","messageId":"749","endLine":2,"endColumn":38},{"ruleId":"746","severity":1,"message":"815","line":10,"column":10,"nodeType":"748","messageId":"749","endLine":10,"endColumn":31},{"ruleId":"746","severity":1,"message":"816","line":37,"column":10,"nodeType":"748","messageId":"749","endLine":37,"endColumn":15},{"ruleId":"763","severity":1,"message":"817","line":68,"column":6,"nodeType":"768","endLine":68,"endColumn":8,"suggestions":"818"},{"ruleId":"746","severity":1,"message":"819","line":1,"column":8,"nodeType":"748","messageId":"749","endLine":1,"endColumn":13},{"ruleId":"746","severity":1,"message":"820","line":4,"column":10,"nodeType":"748","messageId":"749","endLine":4,"endColumn":23},{"ruleId":"763","severity":1,"message":"821","line":70,"column":6,"nodeType":"768","endLine":70,"endColumn":8,"suggestions":"822"},{"ruleId":"746","severity":1,"message":"790","line":2,"column":17,"nodeType":"748","messageId":"749","endLine":2,"endColumn":26},{"ruleId":"746","severity":1,"message":"823","line":4,"column":10,"nodeType":"748","messageId":"749","endLine":4,"endColumn":27},{"ruleId":"746","severity":1,"message":"781","line":5,"column":10,"nodeType":"748","messageId":"749","endLine":5,"endColumn":21},{"ruleId":"746","severity":1,"message":"824","line":4,"column":8,"nodeType":"748","messageId":"749","endLine":4,"endColumn":23},{"ruleId":"746","severity":1,"message":"825","line":19,"column":10,"nodeType":"748","messageId":"749","endLine":19,"endColumn":21},{"ruleId":"746","severity":1,"message":"814","line":25,"column":11,"nodeType":"748","messageId":"749","endLine":25,"endColumn":16},{"ruleId":"746","severity":1,"message":"826","line":26,"column":10,"nodeType":"748","messageId":"749","endLine":26,"endColumn":18},{"ruleId":"746","severity":1,"message":"827","line":33,"column":10,"nodeType":"748","messageId":"749","endLine":33,"endColumn":20},{"ruleId":"763","severity":1,"message":"828","line":60,"column":6,"nodeType":"768","endLine":60,"endColumn":8,"suggestions":"829"},{"ruleId":"763","severity":1,"message":"830","line":166,"column":6,"nodeType":"768","endLine":166,"endColumn":15,"suggestions":"831"},{"ruleId":"746","severity":1,"message":"832","line":313,"column":10,"nodeType":"748","messageId":"749","endLine":313,"endColumn":17},{"ruleId":"746","severity":1,"message":"833","line":313,"column":19,"nodeType":"748","messageId":"749","endLine":313,"endColumn":29},{"ruleId":"746","severity":1,"message":"790","line":1,"column":29,"nodeType":"748","messageId":"749","endLine":1,"endColumn":38},{"ruleId":"746","severity":1,"message":"834","line":26,"column":19,"nodeType":"748","messageId":"749","endLine":26,"endColumn":29},{"ruleId":"746","severity":1,"message":"835","line":28,"column":20,"nodeType":"748","messageId":"749","endLine":28,"endColumn":31},{"ruleId":"746","severity":1,"message":"836","line":28,"column":49,"nodeType":"748","messageId":"749","endLine":28,"endColumn":59},{"ruleId":"746","severity":1,"message":"837","line":146,"column":13,"nodeType":"748","messageId":"749","endLine":146,"endColumn":17},{"ruleId":"746","severity":1,"message":"838","line":15,"column":28,"nodeType":"748","messageId":"749","endLine":15,"endColumn":33},{"ruleId":"763","severity":1,"message":"828","line":52,"column":6,"nodeType":"768","endLine":52,"endColumn":8,"suggestions":"839"},{"ruleId":"763","severity":1,"message":"830","line":158,"column":6,"nodeType":"768","endLine":158,"endColumn":15,"suggestions":"840"},{"ruleId":"746","severity":1,"message":"832","line":305,"column":10,"nodeType":"748","messageId":"749","endLine":305,"endColumn":17},{"ruleId":"746","severity":1,"message":"833","line":305,"column":19,"nodeType":"748","messageId":"749","endLine":305,"endColumn":29},{"ruleId":"746","severity":1,"message":"841","line":21,"column":11,"nodeType":"748","messageId":"749","endLine":21,"endColumn":18},{"ruleId":"746","severity":1,"message":"836","line":21,"column":47,"nodeType":"748","messageId":"749","endLine":21,"endColumn":57},{"ruleId":"763","severity":1,"message":"842","line":27,"column":6,"nodeType":"768","endLine":27,"endColumn":8,"suggestions":"843"},{"ruleId":"746","severity":1,"message":"783","line":1,"column":8,"nodeType":"748","messageId":"749","endLine":1,"endColumn":19},{"ruleId":"742","replacedBy":"844"},{"ruleId":"744","replacedBy":"845"},{"ruleId":"763","severity":1,"message":"846","line":83,"column":6,"nodeType":"768","endLine":83,"endColumn":13,"suggestions":"847"},{"ruleId":"763","severity":1,"message":"848","line":114,"column":6,"nodeType":"768","endLine":114,"endColumn":15,"suggestions":"849"},{"ruleId":"763","severity":1,"message":"850","line":281,"column":6,"nodeType":"768","endLine":281,"endColumn":18,"suggestions":"851"},{"ruleId":"763","severity":1,"message":"852","line":290,"column":6,"nodeType":"768","endLine":290,"endColumn":13,"suggestions":"853"},{"ruleId":"763","severity":1,"message":"854","line":301,"column":6,"nodeType":"768","endLine":301,"endColumn":22,"suggestions":"855"},{"ruleId":"763","severity":1,"message":"856","line":318,"column":6,"nodeType":"768","endLine":318,"endColumn":12,"suggestions":"857"},{"ruleId":"746","severity":1,"message":"790","line":1,"column":17,"nodeType":"748","messageId":"749","endLine":1,"endColumn":26},{"ruleId":"746","severity":1,"message":"858","line":1,"column":38,"nodeType":"748","messageId":"749","endLine":1,"endColumn":51},{"ruleId":"746","severity":1,"message":"859","line":48,"column":10,"nodeType":"748","messageId":"749","endLine":48,"endColumn":23},{"ruleId":"746","severity":1,"message":"860","line":57,"column":10,"nodeType":"748","messageId":"749","endLine":57,"endColumn":23},{"ruleId":"746","severity":1,"message":"861","line":67,"column":10,"nodeType":"748","messageId":"749","endLine":67,"endColumn":24},{"ruleId":"746","severity":1,"message":"862","line":80,"column":22,"nodeType":"748","messageId":"749","endLine":80,"endColumn":35},{"ruleId":"742","replacedBy":"863"},{"ruleId":"744","replacedBy":"864"},{"ruleId":"746","severity":1,"message":"865","line":15,"column":9,"nodeType":"748","messageId":"749","endLine":15,"endColumn":23},{"ruleId":"746","severity":1,"message":"866","line":16,"column":9,"nodeType":"748","messageId":"749","endLine":16,"endColumn":23},{"ruleId":"746","severity":1,"message":"867","line":19,"column":9,"nodeType":"748","messageId":"749","endLine":19,"endColumn":22},{"ruleId":"746","severity":1,"message":"868","line":20,"column":9,"nodeType":"748","messageId":"749","endLine":20,"endColumn":22},{"ruleId":"746","severity":1,"message":"869","line":35,"column":11,"nodeType":"748","messageId":"749","endLine":35,"endColumn":16},{"ruleId":"746","severity":1,"message":"870","line":38,"column":7,"nodeType":"748","messageId":"749","endLine":38,"endColumn":9},{"ruleId":"746","severity":1,"message":"871","line":154,"column":7,"nodeType":"748","messageId":"749","endLine":154,"endColumn":16},{"ruleId":"746","severity":1,"message":"865","line":15,"column":9,"nodeType":"748","messageId":"749","endLine":15,"endColumn":23},{"ruleId":"746","severity":1,"message":"866","line":16,"column":9,"nodeType":"748","messageId":"749","endLine":16,"endColumn":23},{"ruleId":"746","severity":1,"message":"867","line":19,"column":9,"nodeType":"748","messageId":"749","endLine":19,"endColumn":22},{"ruleId":"746","severity":1,"message":"868","line":20,"column":9,"nodeType":"748","messageId":"749","endLine":20,"endColumn":22},{"ruleId":"746","severity":1,"message":"869","line":35,"column":11,"nodeType":"748","messageId":"749","endLine":35,"endColumn":16},{"ruleId":"746","severity":1,"message":"870","line":38,"column":7,"nodeType":"748","messageId":"749","endLine":38,"endColumn":9},{"ruleId":"746","severity":1,"message":"872","line":4,"column":10,"nodeType":"748","messageId":"749","endLine":4,"endColumn":23},{"ruleId":"746","severity":1,"message":"873","line":14,"column":9,"nodeType":"748","messageId":"749","endLine":14,"endColumn":26},{"ruleId":"746","severity":1,"message":"874","line":15,"column":9,"nodeType":"748","messageId":"749","endLine":15,"endColumn":26},{"ruleId":"746","severity":1,"message":"875","line":18,"column":9,"nodeType":"748","messageId":"749","endLine":18,"endColumn":25},{"ruleId":"746","severity":1,"message":"876","line":19,"column":9,"nodeType":"748","messageId":"749","endLine":19,"endColumn":25},{"ruleId":"746","severity":1,"message":"870","line":64,"column":7,"nodeType":"748","messageId":"749","endLine":64,"endColumn":9},{"ruleId":"746","severity":1,"message":"790","line":1,"column":17,"nodeType":"748","messageId":"749","endLine":1,"endColumn":26},{"ruleId":"763","severity":1,"message":"877","line":109,"column":6,"nodeType":"768","endLine":109,"endColumn":8,"suggestions":"878"},{"ruleId":"746","severity":1,"message":"879","line":4,"column":8,"nodeType":"748","messageId":"749","endLine":4,"endColumn":9},{"ruleId":"746","severity":1,"message":"880","line":5,"column":8,"nodeType":"748","messageId":"749","endLine":5,"endColumn":9},{"ruleId":"763","severity":1,"message":"877","line":112,"column":6,"nodeType":"768","endLine":112,"endColumn":8,"suggestions":"881"},{"ruleId":"882","severity":1,"message":"883","line":7,"column":18,"nodeType":"884","messageId":"885","endLine":7,"endColumn":37},{"ruleId":"746","severity":1,"message":"886","line":3,"column":10,"nodeType":"748","messageId":"749","endLine":3,"endColumn":31},{"ruleId":"746","severity":1,"message":"816","line":19,"column":10,"nodeType":"748","messageId":"749","endLine":19,"endColumn":15},{"ruleId":"746","severity":1,"message":"887","line":1,"column":10,"nodeType":"748","messageId":"749","endLine":1,"endColumn":16},{"ruleId":"746","severity":1,"message":"790","line":2,"column":17,"nodeType":"748","messageId":"749","endLine":2,"endColumn":26},{"ruleId":"763","severity":1,"message":"888","line":15,"column":6,"nodeType":"768","endLine":15,"endColumn":16,"suggestions":"889"},{"ruleId":"746","severity":1,"message":"890","line":8,"column":8,"nodeType":"748","messageId":"749","endLine":8,"endColumn":12},{"ruleId":"763","severity":1,"message":"891","line":97,"column":6,"nodeType":"768","endLine":97,"endColumn":8,"suggestions":"892"},{"ruleId":"746","severity":1,"message":"790","line":1,"column":27,"nodeType":"748","messageId":"749","endLine":1,"endColumn":36},{"ruleId":"746","severity":1,"message":"893","line":40,"column":16,"nodeType":"748","messageId":"749","endLine":40,"endColumn":23},{"ruleId":"746","severity":1,"message":"894","line":4,"column":10,"nodeType":"748","messageId":"749","endLine":4,"endColumn":19},{"ruleId":"763","severity":1,"message":"764","line":21,"column":6,"nodeType":"748","endLine":21,"endColumn":10},{"ruleId":"763","severity":1,"message":"765","line":21,"column":6,"nodeType":"748","endLine":21,"endColumn":10,"suggestions":"895"},{"ruleId":"746","severity":1,"message":"869","line":32,"column":11,"nodeType":"748","messageId":"749","endLine":32,"endColumn":16},{"ruleId":"808","severity":1,"message":"809","line":58,"column":31,"nodeType":"797","messageId":"794","endLine":58,"endColumn":33},{"ruleId":"791","severity":1,"message":"792","line":8,"column":50,"nodeType":"793","messageId":"794","endLine":8,"endColumn":52},{"ruleId":"746","severity":1,"message":"896","line":10,"column":10,"nodeType":"748","messageId":"749","endLine":10,"endColumn":19},{"ruleId":"763","severity":1,"message":"897","line":28,"column":6,"nodeType":"768","endLine":28,"endColumn":8,"suggestions":"898"},{"ruleId":"763","severity":1,"message":"899","line":39,"column":6,"nodeType":"768","endLine":39,"endColumn":8,"suggestions":"900"},{"ruleId":"901","severity":1,"message":"902","line":27,"column":20,"nodeType":"903","messageId":"904","endLine":27,"endColumn":48},{"ruleId":"746","severity":1,"message":"823","line":5,"column":10,"nodeType":"748","messageId":"749","endLine":5,"endColumn":27},{"ruleId":"808","severity":1,"message":"809","line":122,"column":26,"nodeType":"797","messageId":"794","endLine":122,"endColumn":28},{"ruleId":"746","severity":1,"message":"887","line":1,"column":10,"nodeType":"748","messageId":"749","endLine":1,"endColumn":16},{"ruleId":"746","severity":1,"message":"905","line":2,"column":17,"nodeType":"748","messageId":"749","endLine":2,"endColumn":26},{"ruleId":"746","severity":1,"message":"790","line":2,"column":28,"nodeType":"748","messageId":"749","endLine":2,"endColumn":37},{"ruleId":"746","severity":1,"message":"906","line":2,"column":39,"nodeType":"748","messageId":"749","endLine":2,"endColumn":45},{"ruleId":"746","severity":1,"message":"907","line":2,"column":47,"nodeType":"748","messageId":"749","endLine":2,"endColumn":55},{"ruleId":"746","severity":1,"message":"908","line":3,"column":18,"nodeType":"748","messageId":"749","endLine":3,"endColumn":23},{"ruleId":"763","severity":1,"message":"909","line":90,"column":6,"nodeType":"768","endLine":90,"endColumn":13,"suggestions":"910"},{"ruleId":"911","severity":1,"message":"912","line":28,"column":9,"nodeType":"774","endLine":39,"endColumn":11},{"ruleId":"911","severity":1,"message":"912","line":44,"column":15,"nodeType":"774","endLine":44,"endColumn":75},{"ruleId":"772","severity":1,"message":"773","line":33,"column":7,"nodeType":"774","endLine":44,"endColumn":8},{"ruleId":"746","severity":1,"message":"907","line":1,"column":17,"nodeType":"748","messageId":"749","endLine":1,"endColumn":25},{"ruleId":"746","severity":1,"message":"913","line":85,"column":9,"nodeType":"748","messageId":"749","endLine":85,"endColumn":36},{"ruleId":"763","severity":1,"message":"842","line":34,"column":6,"nodeType":"768","endLine":34,"endColumn":8,"suggestions":"914"},{"ruleId":"746","severity":1,"message":"915","line":3,"column":10,"nodeType":"748","messageId":"749","endLine":3,"endColumn":24},{"ruleId":"746","severity":1,"message":"916","line":4,"column":10,"nodeType":"748","messageId":"749","endLine":4,"endColumn":23},{"ruleId":"746","severity":1,"message":"917","line":5,"column":8,"nodeType":"748","messageId":"749","endLine":5,"endColumn":15},{"ruleId":"746","severity":1,"message":"918","line":6,"column":10,"nodeType":"748","messageId":"749","endLine":6,"endColumn":24},{"ruleId":"746","severity":1,"message":"919","line":11,"column":8,"nodeType":"748","messageId":"749","endLine":11,"endColumn":22},"no-native-reassign",["920"],"no-negated-in-lhs",["921"],"@typescript-eslint/no-unused-vars","'Width' is defined but never used.","Identifier","unusedVar","'Background' is defined but never used.","'AuthContext' is defined but never used.","'MAINREDONEcontainer' is defined but never used.","'Test' is defined but never used.","'login' is assigned a value but never used.","'logout' is assigned a value but never used.","'userId' is assigned a value but never used.","'email' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'func'. Either include it or remove the dependency array. If 'func' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["922"],"React Hook useEffect has a missing dependency: 'handleMission'. Either include it or remove the dependency array.","ArrayExpression",["923"],"React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.",["924"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"925","text":"926"},"'useKeyPress' is defined but never used.","'NAVlogo' is defined but never used.","'useLanguage' is defined but never used.","'NavbarPallette' is defined but never used.","'d1' is assigned a value but never used.","'d2' is assigned a value but never used.","'squareRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setNavHeight'. Either include it or remove the dependency array. If 'setNavHeight' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["927"],"'useEffect' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'appear' is assigned a value but never used.",{"range":"928","text":"926"},"'MainTap' is defined but never used.","'MAINTAPinside' is defined but never used.",["920"],["921"],"'svgbook2' is defined but never used.","'keybs' is assigned a value but never used.","'keyb' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","'card' is assigned a value but never used.","'setCard' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'width' is assigned a value but never used.","'PerspectiveController' is defined but never used.","'hover' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'del' and 'symbol'. Either include them or remove the dependency array. If 'setCurrentSymbol' needs the current value of 'symbol', you can also switch to useReducer instead of useState and read 'symbol' in the reducer.",["929"],"'React' is defined but never used.","'BOOKContainer' is defined but never used.","React Hook useEffect has a missing dependency: 'setEng'. Either include it or remove the dependency array.",["930"],"'useDidMountEffect' is defined but never used.","'useLocalStorage' is defined but never used.","'perspective' is assigned a value but never used.","'BOOKBook' is defined but never used.","'BOOKstring' is defined but never used.","React Hook useEffect has missing dependencies: 'currentString' and 'setSTRING'. Either include them or remove the dependency array.",["931"],"React Hook useEffect has missing dependencies: 'FAILURE', 'STRING', and 'capsKey'. Either include them or remove the dependency array.",["932"],"'isFirst' is assigned a value but never used.","'setIsFirst' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'loadingAuth' is assigned a value but never used.","'clearError' is assigned a value but never used.","'data' is assigned a value but never used.","'lorem' is defined but never used.",["933"],["934"],"'loading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'downHandler' and 'upHandler'. Either include them or remove the dependency array.",["935"],["920"],["921"],"React Hook useEffect has missing dependencies: 'cells.length' and 'setCells'. Either include them or remove the dependency array.",["936"],"React Hook useEffect has a missing dependency: 'alphabet.length'. Either include it or remove the dependency array.",["937"],"React Hook useEffect has missing dependencies: 'clearCells', 'limit', 'limitMemory', 'setLimit', 'setLimitMemory', 'state', and 'targets'. Either include them or remove the dependency array.",["938"],"React Hook useEffect has missing dependencies: 'appearType', 'clearCells', and 'targets'. Either include them or remove the dependency array.",["939"],"React Hook useEffect has missing dependencies: 'Ptargets', 'appearType', and 'state'. Either include them or remove the dependency array.",["940"],"React Hook useEffect has missing dependencies: 'appearType', 'interval', 'pushCell', and 'state'. Either include them or remove the dependency array.",["941"],"'KeyboardEvent' is defined but never used.","'usernameColor' is assigned a value but never used.","'passwordColor' is assigned a value but never used.","'password2Color' is assigned a value but never used.","'setPass2Enter' is assigned a value but never used.",["920"],["921"],"'RIGHT2' is assigned a value but never used.","'RIGHT3' is assigned a value but never used.","'LEFT2' is assigned a value but never used.","'LEFT3' is assigned a value but never used.","'isEng' is assigned a value but never used.","'xl' is assigned a value but never used.","'forbidden' is assigned a value but never used.","'useWindowSize' is defined but never used.","'rawRIGHT2' is assigned a value but never used.","'rawRIGHT3' is assigned a value but never used.","'rawLEFT2' is assigned a value but never used.","'rawLEFT3' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleRandom'. Either include it or remove the dependency array.",["942"],"'R' is defined but never used.","'E' is defined but never used.",["943"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'a'.","ArrowFunctionExpression","unsafeRefs","'BOOKstatsErrorsWidget' is defined but never used.","'motion' is defined but never used.","React Hook useEffect has a missing dependency: 'handleTick'. Either include it or remove the dependency array. If 'handleTick' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["944"],"'INFO' is defined but never used.","React Hook useEffect has a missing dependency: 'localExp'. Either include it or remove the dependency array.",["945"],"'setShow' is assigned a value but never used.","'NBAslider' is defined but never used.",["946"],"'refresher' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'start' and 'starting'. Either include them or remove the dependency array.",["947"],"React Hook useEffect has missing dependencies: 'mileage' and 'start'. Either include them or remove the dependency array.",["948"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'FormEvent' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'Range' is defined but never used.","React Hook useEffect has a missing dependency: 'setHide'. Either include it or remove the dependency array. If 'setHide' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["949"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'row5' is assigned a value but never used.",["950"],"'MAINREDONEbook' is defined but never used.","'MAINREDONEtap' is defined but never used.","'mainsvg' is defined but never used.","'MAINREDONEinfo' is defined but never used.","'useElementSize' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"951","fix":"952"},{"desc":"953","fix":"954"},{"desc":"955","fix":"956"},[3008,3008]," rel=\"noreferrer\"",{"desc":"957","fix":"958"},[769,769],{"desc":"959","fix":"960"},{"desc":"961","fix":"962"},{"desc":"963","fix":"964"},{"desc":"965","fix":"966"},{"desc":"963","fix":"967"},{"desc":"965","fix":"968"},{"desc":"969","fix":"970"},{"desc":"971","fix":"972"},{"desc":"973","fix":"974"},{"desc":"975","fix":"976"},{"desc":"977","fix":"978"},{"desc":"979","fix":"980"},{"desc":"981","fix":"982"},{"desc":"983","fix":"984"},{"desc":"983","fix":"985"},{"desc":"986","fix":"987"},{"desc":"988","fix":"989"},{"desc":"951","fix":"990"},{"desc":"991","fix":"992"},{"desc":"993","fix":"994"},{"desc":"995","fix":"996"},{"desc":"969","fix":"997"},"Update the dependencies array to be: [func]",{"range":"998","text":"999"},"Update the dependencies array to be: [handleMission, windowDimensions]",{"range":"1000","text":"1001"},"Update the dependencies array to be: [handleResize]",{"range":"1002","text":"1003"},"Update the dependencies array to be: [height, setNavHeight]",{"range":"1004","text":"1005"},"Update the dependencies array to be: [del, symbol]",{"range":"1006","text":"1007"},"Update the dependencies array to be: [setEng]",{"range":"1008","text":"1009"},"Update the dependencies array to be: [currentString, setSTRING]",{"range":"1010","text":"1011"},"Update the dependencies array to be: [FAILURE, STRING, capsKey, keyDown]",{"range":"1012","text":"1013"},{"range":"1014","text":"1011"},{"range":"1015","text":"1013"},"Update the dependencies array to be: [downHandler, upHandler]",{"range":"1016","text":"1017"},"Update the dependencies array to be: [cells.length, limit, setCells]",{"range":"1018","text":"1019"},"Update the dependencies array to be: [alphabet.length, keyType]",{"range":"1020","text":"1021"},"Update the dependencies array to be: [appearType, clearCells, limit, limitMemory, setLimit, setLimitMemory, state, targets]",{"range":"1022","text":"1023"},"Update the dependencies array to be: [appearType, clearCells, state, targets]",{"range":"1024","text":"1025"},"Update the dependencies array to be: [Ptargets, appearType, cells, state, targets]",{"range":"1026","text":"1027"},"Update the dependencies array to be: [appearType, interval, pushCell, state, tick]",{"range":"1028","text":"1029"},"Update the dependencies array to be: [handleRandom]",{"range":"1030","text":"1031"},{"range":"1032","text":"1031"},"Update the dependencies array to be: [handleTick, interval]",{"range":"1033","text":"1034"},"Update the dependencies array to be: [localExp]",{"range":"1035","text":"1036"},{"range":"1037","text":"999"},"Update the dependencies array to be: [start, starting]",{"range":"1038","text":"1039"},"Update the dependencies array to be: [mileage, start]",{"range":"1040","text":"1041"},"Update the dependencies array to be: [hover, setHide]",{"range":"1042","text":"1043"},{"range":"1044","text":"1017"},[516,520],"[func]",[4010,4028],"[handleMission, windowDimensions]",[4256,4258],"[handleResize]",[3774,3782],"[height, setNavHeight]",[1315,1317],"[del, symbol]",[1501,1503],"[setEng]",[2550,2552],"[currentString, setSTRING]",[5104,5113],"[FAILURE, STRING, capsKey, keyDown]",[2305,2307],[4844,4853],[701,703],"[downHandler, upHandler]",[2231,2238],"[cells.length, limit, setCells]",[3035,3044],"[alphabet.length, keyType]",[7115,7127],"[appearType, clearCells, limit, limitMemory, setLimit, setLimitMemory, state, targets]",[7332,7339],"[appearType, clearCells, state, targets]",[7653,7669],"[Ptargets, appearType, cells, state, targets]",[8101,8107],"[appearType, interval, pushCell, state, tick]",[2991,2993],"[handleRandom]",[3165,3167],[308,318],"[handleTick, interval]",[2472,2474],"[localExp]",[516,520],[614,616],"[start, starting]",[806,808],"[mileage, start]",[3023,3030],"[hover, setHide]",[872,874]]