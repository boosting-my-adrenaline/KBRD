[{"/Users/skywalker/Web/testclone/KBRD/client/src/index.tsx":"1","/Users/skywalker/Web/testclone/KBRD/client/src/App.tsx":"2","/Users/skywalker/Web/testclone/KBRD/client/src/redux/store.ts":"3","/Users/skywalker/Web/testclone/KBRD/client/src/hooks/useAction.ts":"4","/Users/skywalker/Web/testclone/KBRD/client/src/redux/root.reducer.ts":"5","/Users/skywalker/Web/testclone/KBRD/client/src/types/nav.ts":"6","/Users/skywalker/Web/testclone/KBRD/client/src/hooks/useTypedSelector.ts":"7","/Users/skywalker/Web/testclone/KBRD/client/src/components/BackgroundPlain.tsx":"8","/Users/skywalker/Web/testclone/KBRD/client/src/components/PerspectiveController.tsx":"9","/Users/skywalker/Web/testclone/KBRD/client/src/utils/GetWidth.tsx":"10","/Users/skywalker/Web/testclone/KBRD/client/src/components/BlurScreen.tsx":"11","/Users/skywalker/Web/testclone/KBRD/client/src/components/Footer.tsx":"12","/Users/skywalker/Web/testclone/KBRD/client/src/components/NotFound.tsx":"13","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/TAP.container.tsx":"14","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/BOOK.container.tsx":"15","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/Navbar.tsx":"16","/Users/skywalker/Web/testclone/KBRD/client/src/components/info/INFO.container.tsx":"17","/Users/skywalker/Web/testclone/KBRD/client/src/components/main/MAIN.container.tsx":"18","/Users/skywalker/Web/testclone/KBRD/client/src/components/belowSupportedResolution/Below1000.tsx":"19","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/AUTH.container.tsx":"20","/Users/skywalker/Web/testclone/KBRD/client/src/redux/nav/nav.actions.ts":"21","/Users/skywalker/Web/testclone/KBRD/client/src/redux/auth/auth.actions.ts":"22","/Users/skywalker/Web/testclone/KBRD/client/src/redux/nav/nav.reducer.ts":"23","/Users/skywalker/Web/testclone/KBRD/client/src/redux/auth/auth.reducer.ts":"24","/Users/skywalker/Web/testclone/KBRD/client/src/utils/useDidMountEffect.tsx":"25","/Users/skywalker/Web/testclone/KBRD/client/src/utils/useKeyPress.ts":"26","/Users/skywalker/Web/testclone/KBRD/client/src/redux/nav/nav.types.ts":"27","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/TAP.shooting.tsx":"28","/Users/skywalker/Web/testclone/KBRD/client/src/components/loading/Hexagon.tsx":"29","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/thegreatgatsby.ts":"30","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/strings/strings.ts":"31","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.pointer.tsx":"32","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.failures.tsx":"33","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.stats.tsx":"34","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.layout.tsx":"35","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/strings/stringFormation.ts":"36","/Users/skywalker/Web/testclone/KBRD/client/src/utils/FadeText3.tsx":"37","/Users/skywalker/Web/testclone/KBRD/client/src/components/loading/HexagonRounded.tsx":"38","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.book.tsx":"39","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.buttons.tsx":"40","/Users/skywalker/Web/testclone/KBRD/client/src/components/belowSupportedResolution/BelowNavbar.tsx":"41","/Users/skywalker/Web/testclone/KBRD/client/src/components/info/INFO.slide.tsx":"42","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/strings/BOOK.string.tsx":"43","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/NAV.links.tsx":"44","/Users/skywalker/Web/testclone/KBRD/client/src/components/main/components/Slide.tsx":"45","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/AuthMiniature.tsx":"46","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/ArrowPage.tsx":"47","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/signup/AUTH.signup.container.tsx":"48","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/login/AUTH.login.container.tsx":"49","/Users/skywalker/Web/testclone/KBRD/client/src/utils/modifier.ts":"50","/Users/skywalker/Web/testclone/KBRD/client/src/redux/auth/auth.types.ts":"51","/Users/skywalker/Web/testclone/KBRD/client/src/components/loading/BlinkRandomSymbol.tsx":"52","/Users/skywalker/Web/testclone/KBRD/client/src/utils/shuffleArray.ts":"53","/Users/skywalker/Web/testclone/KBRD/client/src/utils/FadeText.tsx":"54","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/gonewiththewind.ts":"55","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/lionwitch.ts":"56","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/robinson.ts":"57","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/lorem.ts":"58","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/tokillamockinbird.ts":"59","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.modal.tsx":"60","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.timers.tsx":"61","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.buttons.tsx":"62","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.tap.tsx":"63","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/the1984.ts":"64","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/thelordoftherings.ts":"65","/Users/skywalker/Web/testclone/KBRD/client/src/utils/FadeText2.tsx":"66","/Users/skywalker/Web/testclone/KBRD/client/src/hooks/http.hook.ts":"67","/Users/skywalker/Web/testclone/KBRD/client/src/utils/getRandom.tsx":"68","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.container.tsx":"69","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/login/loginUtils.ts":"70","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/signup/signupUtils.ts":"71","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.accuracy.widget.tsx":"72","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/strings/BOOK.string.button.tsx":"73","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.cpm.widget.tsx":"74","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/buttons/BOOK.functionalButtons.tsx":"75","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.accuracyCounter.tsx":"76","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.stats.recorder.tsx":"77","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.stats.CPMcounter.tsx":"78","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/Nav.link.tsx":"79","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/PhotoMiniature.tsx":"80","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/login/AUTH.login.tsx":"81","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/signup/AUTH.signup.tsx":"82","/Users/skywalker/Web/testclone/KBRD/client/src/components/profile/PROFILE.container.tsx":"83","/Users/skywalker/Web/testclone/KBRD/client/src/components/loading/getRandomLetter.tsx":"84","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.limitSlider.tsx":"85","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.keyStyle.tsx":"86","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.upper.tsx":"87","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.intervalSlider.tsx":"88","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.keyType.tsx":"89","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.level.tsx":"90","/Users/skywalker/Web/testclone/KBRD/client/src/components/profile/PROFILE.info.tsx":"91","/Users/skywalker/Web/testclone/KBRD/client/src/components/profile/PROFILE.profile.tsx":"92","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.frame.tsx":"93","/Users/skywalker/Web/testclone/KBRD/client/src/components/profile/PROFILE.stats.tsx":"94","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/buttons/BOOK.CapsLockButton.tsx":"95","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/buttons/BOOK.buttonVisual.tsx":"96","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.pingingCircles.tsx":"97","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.icon.tsx":"98","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/NAV.link.tsx":"99","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/NAV.logo.tsx":"100","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.info.tsx":"101","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.element.tsx":"102","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.meter.tsx":"103","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.overall.widget.tsx":"104","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.physical.meter.tsx":"105","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.electronic.meter.tsx":"106","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.error.widget.tsx":"107","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.recorder.tsx":"108","/Users/skywalker/Web/testclone/KBRD/client/src/hooks/auth.hook.ts":"109","/Users/skywalker/Web/testclone/KBRD/client/src/context/AuthContext.ts":"110"},{"size":589,"mtime":1641240739512,"results":"111","hashOfConfig":"112"},{"size":5012,"mtime":1641482691499,"results":"113","hashOfConfig":"112"},{"size":636,"mtime":1641240666336,"results":"114","hashOfConfig":"112"},{"size":472,"mtime":1640728260822,"results":"115","hashOfConfig":"112"},{"size":282,"mtime":1640728260826,"results":"116","hashOfConfig":"112"},{"size":639,"mtime":1640728260835,"results":"117","hashOfConfig":"112"},{"size":192,"mtime":1640728260822,"results":"118","hashOfConfig":"112"},{"size":918,"mtime":1641074361596,"results":"119","hashOfConfig":"112"},{"size":4186,"mtime":1641086247535,"results":"120","hashOfConfig":"112"},{"size":759,"mtime":1640728260837,"results":"121","hashOfConfig":"112"},{"size":385,"mtime":1640728260784,"results":"122","hashOfConfig":"112"},{"size":1979,"mtime":1641075461007,"results":"123","hashOfConfig":"112"},{"size":3214,"mtime":1640728260785,"results":"124","hashOfConfig":"112"},{"size":779,"mtime":1640728260817,"results":"125","hashOfConfig":"112"},{"size":9852,"mtime":1641139089086,"results":"126","hashOfConfig":"112"},{"size":6160,"mtime":1641074336645,"results":"127","hashOfConfig":"112"},{"size":2601,"mtime":1641075502238,"results":"128","hashOfConfig":"112"},{"size":1820,"mtime":1640729011905,"results":"129","hashOfConfig":"112"},{"size":7404,"mtime":1640728260791,"results":"130","hashOfConfig":"112"},{"size":3758,"mtime":1641414914051,"results":"131","hashOfConfig":"112"},{"size":413,"mtime":1640728260825,"results":"132","hashOfConfig":"112"},{"size":831,"mtime":1641307855954,"results":"133","hashOfConfig":"112"},{"size":650,"mtime":1640881500030,"results":"134","hashOfConfig":"112"},{"size":2536,"mtime":1641332191271,"results":"135","hashOfConfig":"112"},{"size":524,"mtime":1640728260838,"results":"136","hashOfConfig":"112"},{"size":727,"mtime":1640728260838,"results":"137","hashOfConfig":"112"},{"size":277,"mtime":1640728260826,"results":"138","hashOfConfig":"112"},{"size":7442,"mtime":1641073915206,"results":"139","hashOfConfig":"112"},{"size":3618,"mtime":1640728260810,"results":"140","hashOfConfig":"112"},{"size":10653,"mtime":1640728260831,"results":"141","hashOfConfig":"112"},{"size":1128,"mtime":1640728260806,"results":"142","hashOfConfig":"112"},{"size":1988,"mtime":1640728260798,"results":"143","hashOfConfig":"112"},{"size":2214,"mtime":1640728260797,"results":"144","hashOfConfig":"112"},{"size":4601,"mtime":1641165123054,"results":"145","hashOfConfig":"112"},{"size":3802,"mtime":1640728260798,"results":"146","hashOfConfig":"112"},{"size":3231,"mtime":1640728260805,"results":"147","hashOfConfig":"112"},{"size":1158,"mtime":1640728260837,"results":"148","hashOfConfig":"112"},{"size":5460,"mtime":1640728260810,"results":"149","hashOfConfig":"112"},{"size":2621,"mtime":1640728260796,"results":"150","hashOfConfig":"112"},{"size":2756,"mtime":1640728260797,"results":"151","hashOfConfig":"112"},{"size":1220,"mtime":1640728260792,"results":"152","hashOfConfig":"112"},{"size":1890,"mtime":1640728260807,"results":"153","hashOfConfig":"112"},{"size":5613,"mtime":1640728260805,"results":"154","hashOfConfig":"112"},{"size":2943,"mtime":1641070867339,"results":"155","hashOfConfig":"112"},{"size":2862,"mtime":1640905004873,"results":"156","hashOfConfig":"112"},{"size":5053,"mtime":1641481133881,"results":"157","hashOfConfig":"112"},{"size":3603,"mtime":1641082189750,"results":"158","hashOfConfig":"112"},{"size":5097,"mtime":1640728260790,"results":"159","hashOfConfig":"112"},{"size":2252,"mtime":1641481636819,"results":"160","hashOfConfig":"112"},{"size":882,"mtime":1640728260837,"results":"161","hashOfConfig":"112"},{"size":227,"mtime":1641306335474,"results":"162","hashOfConfig":"112"},{"size":1737,"mtime":1640728260809,"results":"163","hashOfConfig":"112"},{"size":331,"mtime":1640728260838,"results":"164","hashOfConfig":"112"},{"size":2649,"mtime":1640728260836,"results":"165","hashOfConfig":"112"},{"size":5423,"mtime":1640728260830,"results":"166","hashOfConfig":"112"},{"size":5237,"mtime":1640728260830,"results":"167","hashOfConfig":"112"},{"size":9952,"mtime":1640728260830,"results":"168","hashOfConfig":"112"},{"size":4377,"mtime":1640728260830,"results":"169","hashOfConfig":"112"},{"size":6782,"mtime":1640728260832,"results":"170","hashOfConfig":"112"},{"size":1003,"mtime":1640728260820,"results":"171","hashOfConfig":"112"},{"size":366,"mtime":1640728260821,"results":"172","hashOfConfig":"112"},{"size":3795,"mtime":1641074103290,"results":"173","hashOfConfig":"112"},{"size":4481,"mtime":1641073785750,"results":"174","hashOfConfig":"112"},{"size":6466,"mtime":1640728260831,"results":"175","hashOfConfig":"112"},{"size":6085,"mtime":1640728260831,"results":"176","hashOfConfig":"112"},{"size":1435,"mtime":1640728260836,"results":"177","hashOfConfig":"112"},{"size":1313,"mtime":1641477316568,"results":"178","hashOfConfig":"112"},{"size":127,"mtime":1640728260837,"results":"179","hashOfConfig":"112"},{"size":3990,"mtime":1641318130943,"results":"180","hashOfConfig":"112"},{"size":326,"mtime":1640728260789,"results":"181","hashOfConfig":"112"},{"size":2046,"mtime":1640728260790,"results":"182","hashOfConfig":"112"},{"size":9363,"mtime":1641159181745,"results":"183","hashOfConfig":"112"},{"size":2730,"mtime":1641168984458,"results":"184","hashOfConfig":"112"},{"size":7738,"mtime":1641159192752,"results":"185","hashOfConfig":"112"},{"size":3142,"mtime":1640728260801,"results":"186","hashOfConfig":"112"},{"size":954,"mtime":1640728260802,"results":"187","hashOfConfig":"112"},{"size":230,"mtime":1640728260804,"results":"188","hashOfConfig":"112"},{"size":2780,"mtime":1640728260803,"results":"189","hashOfConfig":"112"},{"size":1177,"mtime":1640728260815,"results":"190","hashOfConfig":"112"},{"size":1030,"mtime":1640728260815,"results":"191","hashOfConfig":"112"},{"size":4358,"mtime":1640728260788,"results":"192","hashOfConfig":"112"},{"size":6219,"mtime":1641467170490,"results":"193","hashOfConfig":"112"},{"size":5269,"mtime":1641481701094,"results":"194","hashOfConfig":"112"},{"size":237,"mtime":1640728260811,"results":"195","hashOfConfig":"112"},{"size":737,"mtime":1640728260820,"results":"196","hashOfConfig":"112"},{"size":3456,"mtime":1640904681941,"results":"197","hashOfConfig":"112"},{"size":4447,"mtime":1641170825441,"results":"198","hashOfConfig":"112"},{"size":717,"mtime":1640728260819,"results":"199","hashOfConfig":"112"},{"size":4796,"mtime":1640880528191,"results":"200","hashOfConfig":"112"},{"size":2418,"mtime":1641170742988,"results":"201","hashOfConfig":"112"},{"size":865,"mtime":1641335550682,"results":"202","hashOfConfig":"112"},{"size":102,"mtime":1640728260817,"results":"203","hashOfConfig":"112"},{"size":8518,"mtime":1641073669258,"results":"204","hashOfConfig":"112"},{"size":114,"mtime":1640728260817,"results":"205","hashOfConfig":"112"},{"size":732,"mtime":1640728260800,"results":"206","hashOfConfig":"112"},{"size":4993,"mtime":1641169090345,"results":"207","hashOfConfig":"112"},{"size":1287,"mtime":1640730044685,"results":"208","hashOfConfig":"112"},{"size":5399,"mtime":1641476032456,"results":"209","hashOfConfig":"112"},{"size":1177,"mtime":1641070811972,"results":"210","hashOfConfig":"112"},{"size":2225,"mtime":1641075818644,"results":"211","hashOfConfig":"112"},{"size":4923,"mtime":1641483314605,"results":"212","hashOfConfig":"112"},{"size":1549,"mtime":1641134555080,"results":"213","hashOfConfig":"112"},{"size":1997,"mtime":1641165798961,"results":"214","hashOfConfig":"112"},{"size":4125,"mtime":1641164897596,"results":"215","hashOfConfig":"112"},{"size":1539,"mtime":1641169595846,"results":"216","hashOfConfig":"112"},{"size":2120,"mtime":1641166508980,"results":"217","hashOfConfig":"112"},{"size":4188,"mtime":1641165939686,"results":"218","hashOfConfig":"112"},{"size":1018,"mtime":1641314370453,"results":"219","hashOfConfig":"112"},{"size":883,"mtime":1641483200745,"results":"220","hashOfConfig":"112"},{"size":354,"mtime":1641480738353,"results":"221","hashOfConfig":"112"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},"qf6mmh",{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"224"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"224"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"250","usedDeprecatedRules":"224"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"224"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"224"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"224"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"224"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"224"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"224"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"224"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"224"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"224"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"224"},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"224"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"224"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"224"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"224"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"224"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"224"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"224"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"327","usedDeprecatedRules":"224"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"224"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"224"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"224"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"224"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"224"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"224"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351"},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"224"},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"224"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"224"},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"367","messages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"224"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"224"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"224"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"224"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"389","messages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"391","messages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"224"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"224"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"224"},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"224"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"224"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"224"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"224"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435"},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"440","usedDeprecatedRules":"224"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"224"},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"224"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"224"},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"224"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"459","messages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"224"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468","usedDeprecatedRules":"224"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"224"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477","usedDeprecatedRules":"224"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"224"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"224"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"224"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"224"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/skywalker/Web/testclone/KBRD/client/src/index.tsx",[],["505","506"],"/Users/skywalker/Web/testclone/KBRD/client/src/App.tsx",["507","508","509"],"import React, { useState, useEffect, useRef } from 'react'\n\nimport { BOOKContainer } from './components/book-redone/BOOK.container'\nimport { TAPContainer } from './components/tap/TAP.container'\nimport { Navbar } from './components/navbar/Navbar'\nimport { Routes, Route, useNavigate } from 'react-router-dom'\nimport { Width } from './utils/GetWidth'\nimport { useTypedSelector } from './hooks/useTypedSelector'\nimport { Background } from './components/BackgroundPlain'\nimport { MAINcontainer } from './components/main/MAIN.container'\nimport { Chapters } from './types/nav'\nimport { INFOcontainer } from './components/info/INFO.container'\nimport { BlurScreen } from './components/BlurScreen'\nimport { AUTHcontainer } from './components/authorization/AUTH.container'\n// import { LoadingScreen } from './components/loading/LoadingScreen'\nimport { useAuthAction, useNavAction } from './hooks/useAction'\nimport { PerspectiveController } from './components/PerspectiveController'\nimport { Below1000 } from './components/belowSupportedResolution/Below1000'\nimport { NotFound } from './components/NotFound'\nimport { Footer } from './components/Footer'\nimport { useAuth } from './hooks/auth.hook'\nimport { AuthContext } from './context/AuthContext'\n\nexport const App: React.FC = () => {\n  const navigation = useNavigate()\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n\n  const [block, setBlock] = useState(false)\n\n  const changeCurrentChapter = (chap: Chapters): void => {\n    if (chap === Chapters.MAIN) {\n      navigation('/')\n    } else if (chap === Chapters.NOT_FOUND) {\n      navigation('/not_found')\n    } else {\n      navigation(`/${chap.toLowerCase()}`)\n    }\n  }\n\n  useEffect(() => {\n    if (block) return\n\n    setBlock(true)\n    let id = setTimeout(() => changeCurrentChapter(chapter), 1100)\n\n    let id2 = setTimeout(() => setBlock(false), 1700)\n\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n      setBlock(false)\n    }\n  }, [chapter])\n\n  const [initialScreen, setInitialScreen] = useState(true)\n\n  useEffect(() => {\n    setTimeout(() => setInitialScreen(false), 1000)\n  }, [])\n\n  const isLoading = useTypedSelector((state) => state.nav.isLoading)\n  // const { setLoadingOn, setLoadingOff } = useNavAction()\n  const [perspective, setPerspective] = useState<[number, number, boolean]>([\n    0,\n    100,\n    true,\n  ])\n\n  const handleSetPerspective = (\n    perspective: number,\n    margin: number,\n    is1000plus: boolean\n  ) => {\n    setPerspective([perspective, margin, is1000plus])\n  }\n\n  const isOpened: boolean = useTypedSelector((state) => state.auth.isOpened)\n  const { setOpenOff } = useAuthAction()\n\n  const renders = useRef(0)\n\n  useEffect(() => {\n    renders.current++\n  })\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      if (e.keyCode === 32) {\n        e.preventDefault()\n      }\n    })\n\n    return () =>\n      window.removeEventListener('keydown', (e) => {\n        if (e.keyCode === 32) {\n          e.preventDefault()\n        }\n      })\n  }, [])\n\n  const { token, login, logout, userId } = useAuth()\n  const isAuthenticated = !!token\n\n  // useEffect(() => {\n  //   window.M.updateTextFields()\n  // }, [])\n  // const routes = useRoutes(isAuthenticated)\n\n  return (\n    <AuthContext.Provider\n      value={{ token, login, logout, userId, isAuthenticated }}\n    >\n      <div className={''}>\n        <BlurScreen show={initialScreen} />\n        <PerspectiveController setPerspective={handleSetPerspective} />\n        {/* <div className={`absolute top-8 left-8 `} style={{ zIndex: 999999 }}>\n        renders: {renders.current}\n      </div> */}\n        {perspective[2] ? null : <Below1000 />}\n\n        {perspective[2] ? (\n          <div\n            style={{\n              opacity: initialScreen ? 0 : 1,\n              transition: '1.5s ease',\n            }}\n          >\n            <Navbar block={block} />\n            <Footer />\n            <Background />\n\n            <div\n              className={`fixed right-0 left-0 top-0 bottom-0 bg-gray-400 z-40  opacity-${\n                isOpened ? '50 cursor-pointer' : '0'\n              }`}\n              style={{\n                transition: '0.4s ease-in-out',\n                display: isOpened ? 'block' : 'none',\n              }}\n              onMouseDown={() => setOpenOff()}\n            ></div>\n\n            <div>\n              <div className=\" invisible z-50 absolute top-16\">\n                <Width />\n              </div>\n              <Routes>\n                <Route path=\"/\" element={<MAINcontainer />} />\n                <Route path=\"/tap\" element={<TAPContainer />} />\n                <Route path=\"/book\" element={<BOOKContainer />} />\n                <Route path=\"/info\" element={<INFOcontainer />} />\n                <Route path=\"/auth\" element={<AUTHcontainer />} />\n                <Route element={<NotFound />} />\n              </Routes>\n              {/* <BOOKContainer /> */}\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </AuthContext.Provider>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/redux/store.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/hooks/useAction.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/redux/root.reducer.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/types/nav.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/hooks/useTypedSelector.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/BackgroundPlain.tsx",["510","511"],"import React, { useEffect, useState } from 'react'\nimport { useTypedSelector } from '../hooks/useTypedSelector'\nimport { Chapters } from '../types/nav'\n\nexport const Background: React.FC = () => {\n  const currentChapter = useTypedSelector((state) => state.nav.chapter)\n\n  const bgColor = (): string => {\n    if (currentChapter === Chapters.BOOK) {\n      return 'bg-red-100'\n    } else if (currentChapter === Chapters.TAP) {\n      return 'bg-sky-100'\n    } else if (currentChapter === Chapters.INFO) {\n      return 'bg-amber-100'\n    } else if (currentChapter === Chapters.NOT_FOUND) {\n      return 'bg-gray-100'\n    } else {\n      return 'bg-emerald-100'\n    }\n  }\n\n  return (\n    <div\n      // className={`fixed top-0 bottom-0 right-0 bg-blue-100`}\n      className={`fixed top-0 bottom-0 right-0 ${bgColor()}`}\n      style={{\n        width: '100%',\n        transition: '1.25s ease-in-out',\n      }}\n    ></div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/PerspectiveController.tsx",["512","513"],"import React, { useEffect, useState } from 'react'\n\ninterface IProps {\n  setPerspective?(\n    perspective: number,\n    margin: number,\n    is1000plus: boolean\n  ): void\n  setPerspective2?(\n    perspective: number,\n    marginTop: number,\n    marginLeft: number\n  ): void\n  setMainMT?(marginTop: number): void\n  setNavPerspective?(perspective: number, height: number): void\n  setIsHorisontal?(isH: boolean): void\n  handleSetParams?(height: number, width: number): void\n  setFooter?(fontSize: number, paddingX: number): void\n  setBook?(perspective: number, marginTop: number): void\n  setTap?(perspective: number, marginTop: number): void\n  setInfo?(perspective: number, marginTop: number): void\n}\n\nexport const PerspectiveController: React.FC<IProps> = ({\n  setPerspective = () => {},\n  setPerspective2 = () => {},\n  setMainMT = () => {},\n  setNavPerspective = () => {},\n  setIsHorisontal = () => {},\n  handleSetParams = () => {},\n  setFooter = () => {},\n  setBook = () => {},\n  setTap = () => {},\n  setInfo = () => {},\n}) => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  )\n\n  function getWindowDimensions(): { width: number; height: number } {\n    const { innerWidth: width, innerHeight: height } = window\n    return {\n      width,\n      height,\n    }\n  }\n\n  const handleMission = () => {\n    let W = windowDimensions.width\n    let H = windowDimensions.height\n\n    handleSetParams(H, W)\n\n    if (W <= 500 && W < H) {\n      setIsHorisontal(true)\n    } else {\n      setIsHorisontal(false)\n    }\n\n    if (W > 2160) {\n      setPerspective(0, 250, true)\n      setBook(0, 250)\n      setInfo(0, 250)\n      setTap(0, 250)\n      setMainMT(300)\n      setNavPerspective(0, 65)\n      setPerspective2(0, 100, -605)\n      setFooter(30, 400)\n      if (W >= 3000) {\n        setPerspective2(0, 100, -1105)\n      } else {\n        setFooter(25, 300)\n      }\n    } else if (W <= 2160 && W > 1920) {\n      setPerspective(0, 200, true)\n      setBook(0, 200)\n      setInfo(0, 100)\n      setTap(0, 200)\n\n      setPerspective2(0, 100, -605)\n      setMainMT(400)\n      setNavPerspective(0, 65)\n      setFooter(20, 350)\n    } else if (W <= 1920 && W > 1700) {\n      setPerspective(0, 140, true)\n      setBook(0, 140)\n      setInfo(0, 70)\n      setTap(0, 140)\n\n      setPerspective2(-0, 0, -102)\n      setMainMT(300)\n      setNavPerspective(0, 65)\n      setFooter(18, 300)\n\n      if (W <= 1800) {\n        setPerspective(0, 130, true)\n        setBook(0, 130)\n        setTap(0, 130)\n        setInfo(0, 100)\n\n        setMainMT(285)\n        setNavPerspective(-100, 55)\n      }\n    } else if (W <= 1700 && W > 1500) {\n      setPerspective(-130, 85, true)\n      setBook(-130, 85)\n      setTap(-130, 85)\n      setInfo(-130, 60)\n\n      setPerspective2(-50, -25, -102)\n      setMainMT(245)\n      setNavPerspective(0, 55)\n      setFooter(14, 200)\n    } else if (W <= 1500 && W > 1350) {\n      setPerspective(-400, 20, true)\n      setBook(-350, 20)\n      setTap(-400, 20)\n      setInfo(-100, 20)\n\n      setPerspective2(-100, -50, -102)\n      setMainMT(205)\n      setNavPerspective(-150, 50)\n      setFooter(12, 200)\n    } else if (W <= 1350 && W > 1200) {\n      setPerspective(-400, 20, true)\n      setBook(-400, 20)\n      setInfo(-100, 10)\n      setTap(-400, -15)\n      setPerspective2(-100, -70, -102)\n      setMainMT(205)\n      setNavPerspective(-350, 45)\n      setFooter(10, 200)\n    } else if (W <= 1200 && W > 1000) {\n      setPerspective(-790, -63, true)\n      setBook(-400, 7)\n      setInfo(-100, 7)\n      setTap(-500, -50)\n      setPerspective2(-350, -200, -102)\n      setMainMT(200)\n      setNavPerspective(-350, 45)\n      setFooter(10, 200)\n    } else if (W <= 1000) {\n      setPerspective(0, 0, false)\n      setBook(0, 0)\n      setTap(0, 0)\n      setPerspective2(0, 0, 0)\n      setMainMT(0)\n      setFooter(10, 200)\n    } else {\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => handleMission())\n  }, [windowDimensions])\n\n  function handleResize() {\n    setWindowDimensions(getWindowDimensions())\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return <></>\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/utils/GetWidth.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/BlurScreen.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/Footer.tsx",["514","515","516","517","518","519"],"import { GitHub } from '@material-ui/icons'\nimport React, { useState, useEffect } from 'react'\nimport { useTypedSelector } from '../hooks/useTypedSelector'\nimport { useDidMountEffect } from '../utils/useDidMountEffect'\nimport { PerspectiveController } from './PerspectiveController'\n\nexport const Footer: React.FC = ({}) => {\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n  const [appear, setAppear] = useState(false)\n\n  const [params, setParams] = useState([0, 0])\n\n  const handleSetParams = (fontSize: number, paddingX: number) => {\n    setParams([fontSize, paddingX])\n  }\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 1900)\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    setAppear(false)\n\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 1510)\n\n    return () => {\n      clearTimeout(id)\n    }\n  }, [chapter])\n\n  return (\n    <>\n      <div\n        className={`w-full fixed bottom-0 right-0 left-0 border-t border-gray-500 py-2  flex gap-6 flex-between items-center bg-gray-400 opacity-100`}\n        style={{\n          zIndex: 2022,\n          padding: `5px ${params[1]}px`,\n          transform: `translateY(${appear ? 0 : 50}px) `,\n          transition: '0.5s ease-in-out',\n          backgroundColor: 'rgba(100, 100, 100, 0.15)',\n          fontSize: params[0] + 'px',\n        }}\n      >\n        <a>&copy; 2022 KBRD. All rights reserved </a>\n        <a className={`flex-grow`}></a>\n        <a>away.float.away@gmail.com</a>\n\n        <a\n          href={`https://github.com/boosting-my-adrenaline`}\n          target={'_blank'}\n          className={`flex items-center gap-2 cursor-pointer underline decoration-sky-500`}\n        >\n          <GitHub\n            className={`cursor-pointer`}\n            style={{ width: params[0] + 6, height: params[0] + 6 }}\n          />\n          Github\n        </a>\n      </div>\n      <PerspectiveController setFooter={handleSetParams} />\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/NotFound.tsx",["520","521","522"],"import React, { useEffect, useState } from 'react'\nimport { useTypedSelector } from '../hooks/useTypedSelector'\nimport { useDidMountEffect } from '../utils/useDidMountEffect'\nimport { Hexagon } from './loading/Hexagon'\n\nexport const NotFound: React.FC = ({}) => {\n  let L = 17,\n    W = 23,\n    // let L = 1,\n    //   W = 1,\n    side = 120,\n    side2 = [118, 118],\n    empty = false\n\n  const [pos, setPos] = useState([0, 0])\n\n  useEffect(() => {\n    // let id0 = setTimeout(() => setShow(true), 200)\n\n    setPos([Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)])\n\n    let id1 = setInterval(() => {\n      setPos([Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)])\n      // setPos([Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)])\n    }, Math.floor(Math.random() * 2000) + 1000)\n\n    return () => {\n      // clearTimeout(id0)\n      clearInterval(id1)\n    }\n  }, [])\n\n  const [appear, setAppear] = useState(false)\n  const [appear2, setAppear2] = useState(false)\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 300)\n\n    let id2 = setTimeout(() => {\n      setAppear2(true)\n    }, 800)\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(false)\n    }, 250)\n\n    let id2 = setTimeout(() => {\n      setAppear2(false)\n    }, 0)\n\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [chapter])\n\n  return (\n    <div style={{ opacity: appear ? 1 : 0, transition: `0.3s ease-in-out` }}>\n      <div\n        className={`absolute z-50 w-f flex justify-center mt-48 font-courier text-4xl`}\n      >{`{/* TO BE SVG HERE */}`}</div>\n      <div\n        className={` fixed top-0 bottom-0 left-0 right-0 flex flex-col align-center justify-center gap bg-yello-200 bg-gray-500 opacity-${\n          appear2 ? 100 : 0\n        }`}\n        style={{\n          transition: '0.2s ease-in-out',\n\n          // backgroundColor: !show ? 'rgb(252, 211, 77)' : 'rgb(253, 230, 138)',\n          willChange: 'transform',\n        }}\n      >\n        <div\n          className={` flex flex-col align-center justify-center gap  `}\n          style={{\n            transition: '3s ease',\n            opacity: 0.15,\n            willChange: 'transform',\n\n            transform: `perspective(2000px) rotateX(55deg) translateX(${pos[1]}px) translateY(${pos[0]}px)`,\n          }}\n        >\n          {Array.from({ length: L }, (_, i) => i).map((el) => (\n            <div\n              className={` flex flex-row align-center justify-center gap-2`}\n              style={{\n                margin: `-53.5px ${el % 2 == 0 ? '0' : '216px'} 0 0`,\n              }}\n            >\n              {Array.from({ length: W }, () => {}).map((el) => (\n                <Hexagon\n                  side={side}\n                  side2={\n                    // show ? side2[0] :\n                    side2[1]\n                  }\n                  empty={empty}\n                  fontSize={110}\n                />\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/TAP.container.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/BOOK.container.tsx",["523","524","525","526"],"import React, { useState, useEffect, useRef } from 'react'\nimport { BOOKBook } from './components/BOOK.book'\nimport { BOOKLayout } from './components/BOOK.layout'\n\nimport { capitals, KEYS, notCapitals } from './components/strings/strings'\n\n// import { Width } from '../../utils/GetWidth'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\nimport { BOOKpointer } from './components/BOOK.pointer'\nimport { BOOKframe } from './components/BOOK.frame'\nimport { BOOKbuttons } from './components/BOOK.buttons'\nimport { BOOKstring } from './components/strings/BOOK.string'\nimport { moveString, shuffle } from './components/strings/stringFormation'\nimport { useKeyPress } from '../../utils/useKeyPress'\nimport { BOOKfailures } from './components/BOOK.failures'\nimport { BOOKstats } from './components/BOOK.stats'\nimport { thegreatgatsby as startingLetter } from '../../static/letters/thegreatgatsby'\nimport { LEVELcontainer } from '../leveling/LEVEL.container'\nimport { PerspectiveController } from '../PerspectiveController'\n// import { gonewiththewind as startingLetter } from '../../static/letters/gonewiththewind'\n\nexport const BOOKContainer: React.FC = () => {\n  const [currentString, setCurrentString] = useState(startingLetter)\n  const [STRING, setSTRING] = useState<string>(currentString)\n\n  function handleStringErase(STR: string): void {\n    setCurrentString(STR)\n    setSTRING(STR)\n    successAndFailedTypes.current = 0\n    failedTypesIndexes.current = []\n    failureTypes.current = 0\n  }\n\n  function handleStringNoErase(STR: string): void {\n    setCurrentString(STR)\n    setSTRING(moveString(STR, successAndFailedTypes.current))\n  }\n\n  const [keyDown, setKeyDown] = useState('')\n\n  const [animationBook, setAnimationBook] = useState(true)\n\n  const successAndFailedTypes = useRef(0)\n  const failureTypes = useRef(0)\n  const failureInARow = useRef(0)\n  const streakRow = useRef(0)\n\n  const failedTypeStatus = useRef(false)\n  const escapeFailedTypeStatus = useRef(false)\n  const failedTypesIndexes = useRef<number[]>([])\n\n  const historyOfFailed = useRef<\n    {\n      desired: string\n      pressed: string\n      previous: string\n    }[]\n  >([])\n\n  const lastKey = useRef('')\n  const prelastKey = useRef('')\n\n  const [hightlighter, setHighlighter] = useState(true)\n\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n\n  const caps = useKeyPress('CapsLock')\n  const shift = useKeyPress('Shift')\n\n  const [capsKey, setCapsKey] = useState(false)\n  const [shiftKey, setShiftKey] = useState(false)\n\n  useDidMountEffect(() => {\n    setCapsKey(caps)\n  }, [caps])\n\n  useDidMountEffect(() => {\n    setShiftKey(shift)\n  }, [shift])\n\n  useDidMountEffect(() => {\n    if (!caps && !shift && capitals.includes(keyDown)) {\n      setCapsKey(true)\n    }\n    if (caps && notCapitals.includes(keyDown)) {\n      setCapsKey(false)\n    }\n  }, [keyDown])\n\n  const capsError = useRef(0)\n\n  const [appear, setAppear] = useState(false)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 100)\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(false)\n    }, 250)\n    return () => clearTimeout(id)\n  }, [chapter])\n\n  useEffect(() => {\n    prelastKey.current = lastKey.current\n  }, [keyDown])\n\n  const handleEvent = (event: KeyboardEvent) => {\n    const { key } = event\n    // console.log(key)\n\n    if (KEYS.includes(key)) {\n      setKeyDown(key)\n      setKeyDown('')\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      handleEvent(e)\n    })\n    return () => {\n      window.removeEventListener('keydown', (e) => {\n        handleEvent(e)\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (keyDown === STRING[0]) {\n      SUCCESS()\n    } else if (keyDown !== STRING[0] && KEYS.includes(keyDown)) {\n      FAILURE()\n      if (keyDown.toLowerCase() === STRING[0].toLowerCase() && capsKey) {\n        capsError.current++\n      }\n    }\n\n    if (keyDown === ' ') {\n      lastKey.current = 'Space'\n    } else if (KEYS.includes(keyDown)) {\n      lastKey.current = keyDown\n    }\n  }, [keyDown])\n\n  function SUCCESS(): void {\n    setSTRING((str) => str.substring(1) + str[0])\n    successAndFailedTypes.current++\n    failedTypesIndexes.current = failedTypesIndexes.current.map((el) => el + 1)\n    // .filter((el) => el <= 245)\n    if (failedTypeStatus.current && !escapeFailedTypeStatus.current) {\n      failedTypesIndexes.current = [...failedTypesIndexes.current, 1]\n    }\n    failedTypeStatus.current = false\n    if (escapeFailedTypeStatus.current) {\n      escapeFailedTypeStatus.current = false\n    }\n    if (failureInARow.current !== 0) {\n      failureInARow.current = 0\n    }\n  }\n\n  function FAILURE(): void {\n    if (streakRow.current === 0 && keyDown === STRING[1]) {\n      streakRow.current++\n    } else if (streakRow.current === 1 && keyDown === STRING[2]) {\n      streakRow.current++\n    } else if (streakRow.current === 2 && keyDown === STRING[3]) {\n      SUCCESS()\n      SUCCESS()\n      SUCCESS()\n      SUCCESS()\n      escapeFailedTypeStatus.current = true\n      failureTypes.current--\n      streakRow.current = 0\n    } else {\n      streakRow.current = 0\n    }\n\n    if (failureInARow.current === 0) {\n      failureInARow.current = 1\n      failureTypes.current++\n      historyOfFailed.current = [\n        ...historyOfFailed.current,\n        {\n          desired: STRING[0] === ' ' ? 'Space' : STRING[0],\n          pressed: keyDown === ' ' ? 'Space' : keyDown,\n          previous: prelastKey.current,\n        },\n      ]\n      // console.log(historyOfFailed.current)\n\n      failedTypeStatus.current = true\n    }\n  }\n  const [reseting, setReseting] = useState(0)\n\n  const handleReset = () => {\n    successAndFailedTypes.current = 0\n    failureTypes.current = 0\n    failureInARow.current = 0\n    streakRow.current = 0\n\n    failedTypeStatus.current = false\n    escapeFailedTypeStatus.current = false\n    failedTypesIndexes.current = []\n\n    historyOfFailed.current = []\n    setSTRING(currentString)\n    setReseting((prev) => prev + 1)\n  }\n\n  const [punctuation, setPunctuation] = useState(true)\n  const [caseSensitivity, setCaseSensetivity] = useState(true)\n\n  const renders = useRef<number>(0)\n\n  useEffect(() => {\n    renders.current++\n  })\n\n  const [running, setRunning] = useState(false)\n  useDidMountEffect(() => {\n    setRunning(true)\n\n    let id = setTimeout(() => setRunning(false), 2000)\n\n    return () => clearTimeout(id)\n  }, [successAndFailedTypes.current])\n\n  const [perspective, setPerspective] = useState<[number, number]>([0, 100])\n\n  const handleSetPerspective = (perspective: number, margin: number) => {\n    setPerspective([perspective, margin])\n  }\n\n  return (\n    <div\n      style={{\n        marginTop: perspective[1],\n        marginBottom: perspective[1],\n        transform: `perspective(1000px) translateZ(${perspective[0]}px)`,\n        // transition: '0.05s ease-in-out',\n      }}\n    >\n      <div\n        className={`borde order-black w-f  flex flex-col\n       justify-center items-center font-courier opacity-${\n         appear ? 100 : 0\n         //  100\n       }`}\n        style={{ transition: '0.5s ease' }}\n      >\n        <div\n          className={`absolute`}\n          style={{ transform: `translateY(-360px)` }}\n        ></div>\n        <BOOKbuttons\n          animationBook={animationBook}\n          setAnimationBook={setAnimationBook}\n          SUCCESS={SUCCESS}\n          highlighter={hightlighter}\n          setHighlighter={setHighlighter}\n          STRING={STRING}\n          punctuation={punctuation}\n          caseSensitivity={caseSensitivity}\n          setCaseSensetivity={setCaseSensetivity}\n          setPunctuation={setPunctuation}\n          caps={capsKey}\n          capsError={capsError.current}\n          running={running}\n          handleReset={handleReset}\n        />\n        <div style={{ zIndex: 60 }}>\n          <BOOKstats\n            overall={successAndFailedTypes.current}\n            failedTypesIndexes={failedTypesIndexes.current}\n            chapter={chapter}\n            reseting={reseting}\n          />\n        </div>\n        <div\n          className=\"invisible 1k:visible   flex flex-col justify-center items-center w-f border-black borde\"\n          // style={{ transform: 'translateY(-150px)' }}\n        >\n          <div\n            className={`invisible 1k:visible  flex flex-col\n        justify-center items-center bordr border-red-900 my-10`}\n          >\n            <BOOKBook\n              STRING={STRING}\n              chapter={chapter}\n              // overall={successAndFailedTypes.current}\n              // animation={animationBook}\n              // currentString={currentString}\n              // chapter={chapter}\n            />\n            <BOOKLayout\n              failedTypesIndexes={failedTypesIndexes.current}\n              overall={successAndFailedTypes.current}\n              currentString={currentString}\n              STRING={STRING}\n              animation={animationBook}\n              chapter={chapter}\n              highlighter={hightlighter}\n            />\n            <BOOKfailures\n              failedTypesIndexes={failedTypesIndexes.current}\n              chapter={chapter}\n            />\n            <BOOKpointer overall={successAndFailedTypes.current} />\n          </div>\n        </div>\n        <BOOKstring\n          currentString={currentString}\n          handleStringErase={handleStringErase}\n          handleStringNoErase={handleStringNoErase}\n          overall={successAndFailedTypes.current}\n          uppercase={shiftKey || capsKey}\n          punctuation={punctuation}\n          caseSensitivity={caseSensitivity}\n          chapter={chapter}\n          running={running}\n        />\n      </div>\n      <PerspectiveController setBook={handleSetPerspective} />\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/Navbar.tsx",["527","528","529","530","531","532","533","534","535","536","537"],"import React, { useState, useEffect, useRef } from 'react'\nimport SAMURAI from './../../static/profiles/samurai.svg'\nimport TEST from './../../static/profiles/test.svg'\nimport { useKeyPress } from '../../utils/useKeyPress'\nimport { ALeft } from './nav-components/ALeft'\nimport { ARight } from './nav-components/ARight'\nimport { Chapters, Directions } from '../../types/nav'\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\nimport { useAuthAction, useNavAction } from '../../hooks/useAction'\nimport { chapters } from '../../redux/nav/nav.types'\nimport { AuthMiniature } from './nav-components/AuthMiniature'\nimport { NAVarrow } from './nav-components/ArrowPage'\nimport { HexagonRounded } from '../loading/HexagonRounded'\nimport { PerspectiveController } from '../PerspectiveController'\nimport { NAVlinks } from './nav-components/NAV.links'\nimport { NAVlogo } from './nav-components/NAV.logo'\n\ninterface IProps {\n  block: boolean\n}\n\nexport const Navbar: React.FC<IProps> = ({ block }) => {\n  const isOpened = useTypedSelector((state) => state.auth.isOpened)\n\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n  // const isLoading = useTypedSelector((state) => state.nav.isLoading)\n  const isLoading = false\n\n  const { changeChapter } = useNavAction()\n  const { setOpenOn, setOpenOff } = useAuthAction()\n\n  const leftArrowClick = useKeyPress('ArrowLeft')\n  const rightArrowClick = useKeyPress('ArrowRight')\n\n  useEffect(() => {\n    if (leftArrowClick) {\n      changeLink('LEFT' as Directions)\n    }\n  }, [leftArrowClick])\n\n  useEffect(() => {\n    if (rightArrowClick) {\n      changeLink('RIGHT' as Directions)\n    }\n  }, [rightArrowClick])\n\n  const getColors = (): string[] => {\n    if (chapter === Chapters.BOOK) {\n      return ['bg-red-400', 'border-red-500', 'shadow-red-700']\n    } else if (chapter === Chapters.TAP) {\n      return ['bg-sky-400', 'border-sky-500', 'shadow-sky-700']\n    } else if (chapter === Chapters.INFO) {\n      return ['bg-amber-400', 'border-amber-500', 'shadow-amber-700']\n    } else if (chapter === Chapters.NOT_FOUND) {\n      return ['bg-gray-400', 'border-gray-500', 'shadow-gray-500']\n    } else {\n      return ['bg-emerald-400', 'border-emerald-500', 'shadow-emerald-500']\n    }\n  }\n\n  const [ThemeColor, BorderColor, ShadowColor] = getColors()\n\n  function changeLink(dir: Directions) {\n    if (block || isOpened) return\n\n    const curIndex = chapters.indexOf(chapter)\n\n    if (dir === 'LEFT') {\n      chapter === Chapters.MAIN || chapter === Chapters.NOT_FOUND\n        ? changeChapter(chapters[chapters.length - 1])\n        : curIndex === 0\n        ? changeChapter(chapters[chapters.length - 1])\n        : changeChapter(chapters[curIndex - 1])\n    } else if (dir === 'RIGHT') {\n      chapter === Chapters.MAIN || chapter === Chapters.NOT_FOUND\n        ? changeChapter(chapters[0])\n        : curIndex === chapters.length - 1\n        ? changeChapter(chapters[0])\n        : changeChapter(chapters[curIndex + 1])\n    }\n  }\n\n  function onClick(link: Chapters): void {\n    if (block) return\n    changeChapter(link)\n  }\n\n  const [perspective, setPerspective] = useState([-200, 65])\n\n  const handleSetPerspective = (perspective: number, height: number) => {\n    setPerspective([perspective, height])\n  }\n\n  return (\n    <>\n      <div\n        className={`z-50 w-full fixed top-0 left-0 right-0 pr-4 justify-center items-center border-b border-t\n${BorderColor}   ${ThemeColor}  shadow-6th ${ShadowColor} font-courier flex flex-row select-none `}\n        style={{\n          transition: '1.25s ease-in-out',\n          // height: 65, bg-${ThemeColor}-400\n          zIndex: 2022,\n          // boxShadow: `0 1px 5px 1px ${ShadowColor}`,\n        }}\n      >\n        <div\n          className={`flex justify-center items-center `}\n          style={{\n            transform: `perspective(1000px) translateZ(${perspective[0]}px)`,\n            height: perspective[1],\n          }}\n        >\n          <div\n            className=\"w-1000 2k:w-1500 3k:w-2000 flex items-center gap-x-4 mx-6 \"\n            style={{\n              transform: `perspective(1000px) rotateX(${\n                isLoading ? -90 : 0\n              }deg) translateY(${!isLoading ? 0 : -10}px) translateZ(${\n                isLoading ? -75 : 0\n              }px)`,\n              transition: '0.3s ease-in-out',\n              // height: 65,\n            }}\n          >\n            <a className=\"z-10 flex-grow outline-none flex items-center \">\n              <div\n                className={` cursor-pointer flex`}\n                // onClick={() => changeChapter(Chapters.MAIN)}\n              >\n                {/* <HexagonRounded onClick={() => changeChapter(Chapters.MAIN)} /> */}\n                {/* 1 */}\n                <NAVlogo onClick={() => changeChapter(Chapters.MAIN)} />\n              </div>\n            </a>\n\n            {/* <ALeft onClick={changeLink} chapter={chapter} isOpened={isOpened} /> */}\n            <NAVlinks\n              chapters={chapters}\n              chapter={chapter}\n              ThemeColor={ThemeColor}\n              ShadowColor={ShadowColor}\n              onClick={onClick}\n            />\n            {/* <div onClick={() => changeChapter(Chapters.NOT_FOUND)}>404</div> */}\n            {/* <ARight\n              onClick={changeLink}\n              chapter={chapter}\n              isOpened={isOpened}\n            /> */}\n          </div>\n          <div className={`px-6`}></div>\n          <div style={{ zIndex: 20 }}>\n            <AuthMiniature />\n          </div>\n        </div>\n      </div>\n      <NAVarrow\n        chapter={chapter}\n        onClick={changeLink}\n        isOpened={isOpened}\n        colors={[ThemeColor, BorderColor, ShadowColor]}\n        direction={`left`}\n      />\n      <NAVarrow\n        chapter={chapter}\n        onClick={changeLink}\n        isOpened={isOpened}\n        colors={[ThemeColor, BorderColor, ShadowColor]}\n        direction={`right`}\n      />\n      {/* <NAVarrowRight\n        chapter={chapter}\n        onClick={changeLink}\n        isOpened={isOpened}\n        colors={[ThemeColor, ShadowColor]}\n      /> */}\n      <PerspectiveController setNavPerspective={handleSetPerspective} />\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/info/INFO.container.tsx",["538","539","540","541","542","543"],"import React, { useState, useEffect } from 'react'\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\nimport { FadeText } from '../../utils/FadeText'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { PerspectiveController } from '../PerspectiveController'\nimport { INFOslide } from './INFO.slide'\n\nexport const INFOcontainer: React.FC = () => {\n  const [appear, setAppear] = useState(true)\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n\n  // useEffect(() => {\n  //   let id = setTimeout(() => {\n  //     setAppear(true)\n  //   }, 250)\n  //   return () => clearTimeout(id)\n  // }, [])\n\n  // useDidMountEffect(() => {\n  //   setTimeout(() => {\n  //     setAppear(false)\n  //   }, 50)\n  // }, [chapter])\n\n  const lorem = `Lorem ipsum dolor sit amet consectetur adipisicing elit. Consectetur sed\n  ratione voluptates repudiandae reprehenderit adipisci impedit qui nihil,\n  eum ea aperiam, fugit delectus voluptatum accusantium facere porro beatae,\n  consequuntur perspiciatis? Quisquam esse fugiat deleniti illum facilis\n  vitae vero eos, est nam accusantium rem error laboriosam architecto\n  aspernatur? Totam laborum, pariatur soluta asperiores voluptatum placeat\n  minus commodi temporibus quae magnam inventore! Corporis vitae ipsa modi\n  excepturi vero impedit doloremque ratione voluptatibus culpa dignissimos\n  officia labore veniam nihil repellat, quo ex. Officiis distinctio eius\n  voluptatem animi repellendus vero earum debitis vitae modi. Iure, sed quam\n  debitis atque saepe soluta neque quia voluptates voluptas doloribus ex et\n  quidem ratione dicta eaque blanditiis dolore alias non aut deleniti\n  adipisci aspernatur nemo? Modi, illo similique! Maiores id adipisci\n  reiciendis incidunt a sed, error autem, cupiditate necessitatibus quo at\n  accusantium neque dolorum.`\n\n  const [perspective, setPerspective] = useState<[number, number]>([0, 100])\n\n  const handleSetPerspective = (perspective: number, margin: number) => {\n    setPerspective([perspective, margin])\n  }\n\n  return (\n    <div\n      style={{\n        marginTop: perspective[1],\n        marginBottom: perspective[1],\n        transform: `perspective(1000px) translateZ(${perspective[0]}px)`,\n        transition: '0.05s ease-in-out',\n      }}\n    >\n      <div\n        className=\"flex flex-col justify-center items-center z-20\"\n        style={{\n          transition: '1s ease',\n          // opacity: !appear ? '0' : '1',\n        }}\n      >\n        <INFOslide chapter={chapter} />\n      </div>\n      <PerspectiveController setInfo={handleSetPerspective} />\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/main/MAIN.container.tsx",["544","545","546","547"],"import React, { useEffect, useState } from 'react'\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\nimport { chapters } from '../../redux/nav/nav.types'\nimport { Chapters } from '../../types/nav'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { PerspectiveController } from '../PerspectiveController'\nimport { Slide } from './components/Slide'\n\nexport const MAINcontainer: React.FC = () => {\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n\n  const slides = chapters.map((el, i) => (\n    <Slide key={el} title={el as Chapters} queue={i} chapter={chapter} />\n  ))\n\n  const [load, setLoad] = useState(false)\n  const [marginT, setMarginT] = useState(0)\n\n  // useEffect(() => {\n  //   let id = setTimeout(() => setLoad(true), 450)\n  //   return () => clearTimeout(id)\n  // }, [])\n\n  // useDidMountEffect(() => {\n  //   let id = setTimeout(() => setLoad(false), 400)\n  //   return () => clearTimeout(id)\n  // }, [chapter])\n\n  const [perspective, setPerspective] = useState<[number, number]>([0, 100])\n\n  const handleSetPerspective = (perspective: number, margin: number) => {\n    setPerspective([perspective, margin])\n  }\n\n  return (\n    <div\n      style={{\n        marginTop: perspective[1],\n        transform: `perspective(1000px) translateZ(${perspective[0]}px)`,\n        // transition: '0.05s ease-in-out',\n      }}\n    >\n      <div\n        className=\"flex flex-col justify-center items-center \"\n        style={{\n          marginTop: marginT,\n          paddingBottom: 50,\n          gap: 50,\n          transition: '0.2s ease',\n          // opacity: `${load ? 1 : 0}`,\n          opacity: 1,\n        }}\n      >\n        {slides}\n      </div>\n      <PerspectiveController\n        setMainMT={setMarginT}\n        setBook={handleSetPerspective}\n      />\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/belowSupportedResolution/Below1000.tsx",["548","549","550","551"],"import React, { useEffect, useRef, useState } from 'react'\nimport { FadeText3 } from '../../utils/FadeText3'\nimport { Hexagon } from '../loading/Hexagon'\nimport cmd from '../../static/cmd.svg'\nimport { BelowNavbar } from './BelowNavbar'\nimport { PerspectiveController } from '../PerspectiveController'\n\nexport const Below1000: React.FC = ({}) => {\n  let L = 10,\n    W = 7,\n    // let L = 1,\n    //   W = 1,\n    side = 120,\n    side2 = [118, 118],\n    empty = false\n\n  // const [pos, setPos] = useState([0, 0])\n  const [pos, setPos] = useState([0, 0])\n\n  // const [show, setShow] = useState(true)\n\n  useEffect(() => {\n    // let id0 = setTimeout(() => setShow(true), 200)\n\n    let id1 = setInterval(() => {\n      setPos([Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)])\n      // setPos([Math.floor(Math.random() * 100), Math.floor(Math.random() * 100)])\n    }, Math.floor(Math.random() * 2000) + 1000)\n\n    return () => {\n      // clearTimeout(id0)\n      clearInterval(id1)\n    }\n  }, [])\n\n  const [isHorizontal, setIsHorisontal] = useState(false)\n  const [params, setParams] = useState([0, 0])\n\n  const handleSetParams = (height: number, width: number) => {\n    setParams([height, width])\n  }\n\n  return (\n    <>\n      <PerspectiveController\n        setIsHorisontal={setIsHorisontal}\n        handleSetParams={handleSetParams}\n      />\n      <BelowNavbar isHorizontal={isHorizontal} />\n      <div\n        className={`absolute z-50 opacity-80 w-f flex justify-center`}\n        style={{ margin: `${!isHorizontal ? 90 : 110}px auto` }}\n        // style={{ left: '50%', transform: 'translate(-50%, -50%)', top: '40%' }}\n      >\n        <div\n          className={`font-courier text-center pb-6 `}\n          style={{ maxWidth: '70%' }}\n        >\n          {/* JUST TESTING IF IT REALLY GONNA WORK */}\n          {/* <FadeText2\n            title={`Your resolution is not supportable yet`}\n            hide={0}\n            delay={400}\n            component=\"h1\"\n          /> */}\n          <div\n            className={` flex flex-wrap items-center justify-center space-y-1 `}\n            style={{ fontSize: '1.1rem', marginBottom: 10 }}\n          >\n            <FadeText3 str={`Your resolution is not suppored yet`} />\n          </div>\n          <div\n            className={` flex flex-wrap items-center justify-center space-y-1`}\n            style={{ fontSize: '0.9rem' }}\n          >\n            <FadeText3\n              str={`Either You are using not supported device or you have zoomed the page too much, please scale your page down to at least 1000 pixels width for the best experience`}\n              delay={[700, 1000]}\n              font={'gray-900'}\n            />\n          </div>\n          {params[0] > 0 && params[1] > 0 ? (\n            <div\n              className={` flex flex-wrap items-center justify-center space-y-1 mt-4`}\n              style={{ fontSize: '0.9rem' }}\n            >\n              <FadeText3\n                str={`current${'\\u00A0'}width:${'\\u00A0'}${\n                  params[1] + '\\u00A0' + 'pixels'\n                }`}\n                delay={[1300, 2000]}\n                font={'gray-800'}\n              />\n            </div>\n          ) : null}\n          <div\n            className={`flex justify-between mx-2 flex-flow flex-wrap select-none `}\n          >\n            <div className={'flex justify-center flex-grow '}>\n              <div className={`flex gap-2 mt-8 justify-center items-center`}>\n                <div\n                  className={`border-black border rounded-lg flex flex-col items-end p-2 bg-white opacity-80`}\n                  style={{ width: 90, height: 65, gap: 9 }}\n                >\n                  <img style={{ width: 20, height: 20 }} src={cmd} alt=\" \" />\n                  <div className={`flex w-f justify-center `}>command</div>\n                </div>\n                <div className={`text-2xl`}>+</div>\n                <div\n                  className={`border-black border rounded-lg flex flex-col items-center p-1 bg-white opacity-80`}\n                  style={{ width: 70, height: 65, gap: 10 }}\n                >\n                  <div style={{ transform: 'rotate(90deg) translateY(-1px)' }}>\n                    |\n                  </div>\n                  <div\n                    style={{\n                      width: 10,\n                      overflow: 'hidden',\n                    }}\n                  >\n                    <div\n                      style={{ transform: 'rotate(90deg) translateY(-2px)' }}\n                    >\n                      |\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className={'flex justify-center flex-grow'}>\n              <div className={`flex gap-2 mt-4 justify-center items-center`}>\n                <div\n                  className={`border-black border rounded-lg flex flex-col items-center justify-center p-2 bg-white opacity-80`}\n                  style={{ width: 90, height: 65, gap: 9 }}\n                >\n                  <div className={`flex w-f justify-center `}>ctrl</div>\n                </div>\n                <div className={`text-2xl`}>+</div>\n\n                <div\n                  className={`border-black border rounded-lg  flex flex-col items-center p-1 bg-white opacity-80`}\n                  style={{ width: 70, height: 65, gap: 10 }}\n                >\n                  <div\n                    style={{\n                      transform: 'rotate(90deg) translateY(-1px) ',\n                    }}\n                  >\n                    |\n                  </div>\n                  <div\n                    style={{\n                      width: 10,\n                      overflow: 'hidden',\n                    }}\n                  >\n                    <div\n                      style={{ transform: 'rotate(90deg) translateY(-2px)' }}\n                    >\n                      |\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div\n        className={`fixed top-0 bottom-0 left-0 right-0 flex flex-col align-center justify-center gap bg-yello-200 bg-gray-500`}\n        style={{\n          transition: '0.5s ease-in-out',\n          // backgroundColor: !show ? 'rgb(252, 211, 77)' : 'rgb(253, 230, 138)',\n          willChange: 'transform',\n        }}\n      >\n        <div\n          className={` flex flex-col align-center justify-center gap  `}\n          style={{\n            transition: '3s ',\n            opacity: 0.15,\n            transform: `perspective(1000px) rotateX(45deg) translateX(${pos[1]}px) translateY(${pos[0]}px)`,\n          }}\n        >\n          {Array.from({ length: L }, (_, i) => i).map((el) => (\n            <div\n              className={` flex flex-row align-center justify-center gap-2`}\n              style={{\n                margin: `-53.5px ${el % 2 === 0 ? '0' : '216px'} 0 0`,\n              }}\n            >\n              {Array.from({ length: W }, () => {}).map((el) => (\n                <Hexagon\n                  side={side}\n                  side2={\n                    // show ? side2[0] :\n                    side2[1]\n                  }\n                  empty={empty}\n                  fontSize={110}\n                />\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/AUTH.container.tsx",["552","553","554"],"import React, { useEffect, useState } from 'react'\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { AUTHloginContainer } from './login/AUTH.login.container'\nimport { AUTHsignupContainer } from './signup/AUTH.signup.container'\n\nexport const AUTHcontainer: React.FC = ({}) => {\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n\n  const [isSigningUp, setISU] = useState(true)\n  const [rotating, setRotating] = useState(0)\n\n  useEffect(() => {\n    if (!isSigningUp) {\n      setRotating(180)\n    } else {\n      setRotating(0)\n    }\n  }, [isSigningUp])\n\n  const WIDTH = 1150\n  return (\n    <>\n      <div\n        className={`z-20 fixed top-0 right-0 left-0 bottom-0 flex justify-center items-center bg-yellow-100 `}\n      >\n        <div\n          className={`z-20  items-center justify-center `}\n          style={{\n            transition: '1s ease',\n          }}\n        >\n          <div\n            className={` absolute top-0 left-0 z-20 flex flex-row `}\n            style={{ width: WIDTH }}\n          >\n            <div\n              className={`flex justify-center items-center no-select ${\n                !isSigningUp ? `cursor-pointer` : ``\n              }`}\n              style={{ fontSize: '2em', width: '50%', height: 65 }}\n              onMouseDown={() => setISU(true)}\n            >\n              LOG IN\n            </div>\n            <div\n              className={`flex justify-center items-center no-select ${\n                isSigningUp ? `cursor-pointer` : ``\n              }`}\n              style={{\n                fontSize: '2em',\n                width: '50%',\n                height: 65,\n              }}\n              onMouseDown={() => setISU(false)}\n            >\n              SIGN UP\n            </div>\n          </div>\n          <div\n            className={` fixed top-0 right-0 left-0  flex flex-row justify-center `}\n            style={{\n              transform: `rotateY(${rotating}deg)`,\n              height: 65,\n              transition: '1s ease-out',\n            }}\n          >\n            <div\n              className={` flex items-center justify-center `}\n              style={{\n                width: '50%',\n                border: '2px solid transparent',\n                transform: 'translate(-2px, -2px)',\n\n                borderBottomRightRadius: 10,\n              }}\n            ></div>\n            <div\n              className={` flex items-center justify-center bg-yellow-300`}\n              style={{\n                width: '50%',\n                border: '2px solid transparent',\n                borderLeftColor: 'black',\n                borderBottomColor: 'black',\n                borderBottomLeftRadius: 10,\n                borderTopRightRadius: 10,\n              }}\n            ></div>\n          </div>\n          <div\n            className={`flex flex-row overflow-y-hidden`}\n            style={{\n              width: WIDTH * 2,\n              height: 620,\n              marginTop: 55,\n              // overflow: 'hidden',\n              transform: isSigningUp\n                ? `translateX(${WIDTH / 2}px)`\n                : `translateX(${-WIDTH / 2}px)`,\n              transition: '0.75s ease-in-out',\n\n              // backgroundColor: 'lightcoral',\n            }}\n          >\n            <div\n              className={`flex justify-center items-center`}\n              style={{ width: WIDTH }}\n            >\n              <AUTHloginContainer />\n            </div>\n            <div\n              className={`flex justify-center items-center`}\n              style={{ width: WIDTH }}\n            >\n              <AUTHsignupContainer />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/redux/nav/nav.actions.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/redux/auth/auth.actions.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/redux/nav/nav.reducer.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/redux/auth/auth.reducer.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/utils/useDidMountEffect.tsx",["555","556"],"import { useEffect, EffectCallback, DependencyList, useRef } from 'react'\n\nexport const useDidMountEffect = (\n  func: EffectCallback | any,\n  deps?: DependencyList\n) => {\n  const initialRender = useRef(true)\n\n  useEffect(() => {\n    let effectReturns: void | (() => void | undefined) = () => {}\n\n    if (initialRender.current) {\n      initialRender.current = false\n    } else {\n      effectReturns = func()\n    }\n\n    if (effectReturns && typeof effectReturns === 'function') {\n      return effectReturns\n    }\n  }, deps)\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/utils/useKeyPress.ts",["557"],"import { useState, useEffect } from 'react'\n\nexport function useKeyPress(targetKey: string): boolean {\n  const [keyPressed, setKeyPressed] = useState(false)\n\n  const downHandler = (event: KeyboardEvent) => {\n    const { key } = event\n    if (targetKey === key) {\n      setKeyPressed(true)\n    }\n  }\n\n  const upHandler = (event: KeyboardEvent) => {\n    const { key } = event\n    if (targetKey === key) {\n      setKeyPressed(false)\n    }\n  }\n  useEffect(() => {\n    window.addEventListener('keydown', downHandler)\n    window.addEventListener('keyup', upHandler)\n\n    return () => {\n      window.removeEventListener('keydown', downHandler)\n      window.removeEventListener('keyup', upHandler)\n    }\n  }, [])\n  return keyPressed\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/redux/nav/nav.types.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/TAP.shooting.tsx",["558","559","560","561","562","563"],"import React, { useState, useEffect, useRef } from 'react'\nimport { TAPshootingButtons } from './shooting/TAP.shooting.buttons'\nimport { TAPshootingModal } from './shooting/TAP.shooting.modal'\nimport { TAPshootingTimers } from './shooting/TAP.timers'\nimport { TAPtap } from './shooting/TAP.tap'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\n\ntype CellsAmount = 7 | 19 | 29\n\nexport type KeyColor = 'red' | 'emerald' | 'cyan' | 'amber' | 'fuchsia' | 'pink'\n\nexport type KeyType = 'number' | 'letter' | 'punctuation'\n\nexport const TAPshooting: React.FC = () => {\n  const [cells, setCells] = useState<Array<string | null>>(\n    Array.from({ length: 29 }, (_, i) => null)\n  )\n  const [appear, setAppear] = useState(false)\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 250)\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(false)\n    }, 50)\n    return () => clearTimeout(id)\n  }, [chapter])\n\n  const [missclicks, setMissclicks] = useState(0)\n\n  const [modalOpen, setModalOpen] = useState<boolean>(false)\n\n  const handleCloseModal = (): void => {\n    setModalOpen(false)\n    clearCells()\n    setFuse(0)\n    setNewGame(true)\n  }\n\n  const [running, setRunning] = useState(false)\n  const [started, setStarted] = useState(false)\n\n  const handleRunning = (): void => {\n    if (!running) {\n      setRunning(true)\n    } else {\n      setRunning(false)\n    }\n  }\n\n  useEffect(() => {})\n\n  const [newGame, setNewGame] = useState(true)\n\n  useDidMountEffect(() => {\n    setTimeout(() => {\n      setNewGame(false)\n    }, 150)\n  }, [started])\n\n  const handleOpenModal = (): void => {\n    // setRunning(false)\n    setStarted(false)\n    setModalOpen(true)\n    setMissclicks(0)\n\n    setTimeout(() => handleCloseModal(), 1500)\n  }\n\n  const [lastKey, setLastKey] = useState('')\n  // const [updater, setUpdater] = useState(0)\n  const [fuse, setFuse] = useState(0)\n  const [limit, setLimit] = useState(15)\n  const [cellsAmount, setCellsAmount] = useState<CellsAmount>(29)\n  const [typeCells, setTypeCells] = useState({\n    numbers: true,\n    letters: true,\n    punctuation: false,\n  })\n\n  const handleSetTypeCells = (type: 1 | 2 | 3) => {\n    if (type === 1) {\n      setTypeCells((prev) => ({ ...prev, numbers: !prev.numbers }))\n    } else if (type === 2) {\n      setTypeCells((prev) => ({ ...prev, letters: !prev.letters }))\n      // setTypeCells((prev) => ({ ...prev, letters: true }))\n    } else if (type === 3) {\n      setTypeCells((prev) => ({ ...prev, punctuation: !prev.punctuation }))\n    }\n  }\n\n  useEffect(() => {\n    setFuse(cells.filter((el) => el).length)\n    if (limit >= 19 && cells.length !== 29) {\n      setCellsAmount(29)\n    } else if (limit < 19 && limit >= 7 && cells.length !== 19) {\n      setCellsAmount(19)\n    } else if (limit < 7 && cells.length !== 7) {\n      setCellsAmount(7)\n    }\n  }, [limit])\n\n  useEffect(() => {\n    setCells((prev) => {\n      let arr = prev\n      let res: (string | null)[] = []\n      for (let i = 0; i < cellsAmount; i++) {\n        res.push(arr[i] || null)\n      }\n      return res\n    })\n  }, [cellsAmount])\n\n  useEffect(() => {\n    if (fuse >= limit) {\n      handleOpenModal()\n    }\n  }, [fuse])\n\n  const [intervalPush, setIntervalPush] = useState(700)\n  const [tick, setTick] = useState(false)\n\n  const handleTick = (): void => {\n    setTick((prev) => !prev)\n  }\n\n  const alphabet1: string = '0123456789'\n  const alphabet2: string = 'abcdefghijklmnopqrstuvwxyz'\n  const alphabet3: string = `!@#$%^&*()-_=+[]{}:;'\"/?.,<>`\n\n  let n = typeCells.numbers ? alphabet1 : ''\n  let p = typeCells.punctuation ? alphabet3 : ''\n  let alphabet = alphabet2 + n + p\n\n  const pushCell = (): void => {\n    let res = false\n    while (!res && fuse < limit) {\n      let randN = Math.floor(Math.random() * cells.length)\n      let s = Math.floor(Math.random() * alphabet.length)\n      let randS = alphabet[s]\n\n      if (!cells.includes(randS) && !cells[randN]) {\n        setCells((prev) => {\n          let arr = prev\n          arr[randN] = randS\n          return arr\n        })\n        res = true\n        setFuse((prev) => prev + 1)\n      }\n    }\n  }\n\n  const removeCell = (char: string): void => {\n    setCells((prev) => {\n      let arr = prev\n      arr[prev.indexOf(char)] = null\n      return arr\n    })\n    setFuse((prev) => prev - 1)\n  }\n\n  const clearCells = (): void => {\n    setCells((prev) => prev.map((el) => null))\n  }\n\n  const handleStart = (): void => {\n    setStarted((prev) => !prev)\n  }\n\n  const handleEvent = (event: KeyboardEvent): void => {\n    const { key } = event\n    if (!key) return\n    setLastKey('')\n    setLastKey(key.toLowerCase())\n  }\n\n  useEffect(() => {\n    if (lastKey !== '' && running && alphabet.includes(lastKey)) {\n      if (cells.includes(lastKey)) {\n        removeCell(lastKey)\n      } else {\n        setMissclicks((prev) => prev + 1)\n      }\n    }\n    if (lastKey === ' ' && started == running) {\n      handleStart()\n    }\n  }, [lastKey])\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      handleEvent(e)\n    })\n    return () => {\n      window.removeEventListener('keydown', (e) => {\n        handleEvent(e)\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (running && intervalPush > 50) {\n      pushCell()\n    }\n  }, [tick])\n\n  const [keyColor, setKeyColor] = useState<KeyColor>('red')\n\n  return (\n    <div\n      className=\"flex flex-col \"\n      style={{\n        transform: 'translateY(-30px)',\n        transition: '1s ease',\n        opacity: !appear ? '0' : '1',\n        // marginTop: -50,\n      }}\n    >\n      <>\n        <TAPshootingModal\n          modalOpen={modalOpen}\n          handleCloseModal={handleCloseModal}\n        />\n        <TAPshootingTimers\n          handleTick={handleTick}\n          interval={running ? intervalPush : 100000}\n        />\n      </>\n      {/* <button onClick={handleOpenModal}>TEST</button> */}\n      {/* <h2>newGame: {newGame ? 1 : 0}</h2> */}\n\n      <TAPshootingButtons\n        limit={limit}\n        setLimit={setLimit}\n        running={running}\n        handleStart={handleStart}\n        intervalPush={intervalPush}\n        setIntervalPush={setIntervalPush}\n        pushCell={pushCell}\n        started={started}\n        keyColor={keyColor}\n        setKeyColor={setKeyColor}\n        typeCells={typeCells}\n        handleSetTypeCells={handleSetTypeCells}\n      />\n      {/* <div\n        style={{\n          backgroundColor: 'lightgrey',\n          width: 1100,\n          height: 630,\n          position: 'absolute',\n          marginTop: 140,\n          marginLeft: 411,\n          clipPath:\n            'polygon(18% 0%, 82% 0%, 100% 50%, 82% 100%, 18% 100%, 0% 50%)',\n        }}\n      ></div> */}\n      {/* <h1>mc: {missclicks}</h1> */}\n      {/* <h1>fuse: {fuse}</h1> */}\n      {/* <h1>clength: {cells.length}</h1>\n      <h1>limit: {limit}</h1> */}\n      {/* <h1>started? {started ? 1 : 0}</h1> */}\n      {/* <h1>running? {running ? 1 : 0}</h1> */}\n      <TAPtap\n        keyColor={keyColor}\n        handleStart={handleStart}\n        cells={cells}\n        missclicks={missclicks}\n        bluring={!running && cells.filter((el) => el).length > 0}\n        running={running}\n        started={started}\n        newGame={newGame}\n        handleRunning={handleRunning}\n      />\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/loading/Hexagon.tsx",["564","565"],"import React, { useEffect, useRef, useState } from 'react'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { BlinkRandomSymbol } from './BlinkRandomSymbol'\n\ninterface IPropsHex {\n  isAbsolute?: boolean\n  side?: number\n  side2?: number\n  bg?: string\n  bg2?: string\n  empty?: boolean\n  fontSize?: number\n  transition?: string\n}\n\nexport const Hexagon: React.FC<IPropsHex> = ({\n  isAbsolute = false,\n  side = 180,\n  side2 = 44,\n  // bg2 = 'rgb(252, 211, 77)',\n  bg2 = `rgba(0, 0, 0, 1)`,\n  // bg = 'rgb(200, 166, 70)',\n  empty = false,\n  fontSize = 150,\n  transition = '1s ease-in-out',\n}) => {\n  // const [bgMain, setBgMain] = useState(bg2)\n  const [bgMain, setBGmain] = useState(bg2)\n  const [isSymbol, setIsSymbol] = useState(false)\n\n  const colors = ['#6ee7b7', '#a5b4fc', '#f9a8d4']\n\n  useDidMountEffect(() => {\n    if (empty) return\n    if (!isSymbol) {\n      // setBgMain(bg2)\n      setBGmain(bg2)\n    } else {\n      let color = colors[Math.floor(Math.random() * 3)]\n      // setBgMain(color)\n      setBGmain(color)\n    }\n  }, [isSymbol])\n\n  return (\n    <div\n      className={`${\n        isAbsolute ? 'absolute' : ' '\n      } flex flex-col items-center justify-center overflow-visible`}\n    >\n      <div\n        style={{\n          width: 0,\n          borderBottom: `${side / 2}px solid ${bg2}`,\n          borderLeft: `${(side / 180) * 156}px solid transparent`,\n          borderRight: `${(side / 180) * 156}px solid transparent`,\n          transition: `${transition}`,\n        }}\n      ></div>\n      <div\n        className={`flex items-center justify-center`}\n        style={{\n          width: (side / 180) * 312,\n          height: side,\n          backgroundColor: `${bg2}`,\n          paddingTop: -side2,\n          transition: `${transition}`,\n        }}\n      >\n        {/* ////////// */}\n        <div\n          className={`absolute flex flex-col items-center justify-center wrap overflow-visible font-courier`}\n          style={{\n            transition: `${transition}`,\n\n            fontSize: fontSize,\n          }}\n        >\n          <div\n            style={{\n              width: 0,\n              borderBottom: `${side2 / 2}px solid ${bgMain}`,\n              borderLeft: `${(side2 / 180) * 156}px solid transparent`,\n              borderRight: `${(side2 / 180) * 156}px solid transparent`,\n              transition: `${transition}`,\n            }}\n          ></div>\n          <div\n            className={\n              'flex justify-center items-center font-courier overflow-visible'\n            }\n            style={{\n              width: (side2 / 180) * 312,\n              height: side2,\n              backgroundColor: `${bgMain}`,\n              transition: `${transition}`,\n              fontSize: fontSize,\n            }}\n          >\n            {empty ? null : (\n              <BlinkRandomSymbol delay={0} setIsSymbol={setIsSymbol} />\n            )}\n          </div>\n          <div\n            style={{\n              width: 0,\n              borderTop: `${side2 / 2}px solid ${bgMain}`,\n              borderLeft: `${(side2 / 180) * 156}px solid transparent`,\n              borderRight: `${(side2 / 180) * 156}px solid transparent`,\n              transition: `${transition}`,\n            }}\n          ></div>\n        </div>\n        {/* ////////// */}\n      </div>\n      <div\n        style={{\n          width: 0,\n\n          borderTop: `${side / 2}px solid ${bg2}`,\n          borderLeft: `${(side / 180) * 156}px solid transparent`,\n          borderRight: `${(side / 180) * 156}px solid transparent`,\n          transition: `${transition}`,\n        }}\n      ></div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/thegreatgatsby.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/strings/strings.ts",["566"],"export const notCapitals = [\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n]\n\nexport const capitals = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n]\n\nexport const KEYS = [\n  ' ',\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n  'a',\n  'b',\n  'c',\n  'd',\n  'e',\n  'f',\n  'g',\n  'h',\n  'i',\n  'j',\n  'k',\n  'l',\n  'm',\n  'n',\n  'o',\n  'p',\n  'q',\n  'r',\n  's',\n  't',\n  'u',\n  'v',\n  'w',\n  'x',\n  'y',\n  'z',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '0',\n  '!',\n  '@',\n  '#',\n  '$',\n  '%',\n  '&',\n  '*',\n  '(',\n  ')',\n  '-',\n  '_',\n  '=',\n  '+',\n  `\\\\`,\n  '|',\n  '[',\n  ']',\n  '{',\n  '}',\n  ';',\n  ':',\n  `'`,\n  '/',\n  '?',\n  '.',\n  '>',\n  ',',\n  '<',\n  `\"`,\n]\n\nconst forbidden = [`—`, '‘']\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.pointer.tsx",["567"],"import React, { useState, useEffect } from 'react'\nimport { useTypedSelector } from '../../../hooks/useTypedSelector'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\n\ninterface IProps {\n  overall: number\n}\n\nexport const BOOKpointer: React.FC<IProps> = ({ overall }) => {\n  const [appear, setAppear] = useState(false)\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 300)\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(false)\n    }, 0)\n    return () => clearTimeout(id)\n  }, [chapter])\n\n  const [show, setShow] = useState(true)\n  const [timer, setTimer] = useState(false)\n\n  useEffect(() => {\n    let id = setInterval(() => setTimer((prev) => !prev), 2000)\n    return () => clearInterval(id)\n  }, [])\n\n  useEffect(() => {\n    setShow(false)\n    let id = setTimeout(() => setShow(true), 2000)\n\n    return () => clearTimeout(id)\n  }, [overall])\n\n  return (\n    <div\n      className={\n        ' absolute text-2xl space-y-4  select-none border-black boder '\n      }\n      style={{\n        opacity: !appear ? '0' : '1',\n        transition: '0.6s ease-in-out',\n        zIndex: 32,\n      }}\n    >\n      <div>{'\\u00A0'}</div>\n      <div>{'\\u00A0'}</div>\n      <div>{'\\u00A0'}</div>\n      <div\n        className={`absolute flex flex-row items-start justify-start `}\n        style={{ transform: 'translate(8px, -96px)' }}\n      >\n        <div\n          className={`absolute ${\n            show ? 'visible' : 'invisible'\n          } border-md  border-black rounded-sm  animate-pulse z-50`}\n          style={{\n            boxShadow: '0 0 2px 2px rgba(0, 0, 0, 0.5)',\n            transition: '0.01s ease-in-out',\n          }}\n        >\n          {'\\u00A0'}\n        </div>\n        <div className={`rounded-sm bg-purple-200 animate-pulse z-10`}>\n          {'\\u00A0'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.failures.tsx",["568"],"import React, { useState, useEffect } from 'react'\nimport { Chapters } from '../../../types/nav'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\n\nexport const BOOKfailures: React.FC<{\n  failedTypesIndexes: number[]\n  chapter: Chapters\n}> = ({ failedTypesIndexes, chapter }) => {\n  const [appear, setAppear] = useState(false)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 100)\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(false)\n    }, 250)\n\n    return () => clearTimeout(id)\n  }, [chapter])\n\n  const filling = [1, 2, 3, 4, 5, 6, 7].map((el) => (\n    <div key={el} className=\"flex flex-row \">\n      {Array.from({ length: 70 }, (_, i) => i + 1).map((letter) => (\n        <div key={letter} className=\"bg-red-600 rounded-md\">\n          {'\\u00A0'}\n        </div>\n      ))}\n    </div>\n  ))\n\n  function fillWithAreas(from: number, to: number) {\n    let row = []\n    for (let i = from; i <= to; i++) {\n      row.push(\n        <div\n          key={i}\n          className=\"rounded-sm bg-red-400\"\n          style={{\n            backgroundColor: failedTypesIndexes.includes(i)\n              ? ''\n              : 'transparent',\n          }}\n        >\n          {'\\u00A0'}\n        </div>\n      )\n    }\n    return row\n  }\n\n  return (\n    <div\n      className=\"w-1000 font-courier text-2xl flex flex-col justify-center align-center space-y-4 \"\n      style={{\n        position: 'absolute',\n        alignSelf: 'center',\n        zIndex: 35,\n        opacity: appear ? 1 : 0,\n        transition: '0.4s ease-in-out',\n      }}\n    >\n      <div className=\"flex flex-row-reverse \">{fillWithAreas(176, 245)}</div>\n      <div className=\"flex flex-row-reverse \">{fillWithAreas(106, 175)}</div>\n      <div className=\"flex flex-row-reverse \">{fillWithAreas(36, 105)}</div>\n      <div className=\"flex flex-row\">\n        <div className=\"flex flex-row-reverse \">{fillWithAreas(1, 35)}</div>\n        <div>{'\\u00A0'}</div>\n      </div>\n      <div className=\"flex flex-row \">{'\\u00A0'}</div>\n      <div className=\"flex flex-row \">{'\\u00A0'}</div>\n      <div className=\"flex flex-row \">{'\\u00A0'}</div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.stats.tsx",["569"],"import React, { useEffect, useState } from 'react'\nimport { Chapters } from '../../../types/nav'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { BOOKaccuracyCounter } from './stats/B.stats.accuracyCounter'\nimport { BOOKstatsAccuracyWidget } from './stats/B.stats.accuracy.widget'\nimport { BOOKstatsRecorder } from './stats/BOOK.stats.recorder'\nimport { BOOKstatsCPMcounter } from './stats/BOOK.stats.CPMcounter'\nimport { BOOKstatsCPMWidget } from './stats/B.stats.cpm.widget'\nimport { LEVELcontainer } from '../../leveling/LEVEL.container'\nimport { BOOKstatsOverallWidget } from './stats/B.stats.overall.widget'\nimport { BOOKstatsErrorsWidget } from './stats/B.stats.error.widget'\n\ninterface IProps {\n  overall: number\n  failedTypesIndexes: number[]\n  chapter: Chapters\n  reseting: any\n}\n\nexport const BOOKstats: React.FC<IProps> = ({\n  overall,\n  failedTypesIndexes: fti,\n  chapter,\n  reseting,\n}) => {\n  // const successfulRow = fti.length > 0 ? fti[fti.length - 1] - 1 : overall\n  const [accuracy, setAccuracy] = useState(0)\n  const [CPM, setCPM] = useState(0)\n  const [avgCPM, setAvgCPM] = useState(0)\n\n  const [overallLocal, setOverallLocal] = useState(0)\n  const [errorsLocal, setErrorsLocal] = useState(0)\n\n  useDidMountEffect(() => {\n    if (overall) {\n      setOverallLocal((prev) => prev + 1)\n    }\n  }, [overall])\n\n  useDidMountEffect(() => {\n    if (fti.length) {\n      setErrorsLocal((prev) => prev + 1)\n    }\n  }, [fti.length])\n\n  const [running, setRunning] = useState(false)\n  const [appear, setAppear] = useState(false)\n\n  useDidMountEffect(() => {\n    setAccuracy(0)\n    setCPM(0)\n    setAvgCPM(0)\n    setErrorsLocal(0)\n    setOverallLocal(0)\n  }, [reseting])\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 1900)\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(false)\n    }, 10)\n\n    return () => clearTimeout(id)\n  }, [chapter])\n\n  useDidMountEffect(() => {\n    setRunning(true)\n\n    let id = setTimeout(() => setRunning(false), 2000)\n\n    return () => clearTimeout(id)\n  }, [overall])\n\n  // Math.floor((successed / overall) * 1000)\n  /////////////\n\n  ////////////\n\n  ////////////\n  const [hide, setHide] = useState(false) //////!!!\n  return (\n    <>\n      <div\n        className={`absolute `}\n        style={{\n          transform: `translateY(${appear ? -155 : -400}px)`,\n          transition: '0.6s ease-in-out',\n        }}\n      >\n        <LEVELcontainer\n          overall={overall}\n          fti={fti}\n          errors={errorsLocal}\n          overallLocal={overallLocal}\n          avgCPM={avgCPM}\n          CPM={CPM}\n          accuracy={accuracy}\n          setHide={setHide}\n        />\n      </div>\n      <div\n        className={`w-1000  pt-2 pb-6 border-black borde flex items-center justify-center select-none`}\n        style={{ transition: '0.5s ease-in-out', opacity: appear ? 1 : 0 }}\n      >\n        <div\n          className={`w-f flex flex-row justify-between mx-8 items-center borde-red-800 borde text-xl text-gray-600 ${\n            hide && `-z-10`\n          }`}\n        >\n          <div className={`flex items-center justify-center`}>\n            <BOOKstatsOverallWidget overall={overallLocal} />\n          </div>\n\n          <div className={`flex items-center justify-center mr-24`}>\n            {`\\u00a0`}\n            <div className={`absolute `}>\n              <BOOKstatsAccuracyWidget\n                currentAccuracy={accuracy}\n                // overall={overall}\n                // fti={fti}\n                overall={overallLocal}\n                errors={errorsLocal}\n              />\n            </div>\n          </div>\n\n          {/* <div></div> */}\n\n          <div className={`flex items-center justify-center`}>\n            {`\\u00a0`}\n\n            <div className={`absolute `}>\n              <BOOKstatsCPMWidget CPM={CPM} avgCPM={avgCPM} />\n            </div>\n          </div>\n          <div className={`flex items-center justify-center`}>\n            <BOOKstatsErrorsWidget errors={errorsLocal} />\n          </div>\n        </div>\n      </div>\n      <BOOKstatsCPMcounter\n        overall={overallLocal}\n        // overall={overall}\n        setCPM={setCPM}\n        setAvgCPM={setAvgCPM}\n        running={running}\n      />\n      <BOOKaccuracyCounter\n        overall={overall}\n        fti={fti}\n        // overall={overall}\n        // fti={fti}\n        setAccuracy={setAccuracy}\n        running={running}\n      />\n      {/* <BOOKstatsRecorder\n        // overall={overall}\n        \n        CPM={CPM}\n      /> */}\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.layout.tsx",["570","571"],"import React, { useEffect, useRef, useState } from 'react'\nimport { Chapters } from '../../../types/nav'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\n\ninterface IProps {\n  failedTypesIndexes: number[]\n  STRING: string\n  overall: number\n  animation: boolean\n  currentString: string\n  chapter: Chapters\n  highlighter: boolean\n}\n\nexport const BOOKLayout: React.FC<IProps> = ({\n  STRING,\n  overall,\n  animation,\n  currentString,\n  chapter,\n  failedTypesIndexes,\n  highlighter,\n}) => {\n  const [appear, setAppear] = useState(false)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 900)\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(false)\n    }, 300)\n    return () => clearTimeout(id)\n  }, [chapter])\n\n  const [extraAppear, setExtraAppear] = useState([true, true])\n\n  useDidMountEffect(() => {\n    // setExtraAppear([false, true])\n    // let id = setTimeout(() => setExtraAppear([true, false]), 500)\n    // return () => {\n    //   clearTimeout(id)\n    //   setExtraAppear([true, false])\n    // }\n  }, [currentString])\n\n  // const [arr, setArr] = useState<string>(currentString)\n\n  // useDidMountEffect(() => {\n  //   setArr((prev) => {\n  //     let arr = prev.split('')\n  //     failedTypesIndexes.forEach((el) => (arr[el - 1] = '^'))\n  //     return arr.join('')\n  //   })\n  //   console.log(arr.slice(0, 20), failedTypesIndexes)\n  // }, [overall])\n\n  // useEffect(() => {\n  //   setArr(STRING)\n  //   setArr((prev) => {\n  //     let arr = prev.split('')\n  //     failedTypesIndexes.forEach((el) => (arr[el - 1 - overall] = '^'))\n  //     return arr.join('')\n  //   })\n  //   console.log(arr.slice(0, 20), failedTypesIndexes)\n  // }, [STRING])\n\n  const rawRIGHT: string = STRING.slice(0, 35)\n  const rawRIGHT1: string = STRING.slice(35, 105)\n  const rawRIGHT2: string = STRING.slice(105, 175)\n  const rawRIGHT3: string = STRING.slice(175, 245)\n  const rawLEFT: string = STRING.slice(-35)\n  const rawLEFT1: string = STRING.slice(-105, -35)\n  const rawLEFT2: string = STRING.slice(-175, -105)\n  const rawLEFT3: string = STRING.slice(-245, -175)\n\n  const formating = (str: string) => {\n    return str.split('').map((el) => {\n      if (el === ' ') {\n        return (\n          <div className=\"select-none bg-red-00\">\n            {'\\u00A0'}\n            {/* {el} */}\n          </div>\n        )\n      } else {\n        return (\n          <div\n            className=\"select-none bg-ed-200 flex justify-center items-center\"\n            style={{\n              // transition: extraAppear[1] ? '0.75s ease' : 'none',\n              opacity: extraAppear[0] && highlighter ? 1 : 0,\n            }}\n          >\n            {'\\u00A0'}\n            {/* {el} */}\n            <div\n              className={`absolute bg-red-200 rounded-sm`}\n              style={{ padding: '0 2px' }}\n            >\n              {'\\u00A0'}\n            </div>\n          </div>\n        )\n      }\n    })\n  }\n\n  const rowing = (str: string) => {\n    return <div className=\"w-full flex flex-row \">{formating(str)}</div>\n  }\n\n  return (\n    <div\n      className=\"absolute visible  border-5 border-grey-900 rounded-xl\"\n      style={{\n        zIndex: 31,\n        opacity: !appear ? '0' : '1',\n        transition: '0.7 ease-in-out',\n      }}\n    >\n      <div\n        className=\"w-1000 z-10 font-courier text-2xl flex flex-col space-y-4  \"\n        style={{}}\n      >\n        {rowing(rawLEFT3)}\n        {rowing(rawLEFT2)}\n        {rowing(rawLEFT1)}\n\n        <div className=\"flex flex-row\">\n          {rowing(rawLEFT)}\n\n          {/* <div>{rowing(rawFIRST)}</div> */}\n\n          {rowing(rawRIGHT)}\n        </div>\n\n        {rowing(rawRIGHT1)}\n        {rowing(rawRIGHT2)}\n        {rowing(rawRIGHT3)}\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/strings/stringFormation.ts",["572"],"import { getRandom } from './../../../../utils/getRandom'\nimport { shuffleArray } from '../../../../utils/shuffleArray'\n\nexport const shuffle = (STR: string): string => {\n  let res: string = STR.replaceAll('Mr. ', 'Mr.^').replaceAll('Dr. ', 'Dr.^')\n\n  let fuse = 0\n  while (res.slice(0, 20) === STR.slice(0, 20) && fuse < 20) {\n    res =\n      shuffleArray(STR.split('. '))\n        .filter((el) => el)\n        .join('. ') + '. '\n\n    if (res[0] === ' ') {\n      res = res.slice(1)\n    }\n    fuse++\n  }\n\n  return res.replaceAll('Mr.^', 'Mr. ').replaceAll('Dr.^', 'Dr. ')\n}\n\nexport const goToRandom = (STR: string): string => {\n  let arr: string[] = STR.replaceAll('Mr. ', 'Mr.^')\n    .replaceAll('Dr. ', 'Dr.^')\n    .split('. ')\n    .filter((el) => el)\n\n  let L = arr.length\n  let n = Math.floor(Math.random() * L)\n  let arrNumber = Array.from({ length: L }, (_, i) => i + n).map((el) =>\n    el > L - 1 ? el - L : el\n  )\n\n  let res = []\n\n  for (let i = 0; i < L; i++) {\n    res[i] = arr[arrNumber[i]]\n  }\n\n  return (\n    res\n      .join('. ')\n      .replaceAll('Mr.^', 'Mr. ')\n      .replaceAll('Dr.^', 'Dr. ')\n      .trimStart() + `. `\n  )\n}\n\nconst arr = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 '\n\nexport const removePunctuation = (STR: string, skip: number): string => {\n  if (skip < 245) {\n    return (\n      STR.slice(0, skip) +\n      STR.slice(skip, STR.length - skip)\n        .split('')\n        .filter((el) => arr.includes(el))\n        .join('') +\n      STR.slice(-skip)\n    )\n  } else {\n    return (\n      STR.slice(0, skip) +\n      STR.slice(skip)\n        .split('')\n        .filter((el) => arr.includes(el))\n        .join('')\n    )\n  }\n}\n\nexport const lowerAll = (STR: string): string => {\n  return STR.toLowerCase()\n}\n\nexport const upperAll = (STR: string): string => {\n  return STR.toUpperCase()\n}\n\n// export const lowerAllWithSkip = (STR: string, skip: number): string => {\n//   if (skip < 245) {\n//     return (\n//       STR.slice(0, skip) +\n//       STR.slice(skip, STR.length - skip).toLowerCase() +\n//       STR.slice(-skip)\n//     )\n//   } else {\n//     return STR.slice(0, skip) + STR.slice(skip).toLowerCase()\n//   }\n// }\n\n// export const upperAllWithSkip = (STR: string, skip: number): string => {\n//   if (skip < 245) {\n//     return (\n//       STR.slice(0, skip) +\n//       STR.slice(skip, STR.length - skip).toUpperCase() +\n//       STR.slice(-skip)\n//     )\n//   } else {\n//     return STR.slice(0, skip) + STR.slice(skip).toUpperCase()\n//   }\n// }\n\nexport const moveString = (STR: string, skip: number): string => {\n  return STR.slice(skip) + STR.slice(0, skip)\n}\n\n// export const hackString = (): string => {\n//   const symbols =\n//     '!@#$%&*-+<>?/\\\\!@#$%&*-+<>?/\\\\!@#$%&*-+<>?/\\\\0123456789qwertyuiopasdfghjklzxcvbnm;:'.split(\n//       ''\n//     )\n//   const spaces = [' ', ' ', ' ', '  ', '   ']\n//   let STR = shuffle(s500)\n//     .split('')\n//     .map((el) => {\n//       if (el === ' ') {\n//         return spaces[Math.floor(Math.random() * spaces.length)]\n//       } else if (el === '.') {\n//         return '.'\n//       } else {\n//         return symbols[Math.floor(Math.random() * symbols.length - 1)]\n//       }\n//     })\n//     .join('')\n\n//   return shuffle(STR)\n// }\n","/Users/skywalker/Web/testclone/KBRD/client/src/utils/FadeText3.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/loading/HexagonRounded.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.book.tsx",["573","574"],"import React, { useEffect, useRef, useState } from 'react'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\n\nimport { Chapters } from '../../../types/nav'\nimport { FadeText } from '../../../utils/FadeText'\n\ninterface IProps {\n  STRING: string\n  chapter: Chapters\n}\n\nexport const BOOKBook: React.FC<IProps> = ({ STRING, chapter }) => {\n  const RIGHT: string = STRING.slice(0, 35)\n  const RIGHT1: string = STRING.slice(35, 105)\n  const RIGHT2: string = STRING.slice(105, 175)\n  const RIGHT3: string = STRING.slice(175, 245)\n  const LEFT: string = STRING.slice(-35)\n  const LEFT1: string = STRING.slice(-105, -35)\n  const LEFT2: string = STRING.slice(-175, -105)\n  const LEFT3: string = STRING.slice(-245, -175)\n\n  const [appear, setAppear] = useState(false)\n  const [highlightHider, setHighlightHider] = useState(true)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 300)\n\n    let id2 = setTimeout(() => setHighlightHider(false), 1000)\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(false)\n    }, 200)\n\n    let id2 = setTimeout(() => setHighlightHider(true), 100)\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [chapter])\n\n  const formating = (str: string) => {\n    return str.split('').map((el) =>\n      el !== ' ' ? (\n        <div\n          className={`select-none ${highlightHider && `bg-red-100`}`}\n          style={{ transition: '0.6s ease' }}\n        >\n          {el}\n        </div>\n      ) : (\n        // <FadeText title={el} delay={[300, 1000]} hide={1} />\n        <div\n          className={`select-none ${highlightHider && `bg-red-100`}`}\n          style={{ transition: '0.6s ease' }}\n        >\n          {'\\u00A0'}\n        </div>\n      )\n    )\n  }\n\n  const rowing = (str: string) => {\n    return <div className=\"w-full flex flex-row\">{formating(str)}</div>\n  }\n\n  return (\n    <div\n      className={`visible w-1000 z-40 font-courier text-2xl flex flex-col space-y-4 ${\n        highlightHider && `bg-red-10`\n      }`}\n      style={{ opacity: !appear ? '0' : '1', transition: '0.7s ease-in-out' }}\n    >\n      <div className=\"w-1000 z-40 font-courier text-2xl flex flex-col space-y-4  \">\n        {rowing(LEFT3)}\n        {rowing(LEFT2)}\n        {rowing(LEFT1)}\n\n        <div className=\"flex flex-row\">\n          {rowing(LEFT)}\n\n          {/* <div>{rowing(FIRST)}</div> */}\n\n          {rowing(RIGHT)}\n        </div>\n\n        {rowing(RIGHT1)}\n        {rowing(RIGHT2)}\n        {rowing(RIGHT3)}\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/BOOK.buttons.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/belowSupportedResolution/BelowNavbar.tsx",["575"],"import React, { useState, useEffect } from 'react'\nimport { GitHub } from '@material-ui/icons'\n\n// https://github.com/boosting-my-adrenaline\n\nexport const BelowNavbar: React.FC<{ isHorizontal: boolean }> = ({\n  isHorizontal,\n}) => {\n  const [appear, setAppear] = useState(false)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 600)\n    return () => clearTimeout(id)\n  }, [])\n\n  return (\n    <div\n      className={`bg-gray-200  fixed top-0 right-0 left-0  z-50 max-h-16 opacity-90 flex justify-center items-center px-4 select-none`}\n      style={{\n        height: !isHorizontal ? 43 : 65,\n        boxShadow: '2px 0 4px 4px rgba(50, 50, 50, 0.3)',\n        zIndex: 51,\n      }}\n    >\n      <div className={`flew-grow flex justify-end `} style={{ width: '70%' }}>\n        <a href={`https://github.com/boosting-my-adrenaline`} target={'_blank'}>\n          <GitHub\n            className={`cursor-pointer `}\n            style={{\n              width: isHorizontal ? 40 : 30,\n              height: isHorizontal ? 40 : 30,\n              transform: `translateX(${appear ? 0 : 1000}px)`,\n              transition: '0.9s ease',\n            }}\n          />\n        </a>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/info/INFO.slide.tsx",["576"],"import React from 'react'\nimport { Chapters } from '../../types/nav'\nimport { FadeText } from '../../utils/FadeText'\nimport { FadeText2 } from '../../utils/FadeText2'\n\ninterface IProps {\n  chapter: Chapters\n}\n\nexport const INFOslide: React.FC<IProps> = ({ chapter }) => {\n  const loremus = `Lorem, ipsum dolor sit amet consectetur adipisicing elit. Provident,\n  earum. Hic at quo eveniet soluta fugiat explicabo, inventore quia, vel\n  ipsum dolorem eaque omnis itaque pariatur nostrum cumque, qui commodi.\n  Fugit exercitationem laborum minus vero quibusdam illum perferendis\n  corporis libero quas pariatur quo assumenda, tenetur necessitatibus, hic,\n  rem doloribus. Molestiae veritatis praesentium eius in facilis deleniti\n  quia iste magni tempore? Illum omnis suscipit vitae aspernatur cum dicta\n  fugit perferendis minus, sed nihil numquam asperiores cupiditate ipsum\n  praesentium eum? Nam, quibusdam iure magnam maiores quod numquam nostrum\n  illum quisquam at quia. Ea magnam, aliquam sunt eaque nulla a id, magni\n  tempore eveniet voluptas voluptates temporibus, odit quidem sequi tempora\n  nemo delectus deserunt perspiciatis. Aliquam blanditiis nisi, error\n  officiis saepe optio veniam. Quia earum nam, eveniet beatae ad dicta.\n  Magnam corrupti sunt sit dolor? Illo, nulla quaerat architecto laboriosam\n  non repellat? Accusantium cum praesentium mollitia natus facilis inventore\n  est adipisci similique amet.`\n\n  return (\n    <div\n      className={`w-1000 2k:w-1500 3k:w-2000 flex flex-col  gap-x-4 mx-9 z-10 text-2xl font-courier mt-20`}\n    >\n      <FadeText2\n        title={`Lorem ipsum dolor sit amet.`}\n        hide={chapter}\n        delay={200}\n        component=\"h1\"\n      />\n\n      <FadeText2\n        title={loremus}\n        // delay={[300, 500]}\n        hide={chapter}\n        delay={225}\n        component=\"h3\"\n        // multiple={true}\n      />\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/strings/BOOK.string.tsx",["577","578"],"import React, { useEffect, useRef, useState } from 'react'\nimport { Chapters } from '../../../../types/nav'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\nimport { BOOKbuttonVisual } from '../buttons/BOOK.buttonVisual'\nimport {\n  goToRandom,\n  lowerAll,\n  removePunctuation,\n  shuffle,\n  upperAll,\n} from './stringFormation'\nimport {\n  BOOKstringButton,\n  BOOKstringButtonFunctional,\n} from './BOOK.string.button'\n\nimport { lorem as letter1 } from '../../../../static/letters/lorem'\nimport { gonewiththewind as letter2 } from '../../../../static/letters/gonewiththewind'\nimport { thelordoftherings as letter3 } from '../../../../static/letters/thelordoftherings'\nimport { robinson as letter4 } from '../../../../static/letters/robinson'\nimport { the1984 as letter5 } from '../../../../static/letters/the1984'\nimport { thegreatgatsby as letter6 } from '../../../../static/letters/thegreatgatsby'\nimport { tokillamockinbird as letter7 } from '../../../../static/letters/tokillamockinbird'\nimport { lionwitch as letter8 } from '../../../../static/letters/lionwitch'\n\nlet test = `Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. Sent number1. `\n\ninterface IProps {\n  // STRING: string\n  // setSTRING(string: string): void\n  // setCurrentString(string: string): void\n  overall: number\n  currentString: string\n  handleStringErase(str: string): void\n  handleStringNoErase(str: string): void\n  uppercase: boolean\n  punctuation: boolean\n  caseSensitivity: boolean\n  chapter: Chapters\n  running: boolean\n}\n\nexport const BOOKstring: React.FC<IProps> = ({\n  currentString,\n  handleStringErase,\n  handleStringNoErase,\n  overall,\n  uppercase,\n  punctuation,\n  caseSensitivity,\n  chapter,\n  running,\n}) => {\n  const [now, setNow] = useState(currentString)\n  const choosenString = useRef<number>(5)\n\n  const [appear, setAppear] = useState(false)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(true)\n    }, 2500)\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setAppear(false)\n    }, 10)\n    return () => clearTimeout(id)\n  }, [chapter])\n\n  useDidMountEffect(() => {\n    handleString(now, true)\n  }, [now])\n\n  function handleString(string: string, erase: boolean) {\n    if (!punctuation) {\n      string = removePunctuation(string, overall)\n    }\n\n    if (!caseSensitivity) {\n      if (uppercase) {\n        string = upperAll(string)\n      } else {\n        string = lowerAll(string)\n      }\n    }\n    if (erase) {\n      handleStringErase(string)\n    } else {\n      handleStringNoErase(string)\n    }\n  }\n\n  useDidMountEffect(() => {\n    handleString(now, false)\n  }, [punctuation, caseSensitivity, uppercase])\n\n  const handleShuffle = () => {\n    handleString(shuffle(now), true)\n    // handleString('12345', true)\n  }\n\n  const letters = [\n    letter1,\n    letter2,\n    letter3,\n    letter4,\n    letter5,\n    letter6,\n    letter7,\n    letter8,\n  ]\n\n  // const examples = [\n  //   { title: `Example #1`, str: letter1 },\n  //   { title: `Example #2`, str: letter2 },\n  //   { title: `Example #3`, str: letter3 },\n  //   { title: `Example #4`, str: letter4 },\n  //   { title: `Example #5`, str: letter5 },\n  //   { title: `Example #6`, str: letter6 },\n  //   { title: `Example #7`, str: letter7 },\n  //   { title: `Example #8`, str: letter8 },\n  // ]\n\n  const handleSetString = (str: string, num: number) => {\n    setNow(str)\n    choosenString.current = num\n  }\n\n  const handleRandom = () => {\n    let n = Math.floor(Math.random() * letters.length)\n    while (n === choosenString.current) {\n      n = Math.floor(Math.random() * letters.length)\n    }\n\n    handleSetString(letters[n], n)\n  }\n\n  const handleGoToRandomSentence = () => {\n    let a = goToRandom(letters[choosenString.current])\n    handleSetString(a, choosenString.current)\n    console.log(a)\n  }\n\n  const handleToBeginning = () => {\n    // handleString(letters[choosenString.current], true)\n    handleString(now, true)\n  }\n\n  const exampleButtons = letters.map((el) => (\n    <BOOKstringButton\n      choosenString={choosenString.current}\n      handleSetString={handleSetString}\n      num={letters.indexOf(el)}\n      str={el}\n    />\n  ))\n  const [hover, setHover] = useState(false)\n\n  // return <>do something with STRING length</>\n  return (\n    <div\n      className={`select-none z-50 text-xl transform  flex flex-col gap-4 items-center border-black borde mt-4 text-gray-800 opacity-${\n        !appear ? 0 : 100\n      }`}\n      style={{ width: 1000, transition: '0.8s ease-in-out' }}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <div\n        className={`w-f flex flex-wrap items-center justify-evenly opacity-${\n          running && !hover ? 80 : 100\n        }`}\n        style={{ transition: '0.2s ease-in-out' }}\n      >\n        {exampleButtons}\n      </div>\n      <div className={`flex flex-row justify-around items-center w-f`}>\n        <BOOKstringButtonFunctional title={`shuffle`} onClick={handleShuffle} />\n        <BOOKstringButtonFunctional\n          title={`random book`}\n          onClick={handleRandom}\n        />\n        <BOOKstringButtonFunctional\n          title={`jump over`}\n          onClick={handleGoToRandomSentence}\n        />\n        <BOOKstringButtonFunctional\n          title={`to beginning`}\n          onClick={handleToBeginning}\n        />\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/NAV.links.tsx",["579"],"import React, { useEffect, useState, useRef } from 'react'\nimport { Chapters } from '../../../types/nav'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { NAVlink } from './NAV.link'\n\ninterface IProps {\n  chapter: Chapters\n  chapters: Chapters[]\n  ThemeColor: string\n  ShadowColor: string\n  onClick(link: Chapters): void\n}\n\nexport const NAVlinks: React.FC<IProps> = ({\n  chapters,\n  chapter,\n  ThemeColor,\n  ShadowColor,\n  onClick,\n}) => {\n  const links = chapters.map((link) => (\n    <NAVlink\n      link={link}\n      chapter={chapter}\n      onClick={onClick}\n      ThemeColor={ThemeColor}\n      ShadowColor={ShadowColor}\n    />\n  ))\n\n  const [params, setParams] = useState<[boolean, [number, number], number]>([\n    false,\n    [0, -100],\n    95,\n  ])\n\n  const is3of = useRef(false)\n\n  useDidMountEffect(() => {\n    if (!is3of.current && ['BOOK', 'TAP', 'INFO'].includes(chapter)) {\n      if (chapter === 'BOOK') {\n        setParams([false, [0, -100], 95])\n      } else if (chapter === 'TAP') {\n        setParams([false, [119, -100], 81])\n      } else if (chapter === 'INFO') {\n        setParams([false, [223, -100], 95])\n      }\n    } else {\n      setParams((prev) => [true, prev[1], prev[2]])\n    }\n\n    let id0 = setTimeout(() => {\n      if (!is3of.current && ['BOOK', 'TAP', 'INFO'].includes(chapter)) {\n        setParams((prev) => [true, prev[1], prev[2]])\n      }\n    }, 400)\n\n    let id1 = setTimeout(() => {\n      if (chapter === 'BOOK') {\n        setParams([true, [0, 0], 95])\n        is3of.current = true\n      } else if (chapter === 'TAP') {\n        setParams([true, [119, 0], 81])\n        is3of.current = true\n      } else if (chapter === 'INFO') {\n        setParams([true, [223, 0], 95])\n        is3of.current = true\n      } else {\n        setParams([true, [params[1][0], -100], params[2]])\n        is3of.current = false\n      }\n    }, 700)\n\n    let id2 = setTimeout(\n      () => setParams((prev) => [false, prev[1], prev[2]]),\n      1000\n    )\n\n    return () => {\n      clearTimeout(id0)\n      clearTimeout(id1)\n      clearTimeout(id2)\n    }\n\n    // }\n  }, [chapter])\n\n  return (\n    <div className={` borde-black flex flex-row items-center justify-center`}>\n      <div\n        className={`z-10 borde borde-black flex flex-row items-center justify-center gap-12`}\n        style={{ width: 310, height: 35 }}\n      >\n        {links}\n      </div>\n      <div\n        className={` absolute\n         borde border-red-100\n          flex flex-row items-center `}\n        style={{ width: 318, height: 35, transition: '0.3s ease-in-out' }}\n      >\n        <div></div>\n        <div\n          className={`border-2 opacity-${params[0] ? '100' : '0'}`}\n          style={{\n            width: params[2],\n            height: 45,\n            transition: '0.8s ease-in-out',\n            transform: `translateX(${params[1][0]}px) translateY(${params[1][1]}px)`,\n          }}\n        ></div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/main/components/Slide.tsx",["580","581"],"import React, { useState, useEffect } from 'react'\nimport { useNavAction } from '../../../hooks/useAction'\nimport { Chapters } from '../../../types/nav'\nimport { FadeText } from '../../../utils/FadeText'\nimport { getRandom } from '../../../utils/getRandom'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\n\ninterface IProps {\n  chapter: Chapters\n  title: Chapters\n  queue: number\n}\n\nexport const Slide: React.FC<IProps> = ({ chapter, title, queue }) => {\n  const { changeChapter } = useNavAction()\n\n  const [unique, setUnique] = useState(false)\n  const [params, setParams] = useState([2000, 0, 500])\n\n  const [posX, posY, width] = params\n  const [angle, setAngle] = useState(0)\n\n  const [hover, setHover] = useState(false)\n\n  useDidMountEffect(() => {\n    if (hover) {\n      setParams((prev) => {\n        let arr = prev\n        arr[1] = arr[1] - 10\n        return arr\n      })\n    } else {\n      setParams((prev) => {\n        let arr = prev\n        arr[1] = arr[1] + 10\n        return arr\n      })\n    }\n  }, [hover])\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setParams(() => [0, 0, 500, 1])\n    }, queue * 200 + 200)\n\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {}, 0)\n\n    if (!unique) {\n      id = setTimeout(() => {\n        setParams(() => [-2000, 0, 500])\n      }, queue * 200)\n    }\n\n    return () => clearTimeout(id)\n  }, [chapter])\n\n  useDidMountEffect(() => {\n    setParams(() => [50, 0, 500])\n    // setAngle((prev) => prev * -1)\n    setAngle(getRandom(0, 12) - 6)\n\n    let id = setTimeout(() => setParams(() => [0, -1000, 1000]), 600)\n    return () => clearTimeout(id)\n  }, [unique])\n\n  const getColor = (): [string, string, string] => {\n    switch (title) {\n      case 'BOOK':\n        return ['bg-red-200', 'bg-red-300', 'border-red-400']\n      case 'TAP':\n        return ['bg-blue-200', 'bg-blue-300', 'border-blue-400']\n      case 'INFO':\n        return ['bg-yellow-200', 'bg-yellow-300', 'border-yellow-400']\n      default:\n        return ['', '', '']\n    }\n  }\n\n  const definedColor = getColor()\n\n  return (\n    <div\n      className={`flex items-center justify-center font-courier cursor-pointer uppercase rounded-2xl ${\n        getColor()[0]\n      } ${unique && getColor()[1]}  border-${unique ? 0 : 2} ${getColor()[2]} `}\n      style={{\n        width: width,\n        height: 100,\n        fontSize: '3em',\n        boxShadow: '0 10px 20px rgba(0,0,0,0.15)',\n        transform: `translateX(${posX}px) translateY(${posY}px) rotate(${angle}deg)`,\n        transition: '0.5s ease',\n      }}\n      onMouseDown={() => {\n        setUnique(true)\n        changeChapter(title)\n      }}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <FadeText title={title} delay={[600, 1200]} hide={chapter} />\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/AuthMiniature.tsx",["582","583","584"],"import React, { useContext, useEffect, useState } from 'react'\nimport { AuthContext } from '../../../context/AuthContext'\nimport { useAuthAction } from '../../../hooks/useAction'\nimport { useTypedSelector } from '../../../hooks/useTypedSelector'\n\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { AUTHcontainer } from '../../authorization/AUTH.container'\nimport { PerspectiveController } from '../../PerspectiveController'\nimport { PROFILEcontainer } from '../../profile/PROFILE.container'\nimport { PhotoMiniature } from './PhotoMiniature'\n\nexport const AuthMiniature: React.FC = ({}) => {\n  const user = useTypedSelector((state) => state.auth.user)\n  // const users = useTypedSelector((state) => state.auth.users)\n  // const isLoggedIn = !(user.user_name == `guest`)\n\n  const auth = useContext(AuthContext)\n\n  const { isAuthenticated: isLoggedIn } = auth\n\n  // const getUserInfo = (array: User[], id: number | null) => {\n  //   let result: null | User = null\n  //   array.forEach((el) => {\n  //     if (el.id === id) {\n  //       return result === el\n  //     }\n  //   })\n\n  //   return result\n  // }\n\n  // const userInfo: User | null = getUserInfo(users, user)\n\n  const { setOpenOn, setOpenOff } = useAuthAction()\n  const isOpen = useTypedSelector((state) => state.auth.isOpened)\n\n  const chapter = useTypedSelector((state) => state.nav.chapter)\n  const [appear, setAppear] = useState(true)\n\n  useDidMountEffect(() => {\n    setAppear(false)\n    let id = setTimeout(() => setAppear(true), 300)\n\n    return () => {\n      clearTimeout(id)\n    }\n  }, [isOpen])\n\n  useDidMountEffect(() => {\n    setOpenOff()\n  }, [chapter])\n\n  const [perspective, setPerspective] = useState([0, 0, 48])\n\n  const handleSetPerspective = (\n    perspective: number,\n    marginTop: number,\n    marginLeft: number\n  ) => {\n    setPerspective([perspective, marginTop, marginLeft])\n  }\n\n  const [hover, setHover] = useState(false)\n\n  // useDidMountEffect(() => {\n  //   if (hover) {\n  //     setParams((prev) => {\n  //       let arr = prev\n  //       arr[1] = arr[1] - 10\n  //       return arr\n  //     })\n  //   } else {\n  //     setParams((prev) => {\n  //       let arr = prev\n  //       arr[1] = arr[1] + 10\n  //       return arr\n  //     })\n  //   }\n  // }, [hover])\n\n  return (\n    <div\n      className={`flex justify-center items-center `}\n      style={{\n        width: 80,\n        height: 50,\n        zIndex: 2021,\n        // opacity: 0.6,\n      }}\n    >\n      <PerspectiveController setPerspective2={handleSetPerspective} />\n      {/* {\n        // isOpen ? (\n        1 ? (\n          <div\n            style={{\n              position: 'fixed',\n              // backgroundColor: 'rgba(50, 50, 50, 0.2)',\n              backgroundColor: 'red',\n              top: 65,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              cursor: 'pointer',\n              zIndex: 49,\n            }}\n            onClick={() => setOpenOff()}\n          ></div>\n        ) : null\n      } */}\n      {\n        <div\n          className={`absolute z-50  border border-black overflow-hidden  ${\n            isOpen ? '' : 'cursor-pointer'\n          }`}\n          style={{\n            borderRadius: !isOpen ? 1000 : 10,\n            // opacity: 0.2,\n            marginLeft: isOpen ? perspective[2] : 0,\n            marginTop: isOpen ? perspective[1] : 0,\n            width: !isOpen ? 80 : 1150,\n            height: !isOpen ? 50 : 700,\n            transition: '0.4s ease',\n            transform: `translateX(${!isOpen ? 0 : -490}px) translateY(${\n              !isOpen ? (hover ? -3 : 0) : 410\n            }px) \n            perspective(1000px) \n            translateZ(${perspective[0]}px)`,\n            boxShadow: isOpen ? '2px 5px 20px 10px rgba(0,0,0,0.1)' : '',\n          }}\n          onMouseDown={() => {\n            if (!isOpen) setOpenOn()\n          }}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        >\n          {!isOpen ? (\n            <>\n              {isLoggedIn ? (\n                <div\n                  className={`flex items-center justify-center overflow-hidden`}\n                >\n                  {!appear ? (\n                    <div\n                      className={`${\n                        isLoggedIn ? `bg-purple-100` : `bg-yellow-200`\n                      }`}\n                      style={{\n                        width: '100%',\n                        height: 1050,\n                      }}\n                    >\n                      {' '}\n                    </div>\n                  ) : (\n                    <PhotoMiniature />\n                  )}\n                </div>\n              ) : (\n                <div\n                  className={`bg-yellow-100 w-f h-f flex justify-center items-center`}\n                >\n                  {' '}\n                  Log in\n                </div>\n              )}\n            </>\n          ) : (\n            <>{isLoggedIn ? <PROFILEcontainer /> : <AUTHcontainer />}</>\n          )}\n        </div>\n      }\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/ArrowPage.tsx",["585","586"],"import React, { useEffect, useState } from 'react'\nimport { Chapters, Directions } from '../../../types/nav'\nimport { useKeyPress } from '../../../utils/useKeyPress'\nimport ArrowLeftLogo from '../../../static/ArrowLeft.svg'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { yellow600 } from 'material-ui/styles/colors'\n\ninterface IProps {\n  onClick(dir: Directions): void\n  chapter: Chapters\n  isOpened: boolean\n  colors: [string, string, string]\n  direction: 'right' | 'left'\n}\n\nexport const NAVarrow: React.FC<IProps> = ({\n  onClick,\n  chapter,\n  isOpened,\n  colors,\n  direction,\n}) => {\n  const ArrowLeft: boolean = useKeyPress('ArrowLeft')\n  const ArrowRight: boolean = useKeyPress('ArrowRight')\n\n  const ArrowDown = direction === `left` ? ArrowLeft : ArrowRight\n\n  const [colorsSt, setColorsSt] = useState(colors)\n\n  const [ThemeColor, BorderColor, ShadowColor] = colorsSt\n  const mutatedThemeColor = () => {\n    let res = ThemeColor.split('')\n    res[res.length - 3] = '3'\n    return res.join('')\n  }\n\n  const [show, setShow] = useState(false)\n  const [hover, setHover] = useState(false)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      if (\n        [\n          Chapters.BOOK,\n          Chapters.TAP,\n          Chapters.INFO,\n          Chapters.NOT_FOUND,\n        ].includes(chapter)\n      ) {\n        setShow(true)\n      }\n    }, 1300)\n\n    let id2 = setTimeout(() => setShow(false), 4000)\n\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [])\n\n  useDidMountEffect(() => {\n    setShow(false)\n    let id = setTimeout(() => {\n      setShow(true)\n      setColorsSt(colors)\n    }, 2300)\n    if (\n      ![\n        Chapters.BOOK,\n        Chapters.TAP,\n        Chapters.INFO,\n        Chapters.NOT_FOUND,\n      ].includes(chapter)\n    ) {\n      clearTimeout(id)\n    }\n\n    let id2 = setTimeout(() => setShow(false), 4000)\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [chapter])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      if (ArrowDown) {\n        setShow(true)\n      }\n    })\n\n    let id2 = setTimeout(() => {\n      if (ArrowDown) {\n        setShow(false)\n      }\n    }, 1000)\n\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [ArrowDown])\n\n  return (\n    <div\n      className={`absolute z-50 outline-none cursor-pointer invisible 135k:visible p-1  rounded-xl  transition duration-150  flex items-center justify-center\n      opacity-${show && !isOpened ? 100 : 0}`}\n      style={{\n        top: 400,\n        left: direction === 'left' ? 50 : '',\n        right: direction === 'right' ? 50 : '',\n        width: 55,\n        height: 55,\n\n        transition: '1s ease-in-out',\n      }}\n      onClick={() => onClick('LEFT' as Directions)}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <div\n        className={`absolute rounded-lg ${mutatedThemeColor} border ${BorderColor} ${\n          ArrowDown ? `shadow-4th` : `shadow-5th`\n        } ${ShadowColor} p-2 hover:bg-gray-100 `}\n        style={{\n          width: 55,\n          height: 55,\n          // boxShadow: ArrowDown\n          //   ? `1px 1px 4px 1px ${ShadowColor}`\n          //   : `4px 4px 11px 8px ${ShadowColor}`,\n          transition: '0.2s ease-in-out',\n          transform: `translateY(${hover ? -7 : 0}px)`,\n        }}\n      >\n        <img\n          alt=\"AL\"\n          src={ArrowLeftLogo}\n          className={`w-10 h-10 z-10 transform ${\n            direction === 'right' ? '-rotate-180' : ``\n          }`}\n        />\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/signup/AUTH.signup.container.tsx",["587","588","589","590","591"],"import React, { useState } from 'react'\nimport { useHttp } from '../../../hooks/http.hook'\nimport { useAuthAction, useNavAction } from '../../../hooks/useAction'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\nimport { PasswordState, UsernameState } from '../auth.types'\nimport { AUTHlsignup } from './AUTH.signup'\nimport { signupPasswordCheck, signUpUsernameCheck } from './signupUtils'\n\nexport const AUTHsignupContainer: React.FC = ({}) => {\n  const [username, setUsername] = useState('test1234')\n  const [password, setPassword] = useState('1234')\n  const [password2, setPassword2] = useState('1234')\n\n  const [usernameMessage, setUsernameMessage] = useState<null | string>(null)\n  const [passwordMessage, setPasswordMessage] = useState<null | string>(null)\n  const [password2Message, setPassword2Message] = useState<null | string>(null)\n\n  const [usernameState, setUsernameState] = useState<UsernameState>('default')\n  const [passwordState, setPasswordState] = useState<PasswordState>('default')\n  const [password2State, setPassword2State] = useState<UsernameState>('default')\n\n  const { loading, request, error, clearError } = useHttp()\n\n  const { setLoadingOn, setLoadingOff } = useNavAction()\n\n  useDidMountEffect(() => {\n    if (loading) {\n      setLoadingOn()\n    } else {\n      setLoadingOff()\n    }\n  }, [loading])\n\n  useDidMountEffect(() => {\n    if (error === 'TAKEN') {\n      setUsernameState('error')\n      setUsernameMessage('username is already taken')\n    }\n  }, [error])\n\n  useDidMountEffect(() => {\n    setUsernameState('default')\n    setUsernameMessage('')\n\n    let id0 = setTimeout(\n      () => setUsernameState(signUpUsernameCheck(username)[0]),\n      1000\n    )\n    let id1 = setTimeout(\n      () => setUsernameMessage(signUpUsernameCheck(username)[1]),\n      1000\n    )\n\n    return () => {\n      clearTimeout(id0)\n      clearTimeout(id1)\n    }\n  }, [username])\n\n  useDidMountEffect(() => {\n    setPasswordState('default')\n    setPasswordMessage('')\n    let id0 = setTimeout(\n      () => setPasswordState(signupPasswordCheck(password)[0]),\n      1000\n    )\n    let id1 = setTimeout(\n      () => setPasswordMessage(signupPasswordCheck(password)[1]),\n      1000\n    )\n\n    return () => {\n      clearTimeout(id0)\n      clearTimeout(id1)\n    }\n  }, [password])\n\n  useDidMountEffect(() => {\n    setPassword2State('default')\n    setPassword2Message('')\n\n    let id0 = setTimeout(() => {\n      if (password === password2) {\n        setPassword2State('success')\n        setPassword2Message('')\n      } else {\n        setPassword2State('error')\n        setPassword2Message('passwords do not match')\n      }\n    }, 1000)\n\n    return () => {\n      clearTimeout(id0)\n    }\n  }, [password2])\n\n  const [noErrors, setNoErrors] = useState(true)\n\n  useDidMountEffect(() => {\n    if (\n      usernameState === 'error' ||\n      passwordState === 'error' ||\n      password2State === 'error' ||\n      // !username ||\n      // !password ||\n      !password2\n    ) {\n      setNoErrors(false)\n    } else {\n      setNoErrors(true)\n    }\n  }, [usernameState, passwordState, password2State])\n\n  const { signUp, setOpenOff } = useAuthAction()\n\n  const handleSumbit = async () => {\n    console.log('start')\n\n    if (!username) {\n      setUsernameState(signUpUsernameCheck(username)[0])\n      setUsernameMessage(signUpUsernameCheck(username)[1])\n    }\n    console.log('1')\n\n    if (!password) {\n      setPasswordState(signupPasswordCheck(password)[0])\n      setPasswordMessage(signupPasswordCheck(password)[1])\n    }\n    console.log('2')\n\n    if (!password2 || password2 !== password) {\n      setPassword2State('error')\n      setPassword2Message('passwords do not match')\n    }\n\n    console.log('3')\n\n    if (!noErrors || !username || !password || !password2)\n      return console.log('something is wrong')\n    // setTimeout(() => setOpenOff(), 100)\n\n    // setTimeout(() => signUp({ username, password }), 200)\n\n    try {\n      const data = await request('/api/auth/register/', 'POST', {\n        email: username,\n        password,\n      })\n    } catch {}\n\n    // setTimeout(() => setOpenOff(), 500)\n\n    // // console.log(username, password)\n\n    // setTimeout(() => {\n    //   setUsername('')\n    //   setPassword('')\n    //   setPassword2('')\n    //   setUsernameState('default')\n    //   setPasswordState('default')\n    //   setPassword2State('default')\n    //   setUsernameMessage('')\n    //   setPasswordMessage('')\n    //   setPassword2Message('')\n    // }, 1050)\n    console.log('end')\n  }\n\n  return (\n    <>\n      <AUTHlsignup\n        username={username}\n        setUsername={setUsername}\n        password={password}\n        setPassword={setPassword}\n        password2={password2}\n        setPassword2={setPassword2}\n        usernameMessage={usernameMessage}\n        passwordMessage={passwordMessage}\n        password2Message={password2Message}\n        usernameState={usernameState}\n        passwordState={passwordState}\n        password2State={password2State}\n        noErrors={noErrors}\n        handleSubmit={handleSumbit}\n        isLoading={loading}\n      />\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/login/AUTH.login.container.tsx",["592","593","594","595","596"],"import React, { useContext, useState } from 'react'\nimport { AuthContext } from '../../../context/AuthContext'\nimport { useHttp } from '../../../hooks/http.hook'\nimport { useAuthAction } from '../../../hooks/useAction'\nimport { useTypedSelector } from '../../../hooks/useTypedSelector'\nimport { AUTHlogin } from './AUTH.login'\nimport { loginAttempt } from './loginUtils'\n\ninterface IProps {}\n\nexport const AUTHloginContainer: React.FC<IProps> = () => {\n  const [username, setUsername] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n\n  const [usernameError, setUsernameError] = useState<boolean>(false)\n  const [passwordError, setPasswordError] = useState<boolean>(false)\n\n  const [rememberMe, setRememberMe] = useState(true)\n\n  const users = useTypedSelector((state) => state.auth.users)\n  const { setOpenOff } = useAuthAction()\n\n  const { loading, request, error, clearError } = useHttp()\n\n  const auth = useContext(AuthContext)\n\n  const handleSubmit = async () => {\n    const response = loginAttempt(users, username, password)\n    // console.log(users)\n    // console.log(username)\n    // console.log(password)\n    // console.log(response)\n    // setTimeout(() => {\n    // if (response) {\n    // logIn(response, rememberMe)\n    try {\n      const data = await request('/api/auth/login/', 'POST', {\n        email: username,\n        password,\n      })\n\n      auth.login(data.token, data.userId)\n    } catch {\n      handleIncorrectUsernameOrPassword()\n    }\n\n    // setUsername('')\n    // setPassword('')\n    // setOpenOff()\n    // return\n    // }\n    handleIncorrectUsernameOrPassword()\n    // }, 0)\n  }\n\n  const handleIncorrectUsernameOrPassword = (): void => {\n    setTimeout(() => {\n      setUsernameError(true)\n      setPasswordError(true)\n    }, 300)\n\n    setTimeout(() => {\n      setUsernameError(false)\n      setPasswordError(false)\n    }, 1500)\n  }\n\n  return (\n    <>\n      <AUTHlogin\n        username={username}\n        setUsername={setUsername}\n        setPassword={setPassword}\n        password={password}\n        usernameError={usernameError}\n        passwordError={passwordError}\n        rememberMe={rememberMe}\n        setRememberMe={setRememberMe}\n        handleSubmit={handleSubmit}\n      />\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/utils/modifier.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/redux/auth/auth.types.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/loading/BlinkRandomSymbol.tsx",["597"],"import React, { useEffect, useRef, useState } from 'react'\nimport { getRandom } from '../../utils/getRandom'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { getRandomLetter } from './getRandomLetter'\n\ninterface IProps {\n  delay?: number\n  interval?: [number, number]\n  setIsSymbol(isS: boolean): void\n}\n\nexport const BlinkRandomSymbol: React.FC<IProps> = ({\n  delay = 0,\n  interval = [1000, 3000],\n  setIsSymbol,\n}) => {\n  // const [symbol, setSymbol] = useState(' ')\n  const symbol = useRef(' ')\n  const used = useRef('I')\n\n  const [show, setShow] = useState(false)\n\n  const handleChange = (s: string, del: number) => {\n    // if (!firstHandle.current || 1) {\n    setShow(false)\n    setTimeout(() => (symbol.current = s), 410)\n    // setTimeout(() => setSymbol(s), 410)\n    setTimeout(() => setShow(true), del)\n    // } else {\n    //   setTimeout(() => setSymbol(s), del * 0.5)\n    //   setTimeout(() => setShow(true), del * 0.5)\n    //   firstHandle.current = false\n    // }\n  }\n\n  useDidMountEffect(() => {\n    if (show) {\n      setIsSymbol(true)\n    } else {\n      setIsSymbol(false)\n    }\n  }, [show])\n\n  const handleTimeout = () => {\n    let symbol1 = getRandomLetter(used.current)\n    used.current = symbol1\n    let delay1 = getRandom(interval[0], interval[1])\n    handleChange(symbol1, delay1)\n    setTimeout(() => {\n      handleTimeout()\n    }, delay1 * 2)\n  }\n\n  useEffect(() => {\n    setTimeout(() => handleTimeout(), 0)\n  }, [])\n\n  return (\n    <div\n      className={'select-none'}\n      style={{\n        opacity: show ? 1 : 0,\n        transition: '0.4s ease-in-out',\n        textTransform: 'uppercase',\n        transform: `rotate(${''}deg)`,\n      }}\n    >\n      {symbol.current}\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/utils/shuffleArray.ts",["598"],"export const shuffleArray = (arr: string[]): string[] => {\n  let a: number[] = Array.from({ length: arr.length }, (_, i) => i)\n  let res: string[] = []\n  for (let i = 0; i < arr.length; i++) {\n    let r = Math.floor(Math.random() * (arr.length - i))\n    res.push(arr[a[r]])\n    a = a.filter((el) => el !== a[r])\n  }\n  return res\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/utils/FadeText.tsx",["599"],"import React, { useState, useEffect } from 'react'\nimport { getRandom } from './getRandom'\nimport { useDidMountEffect } from './useDidMountEffect'\n\ninterface IProps {\n  title: string\n  delay: [number, number]\n  hide?: any\n  multiple?: boolean\n  blink?: any\n}\n\nexport const FadeText: React.FC<IProps> = ({\n  title,\n  delay,\n  hide = 0,\n  multiple = false,\n  blink = 0,\n}) => {\n  const symbols = title.split('').map((el, i) => (\n    <TagSymbol\n      // key={el + Math.random()}\n      key={el + i}\n      symbol={el}\n      delay={delay}\n      hide={hide}\n      multiple={multiple}\n      blink={blink}\n    />\n  ))\n\n  return <>{symbols}</>\n}\n\ninterface IProps2 {\n  symbol: string\n  delay: [number, number]\n  hide?: any\n  multiple: boolean\n  blink: any\n}\n\nconst TagSymbol: React.FC<IProps2> = ({\n  symbol,\n  delay,\n  hide = 1,\n  multiple,\n  blink,\n}) => {\n  const [show, setShow] = useState(false)\n  const [currentSymbol, setCurrentSymbol] = useState('\\u00a0')\n\n  const calculateDelay = () => {\n    if (multiple) {\n      return Math.floor(getRandom(delay[0], delay[1]) / 100) * 100\n    } else return getRandom(delay[0], delay[1])\n  }\n\n  const del = calculateDelay()\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setCurrentSymbol(symbol)\n      setShow(true)\n    }, del)\n\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => setShow(false), del * 0.5)\n\n    return () => clearTimeout(id)\n  }, [hide])\n\n  useDidMountEffect(() => {\n    // let id = setTimeout(() => {\n    let id0 = setTimeout(() => setCurrentSymbol('\\u00a0'), 1)\n    let id1 = setTimeout(() => setShow(false), 2)\n    let id2 = setTimeout(() => setCurrentSymbol(symbol), del * 0.2)\n    let id3 = setTimeout(() => setShow(true), del * 2)\n    // }, del * 0.75)\n\n    return () => {\n      clearTimeout(id0)\n      clearTimeout(id1)\n      clearTimeout(id2)\n      clearTimeout(id3)\n      setCurrentSymbol(symbol)\n      setShow(true)\n    }\n  }, [blink])\n\n  // useDidMountEffect(() => {\n  //   let id0 = setTimeout(() => setShow(false), del * 25)\n  //   // let id0 = setTimeout(() => setCurrentSymbol(' '), del * 0.75)\n  //   let id1 = setTimeout(() => setCurrentSymbol(symbol), del * 75)\n  //   let id2 = setTimeout(() => setShow(true), del * 1.5)\n\n  //   return () => {\n  //     clearTimeout(id0)\n  //     clearTimeout(id1)\n  //     clearTimeout(id2)\n  //     setShow(true)\n  //   }\n  // }, [symbol])\n\n  useDidMountEffect(() => setCurrentSymbol(symbol), [symbol])\n\n  return (\n    <span\n      className=\"select-none\"\n      style={{ opacity: show ? 1 : 0, transition: `${delay[0] / 500}s ease` }}\n    >\n      {currentSymbol}\n    </span>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/gonewiththewind.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/lionwitch.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/robinson.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/lorem.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/tokillamockinbird.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.modal.tsx",["600"],"import React, { useState } from 'react'\n\nimport { Modal, Backdrop, Slide } from '@material-ui/core'\n// import { Modal, Backdrop, Slide } from '@mui/material'\n\ninterface IProps {\n  modalOpen: boolean\n  handleCloseModal(): void\n}\n\nexport const TAPshootingModal: React.FC<IProps> = ({\n  modalOpen,\n  handleCloseModal,\n}) => {\n  return (\n    <>\n      <Modal\n        // open={true}\n        open={modalOpen}\n        onClose={handleCloseModal}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{ timeout: 500 }}\n      >\n        <Slide in={modalOpen}>\n          <p\n            className=\"cursor-pointer bg-red-200 border-red-500 border-2 mx-auto mt-56 rounded-2xl outline-none flex  items-center justify-center font-courier \"\n            style={{ width: 450, height: 100, fontSize: '4em' }}\n            onClick={handleCloseModal}\n          >\n            YOU LOST : <p className=\"transform -translate-x-5\">(</p>\n          </p>\n        </Slide>\n      </Modal>\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.timers.tsx",["601","602","603"],"import React, { useState, useEffect } from 'react'\n\ninterface IProps {\n  interval: number\n  handleTick(): void\n}\n\nexport const TAPshootingTimers: React.FC<IProps> = ({\n  interval,\n  handleTick,\n}) => {\n  useEffect(() => {\n    let id = setInterval(() => handleTick(), interval)\n\n    return () => {\n      clearInterval(id)\n    }\n  }, [interval])\n\n  return <h1></h1>\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.buttons.tsx",["604","605"],"import React, { useState, useEffect } from 'react'\nimport { TAPshootingIntervalSlider } from './TAP.shooting.intervalSlider'\nimport { TAPshootingLimitSlider } from './TAP.shooting.limitSlider'\nimport { TAPshootingKeyStyle } from './TAP.shooting.keyStyle'\nimport { KeyColor } from '../TAP.shooting'\nimport { TAPshootingKeyType } from './TAP.shooting.keyType'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\n\ntype IProps = {\n  limit: number\n  setLimit(lim: number): void\n  running: boolean\n  handleStart(): void\n  intervalPush: number\n  setIntervalPush(int: number): void\n  pushCell(): void\n  started: boolean\n  keyColor: KeyColor\n  setKeyColor(color: KeyColor): void\n  typeCells: {\n    numbers: boolean\n    letters: boolean\n    punctuation: boolean\n  }\n  handleSetTypeCells(type: 1 | 2 | 3): void\n}\n\nexport const TAPshootingButtons: React.FC<IProps> = ({\n  limit,\n  setLimit,\n  running,\n  handleStart,\n  intervalPush,\n  setIntervalPush,\n  pushCell,\n  started,\n  keyColor,\n  setKeyColor,\n  typeCells,\n  handleSetTypeCells,\n}) => {\n  const [bluring, setBluring] = useState(0)\n  const [bluringTag, setBluringTag] = useState('START')\n\n  useDidMountEffect(() => {\n    setBluring(100)\n    let id = setTimeout(() => {\n      if (started && !running) {\n        setBluringTag('READY')\n      } else if (started && running) {\n        setBluringTag('PAUSE')\n      } else if (!started && !running) {\n        setBluringTag('START')\n      }\n      // running ? setBluringTag('PAUSE') : setBluringTag('START')\n    }, 50)\n    let id2 = setTimeout(() => {\n      setBluring(0)\n    }, 100)\n\n    return () => {\n      clearTimeout(id)\n      clearTimeout(id2)\n    }\n  }, [running, started])\n\n  const handleStartButton = (): void => {\n    if (started == running) {\n      handleStart()\n    }\n  }\n\n  const startButtonParams = () => {\n    switch (bluringTag) {\n      case 'PAUSE':\n        return ['bg-red-300', `active:bg-red-200`, `border-red-400`]\n      case 'READY':\n        return ['bg-sky-300', `active:bg-sky-200`, `border-sky-400`]\n      default:\n        return ['bg-green-300', `active:bg-green-200`, `border-green-400`]\n    }\n  }\n\n  return (\n    <div className=\"flex flex-row justify-center items-center  h-32 mb-10 relative gap-10 font-courier borde border-red-800\">\n      <TAPshootingKeyStyle keyColor={keyColor} setKeyColor={setKeyColor} />\n      <div className=\"flex flex-col items bg-sky-300 shadow-2xl py-2 px-5 rounded-xl border-2 border-sky-400\">\n        <h2 className=\"text-2xl text-right mr-12\">{intervalPush} ms</h2>\n        <TAPshootingIntervalSlider\n          intervalPush={intervalPush}\n          setIntervalPush={setIntervalPush}\n        />\n      </div>\n      <button\n        className={`flex flex-col items ${\n          startButtonParams()[0]\n        } shadow-2xl py-6 px-10  rounded-xl text-2xl outline-none\n    ${startButtonParams()[1]} border-2 ${\n          startButtonParams()[2]\n        } transition-hover `}\n        style={{\n          textShadow: `0px 0px ${bluring}px rgba(0, 0, 0, 1)`,\n          color: 'transparent',\n          transition: '0.25s ease',\n        }}\n        onMouseDown={handleStartButton}\n      >\n        {bluringTag}\n        <div\n          className=\"bg-black absolute mt-10 rounded-full\"\n          style={{\n            height: 2,\n            width: 70,\n          }}\n        >\n          {' '}\n          {'\\u00A0'}\n        </div>\n      </button>\n      <div className=\"flex flex-col items bg-sky-300 shadow-2xl py-2 px-5 rounded-xl border-2 border-sky-400\">\n        <h2 className=\"text-2xl ml-8\">Limit: {limit}</h2>\n        <TAPshootingLimitSlider limit={limit} setLimit={setLimit} />\n      </div>\n      <TAPshootingKeyType\n        keyColor={keyColor}\n        typeCells={typeCells}\n        handleSetTypeCells={handleSetTypeCells}\n      />\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.tap.tsx",["606"],"import React, { useState, useEffect } from 'react'\nimport { TAPshootingFrame } from './TAP.shooting.frame'\nimport { KeyColor } from '../TAP.shooting'\n\ninterface IProps {\n  cells: Array<string | null>\n  bluring: boolean\n  missclicks: number\n  running: boolean\n  handleStart(): void\n  started: boolean\n  handleRunning(): void\n  keyColor: KeyColor\n  newGame: boolean\n}\n\nexport const TAPtap: React.FC<IProps> = ({\n  cells,\n  bluring,\n  missclicks,\n  running,\n  handleStart,\n  started,\n  handleRunning,\n  keyColor,\n  newGame,\n}) => {\n  const [frameColor, setFrameColor] = useState('bg-sky-200')\n\n  useEffect(() => {\n    if (running) {\n      if (cells.filter((el) => el).length > 0) {\n        setFrameColor('bg-green-400')\n        setTimeout(() => setFrameColor('bg-transparent'), 50)\n      } else {\n        setFrameColor('bg-transparent')\n      }\n    } else {\n      setFrameColor('bg-sky-400')\n    }\n  }, [running])\n\n  useEffect(() => {\n    if (missclicks) {\n      setFrameColor('bg-red-600')\n    }\n    let id1 = setTimeout(() => setFrameColor('bg-transparent'), 100)\n\n    return () => clearTimeout(id1)\n  }, [missclicks])\n\n  const cellElements = (cell: number) => {\n    if (cells.length <= cell) {\n      return <div style={{ width: 82, height: 63 }}></div>\n    }\n\n    return (\n      <div\n        className={` flex justify-center items-center rounded-full`}\n        style={{ width: 82, height: 63 }}\n      >\n        <div\n          className={` ${!cells[cell] && `hidden`}\n               bg-${keyColor}-500  rounded-full flex justify-center items-center font-courier uppercase`}\n          style={{\n            width: 80,\n            height: 80,\n            fontSize: '3.5em',\n            transition: '0.1s ease',\n          }}\n        >\n          <div\n            style={{\n              marginTop:\n                cells[cell] === ':' ||\n                cells[cell] === ';' ||\n                cells[cell] === '(' ||\n                cells[cell] === ')' ||\n                cells[cell] === '[' ||\n                cells[cell] === '{' ||\n                cells[cell] === '}' ||\n                cells[cell] === ']' ||\n                cells[cell] === '_' ||\n                cells[cell] === '-'\n                  ? '-10px'\n                  : '',\n            }}\n          >\n            {cells[cell]}\n          </div>\n          {/* {cell} */}\n          <div\n            className={`bg-black absolute mt-14 rounded-full ${\n              !(cells[cell] === 'j' || cells[cell] === 'f') && 'hidden'\n            } ${bluring && 'hidden'}`}\n            style={{ height: 2, width: 18, transition: '0.5s ease' }}\n          ></div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"invisible 1k:visible relative flex justify-center  items-start \">\n      <div\n        className=\"flex flex-col justify-center items-center gap-16 \"\n        style={{\n          width: 1110,\n          height: 620,\n        }}\n      >\n        <TAPshootingFrame\n          // bluring={bluring}\n          isThereCells={cells.filter((el) => el).length > 0}\n          frameColor={frameColor}\n          cellsLength={cells.length}\n          handleStart={handleStart}\n          started={started}\n          handleRunning={handleRunning}\n          newGame={newGame}\n        />\n\n        <div className=\"flex flex-row justify-center gap-20\">\n          {cellElements(25)}\n          {cellElements(13)}\n          {cellElements(14)}\n          {cellElements(15)}\n          {cellElements(26)}\n        </div>\n        <div className=\"flex flex-row justify-center gap-20\">\n          {cellElements(21)}\n          {cellElements(7)}\n          {cellElements(3)}\n          {cellElements(4)}\n          {cellElements(10)}\n          {cellElements(22)}\n        </div>\n        <div className=\"flex flex-row justify-center gap-20\">\n          {cellElements(19)}\n          {cellElements(8)}\n          {cellElements(1)}\n          {cellElements(0)}\n          {cellElements(2)}\n          {cellElements(11)}\n          {cellElements(20)}\n        </div>\n        <div className=\"flex flex-row justify-center gap-20\">\n          {cellElements(23)}\n          {cellElements(9)}\n          {cellElements(5)}\n          {cellElements(6)}\n          {cellElements(12)}\n          {cellElements(24)}\n        </div>\n        <div className=\"flex flex-row justify-center gap-20\">\n          {cellElements(27)}\n          {cellElements(16)}\n          {cellElements(17)}\n          {cellElements(18)}\n          {cellElements(28)}\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/the1984.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/static/letters/thelordoftherings.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/utils/FadeText2.tsx",["607","608"],"import React, { useState, useEffect } from 'react'\nimport { getRandom } from './getRandom'\nimport { useDidMountEffect } from './useDidMountEffect'\n\ninterface IProps {\n  title: string\n  hide: any\n  delay: number\n  component: 'h1' | 'h3'\n  highlighter?: boolean\n}\n\nexport const FadeText2: React.FC<IProps> = ({\n  title,\n  hide,\n  delay,\n  component,\n  highlighter = false,\n}) => {\n  const symbols = title.split('').map((el, i) => (\n    <TagSymbol\n      // key={el + Math.random()}\n      symbol={el}\n      hide={hide}\n      i={i}\n      delay={delay}\n      highlighter={highlighter}\n    />\n  ))\n\n  if (component === 'h1') return <h1 className={`text-3xl pb-4`}>{symbols}</h1>\n\n  return <h3>{symbols}</h3>\n}\n\ninterface IProps2 {\n  symbol: string\n  hide: any\n  i: number\n  delay: number\n  highlighter: boolean\n}\n\nconst TagSymbol: React.FC<IProps2> = ({\n  symbol,\n  hide,\n  i,\n  delay,\n  highlighter,\n}) => {\n  const [show, setShow] = useState(false)\n\n  const calcDelay = i + Math.floor(Math.random() * delay)\n\n  useEffect(() => {\n    let id = setTimeout(() => setShow(true), calcDelay)\n\n    return () => clearTimeout(id)\n  }, [])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => setShow(false), calcDelay * 0.66)\n\n    return () => clearTimeout(id)\n  }, [hide])\n\n  return (\n    <span\n      className={`opacity-${show ? 100 : 0} select-none ${\n        highlighter ? `bg-red-600` : ``\n      }`}\n    >\n      {symbol}\n    </span>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/hooks/http.hook.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/utils/getRandom.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.container.tsx",["609","610"],"import React, { useEffect, useState } from 'react'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { LEVELinfo } from './LEVEL.info'\nimport { LEVELlevel } from './LEVEL.level'\nimport { LEVELrecorder } from './LEVEL.recorder'\nimport { LEVELupper } from './LEVEL.upper'\n\ninterface IProps {\n  overall: number\n  fti: number[]\n  avgCPM: number\n  CPM: number\n  accuracy: number\n  setHide(hide: boolean): void\n  errors: number\n  overallLocal: number\n\n  // appear: boolean\n}\n\nexport enum ExpMessage {\n  Practice = `Practice`,\n  HardWorker = `Hard Worker`,\n  TaskAheadOfYou = `Task Ahead Of You`,\n  MaraphonRunner = `Marathon Runner`,\n\n  FastFingers = `Fast Fingers`,\n  WayTooFast = `Way Too Fast`,\n  FastAndFurious = `Fast And Furious`,\n\n  TheBullsEye = `The Bull's Eye`,\n  Marksman = `Marksman`,\n  AccurateAsStephCurry = `Accurate As Steph Curry`,\n\n  FastRun = `Awesome Run`,\n  FastAndPerfectRace = `Fast And Perfect Race`,\n\n  TopSkills = `Top Skills`,\n  Excellence = `Excellence`,\n  NotAverage = `Not Average`,\n\n  Pianist = `Pianist`,\n  AbsoluteMaster = `Absolute Master`,\n}\n\nexport type ExpMSG = null | string | ExpMessage\n\nexport const LEVELcontainer: React.FC<IProps> = ({\n  overall,\n  fti,\n  CPM,\n  avgCPM,\n  accuracy,\n  setHide,\n  errors,\n  overallLocal,\n  // appear,\n}) => {\n  // const levels = [250, 500, 1_000, 2_000, 3_750, 6_000, 10_000, 15_000, 25_000]\n  // const levels = [250, 625, 1_175, 2_000, 3_250, 5_125, 7_950, 12_200, 18_600]\n\n  const levels = [250, 575, 1_000, 1_575, 2_350, 3_375, 4_750, 6_575, 9_000]\n\n  const [level, setLevel] = useState(1)\n  const [exp, setExp] = useState<[number, number]>([40, 100])\n\n  const [expMSG, setExpMSG] = useState<ExpMSG>(null)\n\n  useEffect(() => {\n    setExp(() => {\n      return [0, levels[level - 1]]\n    })\n  }, [level])\n\n  useDidMountEffect(() => {\n    if (exp[0] >= exp[1] && exp[0] > 0) {\n      let difference = exp[0] - exp[1]\n      setLevel((prev) => prev + 1)\n      setExp((prev) => [difference, prev[1]])\n    }\n  }, [exp])\n\n  const handleSetExp = (value: number) => {\n    value = Math.round(value / 5) * 5\n\n    if (value <= exp[1] - exp[0]) {\n      for (let i = 0; i < value; i++) {\n        setTimeout(() => {\n          setExp((prev) => [prev[0] + 1, prev[1]])\n        }, i * 150 + 20)\n      }\n    } else {\n      let before = exp[1] - exp[0]\n      let after = value - before\n      for (let i = 0; i < before; i++) {\n        setTimeout(() => {\n          setExp((prev) => [prev[0] + 1, prev[1]])\n        }, i * 50 + 20)\n      }\n      for (let i = 0; i < after; i++) {\n        setTimeout(() => {\n          setExp((prev) => [prev[0] + 1, prev[1]])\n        }, i * 50 + 2520)\n      }\n    }\n  }\n\n  const handleSetExpLogin = (value: number) => {\n    setExp((prev) => [value, prev[1]])\n  }\n\n  return (\n    <div className={` select-none `}>\n      <LEVELlevel exp={exp} level={level} expMSG={expMSG} setHide={setHide} />\n      <div className={`flex flex-row justify-evenly items-center w-f`}>\n        <div onMouseDown={() => handleSetExp(10)}>+10</div>\n        <div onMouseDown={() => handleSetExp(50)}>+50</div>\n        <div onMouseDown={() => setLevel((prev) => prev + 1)}>lvlup</div>\n        <div onMouseDown={() => setLevel(5)}>5</div>\n        <div onMouseDown={() => setLevel(10)}>10</div>\n      </div>\n      <LEVELupper\n        handleSetExp={handleSetExp}\n        overall={overall}\n        fti={fti}\n        errors={errors}\n        overallLocal={overallLocal}\n        avgCPM={avgCPM}\n        CPM={CPM}\n        accuracy={accuracy}\n        setExpMSG={setExpMSG}\n      />\n      <LEVELrecorder\n        level={level}\n        setLevel={setLevel}\n        handleExp={handleSetExpLogin}\n        exp={exp}\n      />\n    </div>\n  )\n}\n\n// let test = (start) => {\n//   let res = [start * 25]\n//   let increment = 250\n//   for(i = 0; i < 8; i++) {\n//     increment *= 1.33\n//     let next = Math.floor((res[res.length - 1] + increment) /25 )\n\n//     res.push(next * 25)\n//   }\n\n//   return res\n// }\n\n//   console.log(test(10))\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/login/loginUtils.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/signup/signupUtils.ts",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.accuracy.widget.tsx",["611","612"],"import { InfoRounded } from '@material-ui/icons'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { FadeText } from '../../../../utils/FadeText'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\nimport { PingingCircles } from './BOOK.pingingCircles'\n\ninterface IProps {\n  currentAccuracy: number\n  overall: number\n  errors: number\n}\n\nexport const BOOKstatsAccuracyWidget: React.FC<IProps> = ({\n  currentAccuracy,\n  overall,\n  errors,\n}) => {\n  const [isHovered, setIsHovered] = useState(false)\n  const [isHovered2, setIsHovered2] = useState(false)\n  const [isHoveredCurrent, setIsHoveredCurrent] = useState(false)\n  const [isHoveredChapter, setIsHoveredChapter] = useState(false)\n\n  const [showType, setShowType] = useState<`.` | `%`>('%')\n\n  const accuracyValue =\n    currentAccuracy > 0\n      ? currentAccuracy === 1000\n        ? `999`\n        : `${currentAccuracy}`\n      : `000`\n\n  const chapterAccuracy = Math.floor(((overall - errors) / overall) * 1000)\n\n  const accuracyChapterValue =\n    chapterAccuracy > 0\n      ? chapterAccuracy === 1000\n        ? `999`\n        : `${chapterAccuracy}`\n      : `000`\n\n  const cond1 = !!currentAccuracy\n  const cond2 = !!(chapterAccuracy && overall >= 245)\n\n  useDidMountEffect(() => {\n    if (overall >= 245) {\n      setIsHoveredChapter(false)\n    }\n  }, [overall])\n\n  return (\n    <div className={`flex justify-center items-center`}>\n      <div\n        className={`z-10 flex flex-row borde border-black px-2 rounded-xl ${\n          (isHovered || isHovered2) && `bg-red-100`\n        }`}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        accuracy |{`\\u00a0`}\n        {showType === `.` ? `.` : ``}\n        {currentAccuracy === 0 ? (\n          <PingingCircles />\n        ) : (\n          <FadeText\n            title={\n              showType === `.`\n                ? `${accuracyValue}`\n                : currentAccuracy % 10 === 0\n                ? currentAccuracy === 1000\n                  ? `100`\n                  : `${currentAccuracy / 10}.0`\n                : `${currentAccuracy / 10}`\n            }\n            delay={[200, 600]}\n            blink={accuracyValue}\n          />\n        )}\n        {showType === `%` ? `%` : ` `}\n      </div>\n      {isHovered || isHovered2 ? (\n        <div\n          className={`absolute bg-red-200 rounded-xl  flex  p-2 px-6 border border-red-500`}\n          style={{\n            width: 340,\n            height: 260,\n            boxShadow: `2px 1px 12px 4px rgba(0, 0, 0, 0.3)`,\n            transform: `translateY(-85px)`,\n            // fontSize: '17px',\n            opacity: 10,\n          }}\n          onMouseEnter={() => setIsHovered2(true)}\n          onMouseLeave={() => setIsHovered2(false)}\n        >\n          <div className={`flex justify-center  w-f`}>\n            {\n              <div className={`flex flex-col  items-center w-f`}>\n                <div\n                  className={`flex justify-center w-f text-gray-900 text-xl`}\n                >\n                  accuracy\n                </div>\n                <div\n                  className={`w-f mx-2 h-px my-2 bg-red-400 rounded-full`}\n                ></div>\n                <div className={`w-f flex flex-col gap-4 items-start`}>\n                  {/* ////////// */}\n                  {isHoveredChapter ? (\n                    <div className={`flex justify-center items-center w-f `}>\n                      {`\\u00a0`}\n                      <div\n                        className={`absolute`}\n                        style={{\n                          width: 270,\n                          height: 0,\n                          borderBottom: '30px solid #fca5a5',\n                          borderLeft: '30px solid transparent',\n                          transform: 'translateX(10px) translateY(5px)',\n                        }}\n                      >\n                        <div\n                          className={`flex flex-nowrap items-center flex-row whitespace-nowrap`}\n                          style={{\n                            transform: 'translateX(-6px)',\n                          }}\n                        >\n                          {overall >= 245 ? (\n                            ` `\n                          ) : (\n                            <>\n                              needs {245 - overall} more {` `}\n                              {overall === 244 ? `char` : 'chars'}\n                            </>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className={` `}>\n                      <span className={`text-gray-800 `}>\n                        <InfoRounded\n                          className={`text-blue-500 mr-2`}\n                          style={{ width: 16, height: 16 }}\n                          onMouseEnter={() => setIsHoveredCurrent(true)}\n                          onMouseLeave={() => setIsHoveredCurrent(false)}\n                        />\n                        current: {cond1 && showType === `.` ? `.` : ``}\n                      </span>\n                      <span className={`text-gray-800`}>\n                        {!currentAccuracy\n                          ? `to be defined`\n                          : showType === `.`\n                          ? `${accuracyValue}`\n                          : currentAccuracy % 10 === 0\n                          ? `${currentAccuracy / 10}.0`\n                          : `${currentAccuracy / 10}`}\n                        {cond1 && showType === `%` ? `%` : ` `}\n                      </span>\n                    </div>\n                  )}\n                  {/* ///////////// */}\n                  {isHoveredCurrent ? (\n                    <div className={`flex justify-center items-center w-f `}>\n                      {`\\u00a0`}\n                      <div\n                        className={`absolute`}\n                        style={{\n                          width: 270,\n                          height: 0,\n                          borderTop: '30px solid #fca5a5',\n                          borderLeft: '30px solid transparent',\n                          transform: 'translateX(10px) translateY(-5px)',\n                        }}\n                      >\n                        <div style={{ transform: 'translateY(-30px)' }}>\n                          last 245 characters\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div>\n                      <span className={`text-gray-800 `}>\n                        <InfoRounded\n                          className={`text-blue-500 mr-2 opacity-${\n                            overall >= 245 && 0\n                          }`}\n                          style={{ width: 16, height: 16 }}\n                          onMouseEnter={() => {\n                            if (overall >= 245) return\n                            setIsHoveredChapter(true)\n                          }}\n                          onMouseLeave={() => setIsHoveredChapter(false)}\n                        />\n                        average: {cond2 && showType === `.` ? `.` : ``}\n                      </span>\n                      <span className={`text-gray-800`}>\n                        {!cond2\n                          ? `to be defined`\n                          : showType === `.`\n                          ? `${accuracyChapterValue}`\n                          : chapterAccuracy % 10 === 0\n                          ? `${chapterAccuracy / 10}.0`\n                          : `${chapterAccuracy / 10}`}\n                        {cond2 && showType === `%` ? `%` : ` `}\n                      </span>\n                    </div>\n                  )}\n                  {/* /////// */}\n                  <div className={`  w-f flex justify-center`}>\n                    <div className={`flex borde items-center justify-center `}>\n                      <div\n                        className={`cursor-pointer border-red-400 border-l border-t border-b  rounded-l-xl py-1   px-7 bg-red-${\n                          showType === `.` ? `400 text-gray-900` : 200\n                        }`}\n                        style={{ transition: `0.3s ease-in-out` }}\n                        onMouseDown={() => setShowType(`.`)}\n                      >\n                        .{(currentAccuracy && accuracyValue) || 967}\n                      </div>\n                      <div\n                        className={`cursor-pointer border-red-400 border-r rounded-r-xl border-t border-b py-1 px-6 bg-red-${\n                          showType === `%` ? `400 text-gray-900` : 200\n                        }`}\n                        style={{ transition: `0.3s ease-in-out` }}\n                        onMouseDown={() => setShowType(`%`)}\n                      >\n                        {(currentAccuracy &&\n                          (currentAccuracy % 10 === 0\n                            ? currentAccuracy / 10 + '.0'\n                            : currentAccuracy / 10)) ||\n                          96.7}\n                        %\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/strings/BOOK.string.button.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.cpm.widget.tsx",["613","614","615"],"import { InfoRounded } from '@material-ui/icons'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { FadeText } from '../../../../utils/FadeText'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\nimport { PingingCircles } from './BOOK.pingingCircles'\n\ninterface IProps {\n  CPM: number\n  avgCPM: number\n}\n\nexport const BOOKstatsCPMWidget: React.FC<IProps> = ({ CPM, avgCPM }) => {\n  const [isHovered, setIsHovered] = useState(false)\n  const [isHovered2, setIsHovered2] = useState(false)\n  const [isHoveredCurrent, setIsHoveredCurrent] = useState(false)\n  const [isHoveredChapter, setIsHoveredChapter] = useState(false)\n\n  const [showType, setShowType] = useState<`short` | `long`>('long')\n\n  // const accuracyValue =\n  //   currentAccuracy > 0\n  //     ? currentAccuracy === 1000\n  //       ? `999`\n  //       : `${currentAccuracy}`\n  //     : `000`\n\n  // const chapterAccuracy = Math.floor(((overall - fti.length) / overall) * 1000)\n\n  return (\n    <div className={`flex justify-center items-center`}>\n      <div\n        className={`z-10 flex flex-row borde border-black px-2 rounded-xl ${\n          (isHovered || isHovered2) && `bg-red-100`\n        }`}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        CPM |{`\\u00a0`}\n        {CPM === 0 ? (\n          <PingingCircles />\n        ) : (\n          <FadeText title={`${CPM}`} delay={[200, 600]} blink={CPM} />\n        )}\n        {`\\u00a0`}\n        {showType === `short` ? `` : `c/min`}\n      </div>\n      {isHovered || isHovered2 ? (\n        <div\n          className={`absolute bg-red-200 rounded-xl  flex  p-2 px-6 border border-red-500`}\n          style={{\n            width: 340,\n            height: 260,\n            boxShadow: `2px 1px 12px 4px rgba(0, 0, 0, 0.3)`,\n            transform: `translateY(-85px)`,\n            // fontSize: '17px',\n            opacity: 10,\n          }}\n          onMouseEnter={() => setIsHovered2(true)}\n          onMouseLeave={() => setIsHovered2(false)}\n        >\n          <div className={`flex justify-center  w-f`}>\n            {\n              <div className={`flex flex-col  items-center w-f`}>\n                <div\n                  className={`flex justify-center w-f text-gray-900 text-xl`}\n                >\n                  characters per minute\n                </div>\n                <div\n                  className={`w-f mx-2 h-px my-2 bg-red-400 rounded-full`}\n                ></div>\n                <div className={`w-f flex flex-col gap-4 items-start`}>\n                  {/* ////////// */}\n                  {isHoveredChapter ? (\n                    <div className={`flex justify-center items-center w-f `}>\n                      {`\\u00a0`}\n                      <div\n                        className={`absolute`}\n                        style={{\n                          width: 270,\n                          height: 0,\n                          borderBottom: '30px solid #fca5a5',\n                          borderLeft: '30px solid transparent',\n                          transform: 'translateX(10px) translateY(5px)',\n                        }}\n                      >\n                        <div\n                          className={`flex flex-nowrap items-center flex-row whitespace-nowrap`}\n                          style={{\n                            transform: 'translateX(0px)',\n                          }}\n                        >\n                          no pauses included\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className={` `}>\n                      <span className={`text-gray-800 `}>\n                        <InfoRounded\n                          className={`text-blue-500 mr-2`}\n                          style={{ width: 16, height: 16 }}\n                          onMouseEnter={() => setIsHoveredCurrent(true)}\n                          onMouseLeave={() => setIsHoveredCurrent(false)}\n                        />\n                        current: {` `}\n                      </span>\n                      <span className={`text-gray-800`}>\n                        {CPM === 0 ? (\n                          `to be defined`\n                        ) : (\n                          <>\n                            {CPM} {showType === 'long' && 'c/min'}\n                          </>\n                        )}\n                      </span>\n                    </div>\n                  )}\n                  {/* ///////////// */}\n                  {isHoveredCurrent ? (\n                    <div className={`flex justify-center items-center w-f `}>\n                      {`\\u00a0`}\n                      <div\n                        className={`absolute`}\n                        style={{\n                          width: 270,\n                          height: 0,\n                          borderTop: '30px solid #fca5a5',\n                          borderLeft: '30px solid transparent',\n                          transform: 'translateX(10px) translateY(-5px)',\n                        }}\n                      >\n                        <div\n                          style={{\n                            transform: 'translateY(-30px) translateX(16px)',\n                          }}\n                        >\n                          last 40 chars\n                        </div>\n                      </div>\n                    </div>\n                  ) : (\n                    <div>\n                      <span className={`text-gray-800 `}>\n                        <InfoRounded\n                          className={`text-blue-500 mr-2 `}\n                          style={{ width: 16, height: 16 }}\n                          onMouseEnter={() => {\n                            setIsHoveredChapter(true)\n                          }}\n                          onMouseLeave={() => setIsHoveredChapter(false)}\n                        />\n                        average: {` `}\n                      </span>\n                      <span className={`text-gray-800`}>\n                        {avgCPM === 0 ? (\n                          `to be defined`\n                        ) : (\n                          <>\n                            {avgCPM} {showType === 'long' && 'c/min'}\n                          </>\n                        )}\n                      </span>\n                    </div>\n                  )}\n                  {/* /////// */}\n                  <div className={`  w-f flex justify-center`}>\n                    <div className={`flex borde items-center justify-center `}>\n                      <div\n                        className={`cursor-pointer border-red-400 border-l border-t border-b  rounded-l-xl py-1   px-7 bg-red-${\n                          showType === `short` ? `400 text-gray-900` : 200\n                        }`}\n                        style={{ transition: `0.3s ease-in-out` }}\n                        onMouseDown={() => setShowType(`short`)}\n                      >\n                        {CPM || 167}\n                      </div>\n                      <div\n                        className={`cursor-pointer border-red-400 border-r rounded-r-xl border-t border-b py-1 px-6 bg-red-${\n                          showType === `long` ? `400 text-gray-900` : 200\n                        }`}\n                        style={{ transition: `0.3s ease-in-out` }}\n                        onMouseDown={() => setShowType(`long`)}\n                      >\n                        {CPM || 167} {` `} c/min\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            }\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/buttons/BOOK.functionalButtons.tsx",["616"],"import React, { useState, useEffect } from 'react'\nimport { BOOKarrowButton } from './BOOK.arrowButton'\nimport {\n  BOOKbuttonVisual,\n  BOOKbuttonVisualFunctional,\n} from './BOOK.buttonVisual'\nimport { BOOKcapsLockButton } from './BOOK.CapsLockButton'\n\ninterface IProps {\n  setAnimationBook(animation: boolean): void\n  animationBook: boolean\n  setHighlighter(turn: boolean): void\n  highlighter: boolean\n  punctuation: boolean\n  setPunctuation(value: boolean): void\n  caseSensitivity: boolean\n  setCaseSensetivity(value: boolean): void\n  caps: boolean\n  capsError: any\n  handleReset(): void\n}\n\nexport const BOOKfunctionalButtons: React.FC<IProps> = ({\n  setAnimationBook,\n  animationBook,\n  setHighlighter,\n  highlighter,\n  punctuation,\n  setPunctuation,\n  caseSensitivity,\n  setCaseSensetivity,\n  caps,\n  capsError,\n  handleReset,\n}) => {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    let id = setTimeout(() => {\n      setShow(true)\n    }, 700)\n    return () => clearTimeout(id)\n  }, [])\n\n  return (\n    <div\n      className=\"z-10 flex-grow flex flex-row justify-start  items-center borde border-red-900\"\n      style={{\n        transition: '0.5s ease',\n        // paddingTop: 88,\n        // transform: 'translateY(-37px)',\n      }}\n    >\n      {/* <div className={`z-20 flex justify-center items-center `}>\n        <BOOKarrowButton show={show} setShow={setShow} />\n      </div> */}\n\n      <div\n        className=\" flex-grow flex flex-row justify-start items-center gap-4  borde border-red-500 \"\n        style={{\n          transition: '0.7s ease 0.1s all',\n          zIndex: -1,\n          transform: `rotateY(${show ? 0 : -90}deg) translateX(${\n            show ? 0 : -500\n          }px)`,\n          // transform: `rotateY(${55}deg) translateX(${-1100}px)`,\n\n          // transform: `translateX(${show ? 0 : -1100}px)`,\n        }}\n      >\n        {/* <BOOKbuttonVisual\n          tag={'smooth'}\n          onClick={setAnimationBook}\n          active={animationBook}\n          disabled\n          hoverInfo={`currently not working (soon)`}\n        /> */}\n        <BOOKbuttonVisual\n          tag={'hightlighter'}\n          onClick={setHighlighter}\n          active={highlighter}\n          hoverInfo={`turns on/off hightlighter`}\n        />\n\n        {/* <div\n          className={`bg-red-200 mx-2`}\n          style={{ height: 50, width: 1 }}\n        ></div> */}\n\n        <BOOKbuttonVisual\n          tag={`punctuation`}\n          active={punctuation}\n          onClick={setPunctuation}\n          hoverInfo={`removes punctuation`}\n        />\n        <BOOKbuttonVisual\n          tag={`case`}\n          active={caseSensitivity}\n          onClick={setCaseSensetivity}\n          hoverInfo={`turns on/off case sensetivity`}\n        />\n        <div className={'flex-grow'}></div>\n\n        <BOOKbuttonVisualFunctional title={`reset`} onClick={handleReset} />\n        <div className={'px-2'}></div>\n\n        <BOOKcapsLockButton caps={caps} capsError={capsError} />\n      </div>\n      {/* <div className={`z-20 flex justify-center items-center `}>\n        <BOOKbas BAS={BAS} setBAS={setBAS} show={show} />\n      </div> */}\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.accuracyCounter.tsx",["617"],"import React, { useState } from 'react'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\n\ninterface IProps {\n  running: boolean\n  overall: number\n  fti: number[]\n  setAccuracy(acc: number): void\n}\n\nexport const BOOKaccuracyCounter: React.FC<IProps> = ({\n  running,\n  overall,\n  fti,\n  setAccuracy,\n}) => {\n  const handleSetAccuracy = () => {\n    let acc = 0\n    if (overall > 245) {\n      let failures = fti.filter((el) => el <= 245).length\n      acc = (overall - failures) / overall\n    } else {\n      let failures = fti.length\n      acc = (overall - failures) / overall\n    }\n    setAccuracy(Math.floor(acc * 1000))\n  }\n\n  useDidMountEffect(() => {\n    // if (overall === 0) {\n    //   setAccuracy(0)\n    // }\n    if (overall && overall % 17 === 0) {\n      handleSetAccuracy()\n    }\n  }, [overall])\n\n  useDidMountEffect(() => {\n    if (!running && overall > 0) {\n      handleSetAccuracy()\n    }\n  }, [running])\n\n  return <></>\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.stats.recorder.tsx",["618"],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.stats.CPMcounter.tsx",["619"],"import React, { useState, useRef, useEffect } from 'react'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\n\ninterface IProps {\n  running: boolean\n  overall: number\n  setCPM(CPM: number): void\n  setAvgCPM(avgCPM: number): void\n}\n\nexport const BOOKstatsCPMcounter: React.FC<IProps> = ({\n  overall,\n  setCPM,\n  running,\n  setAvgCPM,\n}) => {\n  const [intervals, setIntervals] = useState<\n    { i: [number, number]; date: [number, number] }[] | null\n  >(null)\n  const temp = useRef<null | [number, number]>(null)\n\n  // const [intervals]\n  useDidMountEffect(() => {\n    let avg = { time: 0, chars: 0 }\n    intervals?.forEach((el) => {\n      avg.time += el.date[1] - el.date[0]\n      avg.chars += el.i[1] - el.i[0]\n    })\n\n    let result = Math.round(60000 / (avg.time / avg.chars))\n    setAvgCPM(result)\n  }, [intervals])\n\n  const lastCPM = useRef(0)\n\n  useDidMountEffect(() => {\n    if (running) {\n      temp.current = [overall, Date.now()]\n    } else {\n      if (intervals) {\n        setIntervals((prev) => [\n          ...prev!,\n          {\n            i: [temp.current![0], overall],\n            date: [temp.current![1], Date.now()],\n          },\n        ])\n      } else {\n        setIntervals([\n          {\n            i: [temp.current![0], overall],\n            date: [temp.current![1], Date.now() - 2000],\n          },\n        ])\n      }\n      temp.current = null\n    }\n\n    return () => {}\n  }, [running])\n\n  const handleLastIntervalSPM = () => {\n    if (intervals) {\n      let iLast = intervals[intervals.length - 1]\n      let s = iLast.i[1] - iLast.i[0]\n      let t = iLast.date[1] - iLast.date[0]\n      // console.log(`s: ${s}, t: ${t}`)\n      // console.log(`SPM: ${Math.round((60000 / t) * s)}`)\n      let spm = Math.round((60000 / t) * s)\n      if (s < 10) {\n        return\n      }\n      if (s <= 17) {\n        if (lastCPM.current > 0) {\n          spm = (spm + lastCPM.current) * 0.5\n        } else {\n          return\n        }\n      }\n\n      if (spm < 0 && spm > 1000) {\n        return\n      }\n      lastCPM.current = spm\n      setCPM(Math.round(spm))\n    }\n  }\n\n  useDidMountEffect(() => {\n    handleLastIntervalSPM()\n  }, [intervals])\n\n  const handleNonStopSPM = () => {\n    if (!temp.current) return\n    if (intervals) {\n      setIntervals((prev) => [\n        ...prev!,\n        {\n          i: [temp.current![0], overall],\n          date: [temp.current![1], Date.now()],\n        },\n      ])\n    } else {\n      setIntervals([\n        {\n          i: [temp.current![0], overall],\n          date: [temp.current![1], Date.now()],\n        },\n      ])\n    }\n    temp.current = temp.current = [overall, Date.now()]\n  }\n\n  useDidMountEffect(() => {\n    if (overall && overall % 41 === 0) {\n      handleNonStopSPM()\n    }\n  }, [overall])\n\n  return <></>\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/Nav.link.tsx",["620"],"/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/PhotoMiniature.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/login/AUTH.login.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/authorization/signup/AUTH.signup.tsx",["621"],"import React, { useEffect, useState } from 'react'\nimport { ThemeProvider, createTheme } from '@mui/material'\nimport { TextField, Button, IconButton } from '@mui/material'\nimport {\n  PasswordState,\n  SignupPasswordColor,\n  UsernameState,\n} from '../auth.types'\nimport { SignupUsernameColor } from '../auth.types'\nimport { VisibilityOff, Visibility } from '@material-ui/icons'\nimport { useTypedSelector } from '../../../hooks/useTypedSelector'\n\nconst theme = createTheme({\n  typography: {\n    // fontFamily: ['Chilanka', 'cursive'].join(','),\n    fontFamily: 'courier new',\n  },\n})\n\ninterface IProps {\n  username: string\n  setUsername(username: string): void\n  password: string\n  setPassword(password: string): void\n  password2: string\n  setPassword2(password: string): void\n  usernameMessage: null | string\n  passwordMessage: null | string\n  password2Message: null | string\n  usernameState: UsernameState\n  passwordState: PasswordState\n  password2State: PasswordState\n  noErrors: boolean\n  handleSubmit(): void\n  isLoading: boolean\n}\n\nexport const AUTHlsignup: React.FC<IProps> = ({\n  username,\n  setUsername,\n  password,\n  setPassword,\n  password2,\n  setPassword2,\n  usernameMessage,\n  passwordMessage,\n  password2Message,\n  usernameState,\n  passwordState,\n  password2State,\n  noErrors,\n  handleSubmit,\n  isLoading,\n}) => {\n  const [usernameColor, setUsernameColor] =\n    useState<SignupUsernameColor>('info')\n\n  useEffect(() => {\n    if (usernameState === 'default') setUsernameColor('info')\n    else if (usernameState === 'success') setUsernameColor('success')\n    else if (usernameState === 'error') setUsernameColor('error')\n  }, [usernameState])\n\n  const [passwordColor, setPasswordColor] =\n    useState<SignupPasswordColor>('info')\n\n  useEffect(() => {\n    if (passwordState === 'default') setPasswordColor('info')\n    else if (passwordState === 'success') setPasswordColor('success')\n    else if (passwordState === 'warning') setPasswordColor('warning')\n    else if (passwordState === 'error') setPasswordColor('error')\n  }, [passwordState])\n\n  const [password2Color, setPassword2Color] =\n    useState<SignupUsernameColor>('info')\n\n  useEffect(() => {\n    if (password2State === 'default') setPassword2Color('info')\n    else if (password2State === 'success') setPassword2Color('success')\n    else if (password2State === 'error') setPassword2Color('error')\n  }, [password2State])\n\n  const [showPassword, setShowPassword] = useState(false)\n  const [showPassword2, setShowPassword2] = useState(false)\n\n  const handleShowPassword = () => {\n    setShowPassword((prev) => !prev)\n  }\n\n  const handleShowPassword2 = () => {\n    setShowPassword2((prev) => !prev)\n  }\n\n  useEffect(() => {\n    let id = setTimeout(() => setShowPassword(false), 5000)\n    return () => clearTimeout(id)\n  }, [showPassword])\n\n  useEffect(() => {\n    let id = setTimeout(() => setShowPassword2(false), 5000)\n    return () => clearTimeout(id)\n  }, [showPassword2])\n\n  ////////\n  const users = useTypedSelector((state) => state.auth.users)\n\n  return (\n    <div\n      className={`flex flex-col justify-evenly items-center gap-2 font-courier no-select box-border`}\n      style={{ width: '400px', height: '400px' }}\n    >\n      {/* {noErrors ? 'no errors' : 'error'} */}\n      <ThemeProvider theme={theme}>\n        <div style={{ width: '100%', marginBottom: '' }}>\n          <TextField\n            className={``}\n            style={{ width: '100%', fontFamily: 'courier' }}\n            id=\"outlined-basic\"\n            label=\"USERNAME\"\n            type=\"namef\"\n            variant=\"outlined\"\n            helperText={usernameMessage || ' '}\n            error={usernameState === 'error'}\n            value={username}\n            focused={!!username}\n            onChange={(e) => setUsername(e.target.value.replaceAll(' ', ''))}\n            color={usernameColor}\n          />\n        </div>\n        <div className={``} style={{ width: '100%' }}>\n          <TextField\n            style={{ width: '100%' }}\n            // id=\"outlined-basic\"\n            label=\"PASSWORD\"\n            type={showPassword ? 'text' : 'password'}\n            variant=\"outlined\"\n            helperText={passwordMessage || ' '}\n            error={passwordState === 'error'}\n            value={password}\n            onChange={(e) => setPassword(e.target.value.replaceAll(' ', ''))}\n            focused={!!password}\n            color={passwordColor}\n            // endAdornment={\n          />\n          <IconButton\n            style={{ position: 'absolute', transform: `translate(-50px, 8px)` }}\n            onMouseDown={handleShowPassword}\n            edge=\"end\"\n          >\n            {showPassword ? <Visibility /> : <VisibilityOff />}\n          </IconButton>\n        </div>\n        <div style={{ width: '100%' }}>\n          <TextField\n            style={{ width: '100%' }}\n            id=\"outlined-basic\"\n            label=\"REPEAT PASSWORD\"\n            type={showPassword2 ? 'text' : 'password'}\n            variant=\"outlined\"\n            helperText={password2Message || ' '}\n            error={password2State === 'error'}\n            value={password2}\n            onChange={(e) => setPassword2(e.target.value.replaceAll(' ', ''))}\n            focused={!!password2}\n            color={password2Color}\n          />\n          <IconButton\n            style={{ position: 'absolute', transform: `translate(-50px, 8px)` }}\n            onMouseDown={handleShowPassword2}\n            edge=\"end\"\n          >\n            {showPassword2 ? <Visibility /> : <VisibilityOff />}\n          </IconButton>\n        </div>\n        <div className={`flex flex-col gap-2`}>\n          <div className={`w-full flex justify-center`}>\n            <Button\n              style={{\n                fontSize: '1.3em',\n                borderRadius: 10,\n                padding: '7px 30px',\n              }}\n              variant={`contained`}\n              size={`large`}\n              color={noErrors ? 'info' : 'error'}\n              onMouseDown={handleSubmit}\n              disabled={isLoading}\n            >\n              SUBMIT\n            </Button>\n            {/* <Button onMouseDown={() => console.log(users)}>USERS</Button> */}\n          </div>\n        </div>\n      </ThemeProvider>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/profile/PROFILE.container.tsx",["622","623","624","625"],"import React, { useState, useEffect, useContext } from 'react'\nimport { Button, Hidden } from '@mui/material'\nimport { useAuthAction } from '../../hooks/useAction'\nimport { PhotoMiniature } from '../navbar/nav-components/PhotoMiniature'\nimport { PROFILEinfo } from './PROFILE.info'\nimport { setOpenOff } from '../../redux/auth/auth.actions'\nimport { PROFILEprofile } from './PROFILE.profile'\nimport { PROFILEstats } from './PROFILE.stats'\nimport { AuthContext } from '../../context/AuthContext'\n\nexport const PROFILEcontainer: React.FC = () => {\n  const { setOpenOff } = useAuthAction()\n  const auth = useContext(AuthContext)\n\n  const [statsSection, setStatsSection] = useState(true)\n  const [rotating, setRotating] = useState(0)\n\n  useEffect(() => {\n    if (!statsSection) {\n      setRotating(180)\n    } else {\n      setRotating(0)\n    }\n  }, [statsSection])\n\n  const [floating, setFloating] = useState(0)\n\n  useEffect(() => {\n    setFloating((prev) => prev + 170)\n    let id = setTimeout(() => setFloating((prev) => prev - 170), 300)\n\n    return () => {\n      setFloating(0)\n      clearTimeout(id)\n    }\n  }, [statsSection])\n\n  const WIDTH = 1150\n\n  const handleLogout = () => {\n    setOpenOff()\n    setTimeout(() => auth.logout(), 100)\n  }\n\n  return (\n    <div className={`fixed top-0 bottom-0 right-0 left-0 bg-purple-200`}>\n      <>\n        <button\n          className={`absolute  z-50 text-2xl border border-black rounded-full py-2 px-4 bg-purple-${\n            floating > 100 ? `300` : `400`\n          }\n          hover:bg-purple-500`}\n          style={{ top: 95, left: 900 + floating, transition: '0.7s ease' }}\n          onMouseDown={handleLogout}\n        >\n          <div className={`flex flex-row`}>\n            Log\n            <div\n              style={{\n                width: floating < 100 ? 10 : 0,\n                transition: '0.3s ease',\n              }}\n            ></div>\n            Out\n          </div>\n        </button>\n\n        <div\n          className={`z-20 fixed top-0 right-0 left-0 bottom-0 flex justify-center items-center bg-purple-200`}\n        >\n          <div\n            className={`z-20  items-center justify-center `}\n            style={{\n              // opacity: appear ? 1 : 0,\n              transition: '1s ease',\n            }}\n          >\n            <div\n              className={`absolute top-0 left-0 z-20 flex flex-row `}\n              style={{ width: WIDTH }}\n            >\n              <div\n                className={`flex justify-center items-center no-select ${\n                  !statsSection ? `cursor-pointer` : ``\n                }`}\n                style={{ fontSize: '2em', width: '50%', height: 65 }}\n                onMouseDown={() => setStatsSection(true)}\n              >\n                STATS\n              </div>\n              <div\n                className={`flex justify-center items-center no-select ${\n                  statsSection ? `cursor-pointer` : ``\n                }`}\n                style={{\n                  fontSize: '2em',\n                  width: '50%',\n                  height: 65,\n                }}\n                onMouseDown={() => setStatsSection(false)}\n              >\n                PROFILE\n              </div>\n            </div>\n            <div\n              className={`fixed top-0 right-0 left-0 h-16 flex flex-row justify-center `}\n              style={{\n                transform: `rotateY(${rotating}deg)`,\n                transition: '1s ease-out',\n                height: 65,\n              }}\n            >\n              <div\n                className={` flex items-center justify-center `}\n                style={{\n                  width: '50%',\n                  border: '2px solid transparent',\n                  transform: 'translate(-2px, -2px)',\n\n                  borderBottomRightRadius: 10,\n                }}\n              ></div>\n              <div\n                className={` flex items-center justify-center bg-purple-300`}\n                style={{\n                  width: '50%',\n                  border: '2px solid transparent',\n                  borderLeftColor: 'black',\n                  borderBottomColor: 'black',\n                  borderBottomLeftRadius: 10,\n                  borderTopRightRadius: 10,\n                }}\n              ></div>\n            </div>\n            <div\n              className={`flex flex-row overflow-y-hidden`}\n              style={{\n                width: WIDTH * 2,\n                height: 620,\n                marginTop: 55,\n                // overflow: 'hidden',\n                transform: statsSection\n                  ? `translateX(${WIDTH / 2}px)`\n                  : `translateX(${-WIDTH / 2}px)`,\n                transition: '0.75s ease-in-out',\n              }}\n            >\n              <PROFILEinfo statsSection={statsSection} />\n              <div\n                className={`flex justify-center items mt-32`}\n                style={{ width: WIDTH }}\n              >\n                <PROFILEstats />\n              </div>\n              <div\n                className={`flex justify-center items-center`}\n                style={{ width: WIDTH }}\n              >\n                <PROFILEprofile />\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/loading/getRandomLetter.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.limitSlider.tsx",["626"],"import React, { useEffect } from 'react'\nimport Box from '@mui/material/Box'\nimport Slider from '@mui/material/Slider'\n\n// function valuetext(value: number) {\n//   return `${value}°C`\n// }\n\ntype IProps = {\n  limit: number\n  setLimit(lim: number): void\n}\n\nexport const TAPshootingLimitSlider: React.FC<IProps> = ({\n  limit,\n  setLimit,\n}) => {\n  const handleChange = (event: Event, newValue: number | number[]) => {\n    setLimit(newValue as number)\n  }\n\n  return (\n    <Box sx={{ width: 200 }} className=\"flex flex-row transform-translateX-\">\n      <Slider\n        // valueLabelDisplay=\"auto\"\n        value={limit}\n        onChange={handleChange}\n        step={1}\n        marks\n        min={3}\n        max={25}\n      />\n    </Box>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.keyStyle.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.upper.tsx",["627"],"import React, { useState, useEffect } from 'react'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { ExpMessage, ExpMSG } from './LEVEL.container'\n\ninterface IProps {\n  handleSetExp(value: number): void\n  overall: number\n  fti: number[]\n  avgCPM: number\n  CPM: number\n  accuracy: number\n  setExpMSG(MSG: ExpMSG): void\n  errors: number\n  overallLocal: number\n}\nexport const LEVELupper: React.FC<IProps> = ({\n  handleSetExp,\n  overall,\n  fti,\n  avgCPM,\n  CPM,\n  accuracy,\n  setExpMSG,\n  errors,\n  overallLocal,\n}) => {\n  const successRow = fti.length > 0 ? fti[fti.length - 1] - 1 : overall\n\n  const [messages, setMessages] = useState<string[]>([])\n\n  const [block, setBlock] = useState(false)\n\n  useDidMountEffect(() => {\n    if (block) return\n\n    if (messages.length) {\n      let m = messages[0]\n\n      setExpMSG(m)\n      setMessages((prev) => {\n        prev.shift()\n        return prev\n      })\n      setBlock(true)\n    } else {\n      setExpMSG(null)\n    }\n  }, [block, messages])\n\n  useDidMountEffect(() => {\n    let id = setTimeout(() => {\n      setBlock(false)\n    }, 4000)\n\n    return () => clearTimeout(id)\n  }, [block])\n\n  //////////\n\n  const handleMessage = (msg: string) => {\n    setMessages((prev) => [...prev, msg])\n  }\n\n  let exp = handleSetExp\n  let m = handleMessage\n  let aap = ((overallLocal - errors) / overallLocal) * 100\n\n  useDidMountEffect(() => {\n    let o = overallLocal\n\n    if (o <= 500 && o % 87 === 0) {\n      exp((o / 87) * 10)\n      m(ExpMessage.Practice)\n    } else if (o >= 500 && o <= 1000 && o % 100 === 0) {\n      exp((o / 100) * 10)\n      m(ExpMessage.TaskAheadOfYou)\n    } else if (o > 1000 && o <= 2500 && o % 100 === 0) {\n      exp((o / 100) * 5 + 50)\n      m(ExpMessage.HardWorker)\n    } else if (o > 2500 && o % 100 === 0) {\n      exp((o / 100) * 5 + 50)\n      m(ExpMessage.MaraphonRunner)\n    }\n  }, [overall])\n\n  useDidMountEffect(() => {\n    /////        in a row\n    let sr = successRow\n\n    if (sr % 55 === 0 && successRow) {\n      exp(((sr / 10) * 50) / 55)\n      if (sr === 55) {\n        m(ExpMessage.Marksman)\n      } else if (sr === 110) {\n        m(ExpMessage.TheBullsEye)\n      } else if (sr >= 165) {\n        m(ExpMessage.AccurateAsStephCurry)\n      }\n    }\n  }, [overall])\n\n  useDidMountEffect(() => {\n    /////        in a row + cpm\n\n    if (successRow % 50 === 0 && successRow) {\n      if (avgCPM >= 250) {\n        exp((successRow / 10) * 5)\n        m(ExpMessage.FastAndPerfectRace)\n      } else if (avgCPM < 250 && avgCPM >= 215) {\n        exp((successRow / 10) * 3)\n        m(ExpMessage.FastRun)\n      }\n    }\n  }, [overall])\n\n  useDidMountEffect(() => {\n    /////// average CPM\n\n    if (overall > 100 && overall % 82 === 0) {\n      if (avgCPM >= 300) {\n        exp(30 + overall / 8.2)\n        m(ExpMessage.WayTooFast)\n      } else if (avgCPM < 300 && avgCPM >= 250) {\n        exp(30 + overall / 8.2)\n        m(ExpMessage.FastAndFurious)\n      } else if (avgCPM < 250 && avgCPM >= 225) {\n        exp(30 + overall / 8.2)\n        m(ExpMessage.FastFingers)\n      }\n    }\n  }, [overall])\n\n  useDidMountEffect(() => {\n    /////// average accuracy percent\n    let o = overallLocal\n\n    if (o >= 250 && o % 125 === 0) {\n      if (aap >= 98.75) {\n        exp(40 + (o / 125) * 10)\n        m(ExpMessage.TopSkills)\n      } else if (aap < 98.75 && aap >= 97.25) {\n        exp(25 + (o / 125) * 5)\n        m(ExpMessage.Excellence)\n      } else if (aap < 97.25 && aap >= 96.25) {\n        exp(15 + (o / 125) * 5)\n        m(ExpMessage.NotAverage)\n      }\n    }\n  }, [overall])\n\n  useDidMountEffect(() => {\n    /////////////////  accuracy && cpm\n    if (overall >= 150 && overall % 50 === 0) {\n      if (aap > 97.25 && aap < 98.5 && avgCPM >= 250 && avgCPM < 275) {\n        exp(30)\n        m(ExpMessage.Pianist)\n      } else if (aap >= 98.5 && avgCPM >= 275) {\n        exp(50)\n        m(ExpMessage.AbsoluteMaster)\n      }\n    }\n  }, [overall])\n\n  return (\n    <div className={`invisible flex gap-10 select-none`}>\n      {/* <div onMouseDown={() => handleMessage('first')}>+first</div>\n      <div onMouseDown={() => handleMessage('second')}>+second</div>\n      <div onMouseDown={() => handleMessage('third')}>+third</div>\n      <div onMouseDown={() => console.log(messages)}>console</div>\n      <br />\n      block: {block ? 1 : 0} */}\n      {/* <LEVELmessenger\n        messages={messages}\n        setExpMSG={setExpMSG}\n        setMessages={setMessages}\n      /> */}\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.intervalSlider.tsx",["628"],"import React, { useEffect } from 'react'\nimport Box from '@mui/material/Box'\nimport Slider from '@mui/material/Slider'\n\ntype IProps = {\n  intervalPush: number\n  setIntervalPush(int: number): void\n}\n\nexport const TAPshootingIntervalSlider: React.FC<IProps> = ({\n  intervalPush,\n  setIntervalPush,\n}) => {\n  const handleChange = (event: Event, newValue: number | number[]) => {\n    setIntervalPush(newValue as number)\n  }\n\n  return (\n    <Box sx={{ width: 200 }} className=\"flex flex-row transform-translateX-\">\n      <Slider\n        // valueLabelDisplay=\"auto\"\n        value={intervalPush}\n        onChange={handleChange}\n        step={100}\n        marks\n        min={200}\n        max={1600}\n      />\n    </Box>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.keyType.tsx",["629"],"import React, { useEffect, useState } from 'react'\nimport { KeyColor, KeyType } from '../TAP.shooting'\n\ninterface IProps {\n  keyColor: KeyColor\n  typeCells: {\n    numbers: boolean\n    letters: boolean\n    punctuation: boolean\n  }\n  handleSetTypeCells(type: 1 | 2 | 3): void\n}\n\nexport const TAPshootingKeyType: React.FC<IProps> = ({\n  keyColor,\n  typeCells,\n  handleSetTypeCells,\n}) => {\n  const [open, setOpen] = useState(false)\n  const [rotating, setRotating] = useState(0)\n\n  useEffect(() => {\n    open ? setRotating((prev) => prev + 360) : setRotating((prev) => prev - 360)\n  }, [open])\n\n  const handleClickColor = (event: React.MouseEvent, type: 1 | 2 | 3): void => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    if (type !== 1) {\n      handleSetTypeCells(type)\n    }\n    // setOpen(false)\n    setOpen((prev) => !prev)\n  }\n\n  const handleOpen = (event: React.MouseEvent): void => {\n    // event.stopPropagation()\n    // setOpen(true)\n    setOpen((prev) => !prev)\n  }\n\n  // const getElement = (n: number) => {\n  //   return .map((el) => (\n  //     <div\n  //       className={`bg-${el}-500 rounded-full cursor-pointer`}\n  //       style={{\n  //         width: 50,\n  //         height: 50,\n  //         border: '1px solid grey',\n  //       }}\n  //       onMouseDown={(e) => handleClickColor(e, el)}\n  //     ></div>\n  //   ))[n]\n  // }\n\n  return (\n    <div\n      className={'flex justify-center items-center'}\n      style={{\n        height: 20,\n        transform: `translateY(${open ? 30 : 0}px) translateX(${\n          open ? 10 : 0\n        }px)`,\n        transition: '0.3s ease',\n      }}\n    >\n      <div className=\"flex flex-col justify-center align-center  border-black\">\n        <div className=\"flex flex-row justify-center align-start gap-2\">\n          <div\n            className={`\n               bg-${open ? ' bg-gray-200 ' : keyColor}-500 opacity-${\n              open ? 100 : 100\n            }  rounded-full flex flex-col justify-center items-center gap-3 font-courier uppercase cursor-pointer text-4xl`}\n            style={{\n              overflow: 'hidden',\n              width: open ? 175 : 50,\n              height: open ? 175 : 50,\n\n              border: '1px solid #505050',\n              // opacity: open ? 0 : ,\n              // fontSize: '2.1em',\n              transition: '0.3s ease',\n              transform: `rotate(${-rotating}deg) `,\n            }}\n            onMouseDown={handleOpen}\n          >\n            {!open ? (\n              'N'\n            ) : (\n              <div\n                className={`flex flex-col justify-center items-center gap-4 p-10`}\n                style={{\n                  marginTop: 10,\n                }}\n                onMouseDown={() => setOpen((prev) => !prev)}\n              >\n                <div\n                  className={`absolute w-f h-f`}\n                  onMouseDown={() => setOpen((prev) => !prev)}\n                ></div>\n                <div className={`z-10 flex items-center gap-6`}>\n                  <div\n                    className={`bg-${keyColor}-${\n                      typeCells.numbers ? 500 : 100\n                    } rounded-full cursor-pointer flex items-center justify-center text-3xl`}\n                    style={{\n                      width: 50,\n                      height: 50,\n                      border: '1px solid grey',\n                    }}\n                    onMouseDown={(e) => handleClickColor(e, 1)}\n                  >\n                    N\n                  </div>\n                  <div\n                    className={`bg-${keyColor}-${\n                      typeCells.letters ? 500 : 100\n                    } rounded-full cursor-pointer flex items-center justify-center text-3xl`}\n                    style={{\n                      width: 50,\n                      height: 50,\n                      border: '1px solid grey',\n                    }}\n                    onMouseDown={(e) => handleClickColor(e, 2)}\n                  >\n                    1\n                  </div>\n                </div>\n\n                <div\n                  className={`z-10 flex flex-row justify-center items-center  `}\n                >\n                  <div\n                    className={`bg-${keyColor}-${\n                      typeCells.punctuation ? 500 : 100\n                    } rounded-full cursor-pointer flex items-center justify-center text-3xl`}\n                    style={{\n                      width: 50,\n                      height: 50,\n                      border: '1px solid grey',\n                    }}\n                    onMouseDown={(e) => handleClickColor(e, 3)}\n                  >\n                    $\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.level.tsx",["630"],"import React, { useState } from 'react'\nimport { ExpMSG } from './LEVEL.container'\nimport { LEVELicon } from './LEVEL.icon'\nimport { LEVELinfo } from './LEVEL.info'\n\ninterface IProps {\n  exp: [number, number]\n  level: number\n  expMSG: ExpMSG\n  setHide(hide: boolean): void\n}\n\nexport const LEVELlevel: React.FC<IProps> = ({\n  exp,\n  level,\n  expMSG,\n  setHide,\n}) => {\n  const bgColor = (): [string, string] => {\n    switch (level) {\n      case 1:\n        return ['bg-yellow-300', 'bg-yellow-50']\n      case 2:\n        return ['bg-red-200', 'bg-red-50']\n      case 3:\n        return ['bg-red-300', 'bg-red-50']\n      case 4:\n        return ['bg-rose-400', 'bg-rose-50']\n      case 5:\n        return ['bg-rose-500', 'bg-rose-50']\n      case 6:\n        return ['bg-rose-600', 'bg-rose-50']\n      case 7:\n        return ['bg-yellow-400', 'bg-yellow-50']\n      case 8:\n        return ['bg-emerald-400', 'bg-emerald-50']\n      case 9:\n        return ['bg-teal-300', 'bg-teal-50']\n      case 10:\n        return ['bg-cyan-200', 'bg-cyan-200']\n      default:\n        return ['', '']\n    }\n  }\n\n  return (\n    <div\n      className={`flex flex-row w-1000 gap-4 mx-auto`}\n      style={{ width: '1028px', transform: `translateX(-10px)` }}\n    >\n      <LEVELicon level={level} expMSG={expMSG} />\n      <div className={`flex flex-row w-f items-center`}>\n        <div\n          className={` w-f border border-gray-900 justify-center rounded-xl flex items-center overflow-hidden \n            ${bgColor()[1]} \n          `}\n          style={{ height: 40 }}\n        >\n          <div className={`absolute`}>\n            {expMSG ? (\n              <div>{expMSG}</div>\n            ) : (\n              <>{level === 10 ? <> </> : `${exp[0]} / ${exp[1]}`}</>\n            )}\n          </div>\n          <div\n            className={` h-f flex items-center `}\n            style={{\n              // height: 40,\n              width: `${(100 / exp[1]) * exp[0]}%`,\n              // transition: `1s ease-out`,\n              transition: `0.03s ease-out`,\n            }}\n          >\n            <div\n              className={`w-f h-f\n               ${bgColor()[0]} `}\n              style={{\n                height: 45,\n                transition: '0.1s ease-in-out',\n              }}\n            ></div>\n          </div>\n          <div className={`flex-grow`}></div>\n        </div>\n      </div>{' '}\n      <LEVELinfo setHide={setHide} />\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/profile/PROFILE.info.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/profile/PROFILE.profile.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/tap/shooting/TAP.shooting.frame.tsx",["631","632"],"import { fontWeight } from '@mui/system'\nimport React, { useState, useEffect, useRef } from 'react'\nimport { useDidMountEffect } from '../../../utils/useDidMountEffect'\n\ninterface IProps {\n  frameColor: string\n  cellsLength: number\n  handleStart(): void\n  started: boolean\n  handleRunning(): void\n  isThereCells: boolean\n  newGame: boolean\n}\n\nexport const TAPshootingFrame: React.FC<IProps> = ({\n  frameColor,\n  cellsLength,\n  handleStart,\n  started,\n  handleRunning,\n  isThereCells,\n  newGame,\n}) => {\n  const [dimensions, setDimensions] = useState({\n    width: 766,\n    height: 620,\n    clipPath1: `polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%,${``} 1% 50%, 25.5% 98.75%,${``} 74.5% 98.75%, 99% 50%, 74.5% 1.15%, 25.5% 1.15%,${``} 1% 50%, 0% 50%)`,\n    clipPath2: `polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)`,\n  })\n\n  useEffect(() => {\n    if (cellsLength === 19 || cellsLength === 7) {\n      return setDimensions({\n        width: 766,\n        height: 620,\n        clipPath1: `polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%,${``} 1% 50%, 25.5% 98.75%,${``} 74.5% 98.75%, 99% 50%, 74.5% 1.15%, 25.5% 1.15%,${``} 1% 50%, 0% 50%)`,\n        clipPath2: `polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%)`,\n      })\n    } else {\n      return setDimensions({\n        width: 1110,\n        height: 620,\n        clipPath1: `polygon(18% 0%, 82% 0%, 100% 50%, 82% 100%, 18% 100%, 0% 50%,${``} 1% 50%, 18.5% 98.5%,${``} 81.5% 98.5%, 99% 50%, 81.5% 1.5%, 18.5% 1.5%,${``} 1% 50%, 0% 50%)`,\n        clipPath2: `polygon(18% 0%, 82% 0%, 100% 50%, 82% 100%, 18% 100%, 0% 50%`,\n      })\n    }\n  }, [cellsLength])\n\n  const [starter, setStarter] = useState(0)\n  const [stopper, setStopper] = useState(0)\n  const [bluring, setBluring] = useState(true)\n\n  const [TY, setTY] = useState(0)\n\n  useDidMountEffect(() => {\n    started ? setStarter((prev) => prev + 1) : setStopper((prev) => prev + 1)\n  }, [started])\n\n  useDidMountEffect(() => {\n    setTY((prev) => prev - 1200)\n    let id1 = setTimeout(() => setTY((prev) => prev - 600), 1000)\n    let id2 = setTimeout(() => setTY((prev) => prev - 600), 2000)\n    let id3 = setTimeout(() => setTY((prev) => prev - 600), 3000)\n    let id4 = setTimeout(() => setTY((prev) => prev - 600), 4000)\n    let id5 = setTimeout(() => handleRunning(), 3200)\n    let id6 = setTimeout(() => setBluring(false), 3100)\n    let id7 = setTimeout(() => setTY(0), 3500)\n\n    return () => {\n      clearTimeout(id1)\n      clearTimeout(id2)\n      clearTimeout(id3)\n      clearTimeout(id4)\n      clearTimeout(id5)\n      clearTimeout(id6)\n      clearTimeout(id7)\n    }\n  }, [starter])\n\n  useDidMountEffect(() => {\n    handleRunning()\n    setBluring(true)\n    setTimeout(() => setTY(0))\n  }, [stopper])\n\n  useEffect(() => {}, [started])\n\n  return (\n    <>\n      {' '}\n      <div\n        className=\"visible absolute flex justify-center items-center overflow-y-hidden\"\n        style={{\n          backdropFilter: bluring && isThereCells ? 'blur(15px)' : '',\n          width: dimensions.width,\n          height: dimensions.height,\n          clipPath: dimensions.clipPath2,\n          transition: '0.25s ease',\n        }}\n      >\n        <div\n          //inside\n          className={`flex flex-row justify-center items-center  ${\n            !bluring && `hidden`\n          }`}\n          style={{\n            transition: '0.3s ease',\n            transform: 'rotateZ(0deg) translateX(0px)',\n          }}\n        >\n          <div\n            className=\"absolute flex flex-row justify-center items-center gap-24\"\n            style={{\n              transition: '0.3s ease',\n              transform: `rotateZ(0deg) translateY(${TY}px)`,\n            }}\n          >\n            {newGame ? (\n              <div\n                onMouseDown={handleStart}\n                className={`flex flex-col items-center justify-center font-courier cursor-pointer text-sky-600 `}\n                style={{\n                  width: '700px',\n                  fontSize: '4em',\n                  fontWeight: 700,\n                  transition: '0.1s ease-in',\n                }}\n              >\n                <div className=\"\"> PRESS SPACE BAR</div>\n\n                <div className=\"\"> OR</div>\n\n                <div className=\"\"> TAP TO START</div>\n              </div>\n            ) : (\n              <>\n                <div\n                  className=\"rounded-3xl bg-sky-400 border-2 border-sky-600\"\n                  style={{ width: 100, height: 400, transition: '0.25s ease' }}\n                ></div>\n                <div\n                  className=\"rounded-3xl bg-sky-400 border-2 border-sky-600\"\n                  style={{ width: 100, height: 400, transition: '0.25s ease' }}\n                ></div>\n              </>\n            )}\n          </div>\n\n          <div\n            className=\"absolute flex flex-row justify-center items-center overflow-visible\"\n            style={{\n              transition: '0.3s ease',\n              width: 500,\n              height: 500,\n              transform: `translateY(${TY + 1200}px)`,\n            }}\n            //33333333\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              xmlSpace=\"preserve\"\n            >\n              <path\n                d=\"M0 0h24v24H0V0z\"\n                style={{\n                  fill: 'none',\n                }}\n              />\n              <path\n                d=\"M18 2v1.4l-5.2 6.2c3.6.4 6.1 3.7 5.6 7.3-.4 3.6-3.7 6.1-7.3 5.6-2.7-.3-4.8-2.3-5.5-4.9l1.9-.5c.6 2.4 3.1 3.9 5.5 3.3 2-.5 3.4-2.3 3.4-4.4 0-2.5-2-4.5-4.5-4.5-.7 0-1.4.2-2 .5l-.2.1-.7-1.2L14.9 4H6.5V2H18z\"\n                style={{\n                  fill: 'rgb(56 189 248)',\n                  stroke: 'rgb(2 132 199)',\n\n                  strokeWidth: 0.25,\n                  strokeMiterlimit: 10,\n                }}\n              />\n            </svg>\n          </div>\n          {\n            <div\n              className=\"absolute flex flex-row justify-center items-center overflow-visible\"\n              style={{\n                transition: '0.3s ease',\n                width: 500,\n                height: 500,\n                transform: `translateY(${TY + 1800}px)`,\n              }}\n              ////2222\n            >\n              <svg\n                id=\"\\u0421\\u043B\\u043E\\u0439_1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                x={0}\n                y={0}\n                viewBox=\"0 0 24 24\"\n                xmlSpace=\"preserve\"\n              >\n                <style>{'.st0{fill:none}'}</style>\n                <path className=\"st0\" d=\"M0 0h24v24H0V0z\" />\n                <path\n                  d=\"M16 7.5c0-2.2-1.8-4-4-4s-4 1.8-4 4H6c0-3.3 2.7-6 6-6s6 2.7 6 6c0 1.4-.5 2.7-1.3 3.8L9.3 20H18v2H6v-1.1l9.1-10.8c.6-.7.9-1.7.9-2.6z\"\n                  style={{\n                    fill: 'rgb(56 189 248)',\n\n                    stroke: 'rgb(2 132 199)',\n\n                    strokeWidth: 0.25,\n                    strokeMiterlimit: 10,\n                  }}\n                />\n                <path className=\"st0\" d=\"M27.8 15.3h24v24h-24v-24z\" />\n              </svg>\n            </div>\n          }\n          {\n            <div\n              className=\"absolute flex flex-row justify-center items-center overflow-visible\"\n              style={{\n                transition: '0.3s ease',\n                width: 500,\n                height: 500,\n                transform: `translateY(${TY + 2400}px)`,\n              }}\n\n              ///1111111\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 24 24\"\n                xmlSpace=\"preserve\"\n              >\n                <path\n                  d=\"M0 0h24v24H0V0z\"\n                  style={{\n                    fill: 'none',\n                  }}\n                />\n                <path\n                  d=\"M14 1.5V22h-2V3.7L7.5 4.9V2.8l5-1.3H14z\"\n                  style={{\n                    fill: 'rgb(56 189 248)',\n\n                    stroke: 'rgb(2 132 199)',\n                    strokeWidth: 0.25,\n                    strokeMiterlimit: 10,\n                  }}\n                />\n              </svg>\n            </div>\n          }\n        </div>\n      </div>\n      <div\n        className={`absolute ${frameColor}`}\n        style={{\n          transition: '0.3s ease-out',\n          width: dimensions.width,\n          height: dimensions.height,\n          clipPath: dimensions.clipPath1,\n        }}\n      ></div>\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/profile/PROFILE.stats.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/buttons/BOOK.CapsLockButton.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/buttons/BOOK.buttonVisual.tsx",["633","634","635"],"import { Info, InfoRounded, WarningRounded } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\n\ninterface IProps {\n  tag: string\n  onClick?(active: boolean): void\n  active: boolean\n  hoverInfo?: string\n  disabled?: boolean\n}\n\nexport const BOOKbuttonVisual: React.FC<IProps> = ({\n  tag,\n  onClick = () => {},\n  active,\n  hoverInfo = 'just a text to test if its working',\n  disabled = false,\n}) => {\n  const [isHovered, setIsHovered] = useState(false)\n\n  const [info, setInfo] = useState(false)\n\n  useDidMountEffect(() => {\n    let id = setTimeout(\n      () => {\n        isHovered ? setInfo(false) : setInfo(false)\n      },\n      isHovered ? 700 : 10\n    )\n\n    return () => clearTimeout(id)\n  }, [isHovered])\n\n  return (\n    <div\n      className={` flex items-center justify-center overflow-hidden rounded-xl`}\n      style={{\n        transform: `translateY(${isHovered ? -3 : 0}px)`,\n        transition: '0.15s ease',\n      }}\n    >\n      <button\n        tabIndex={-1}\n        // className={`z-10  p-3 rounded-full justify-self-end outline-none text-${\n        //   disabled ? 'gray-500' : active ? 'gray-800' : 'gray-600'\n        // } ${disabled ? 'cursor-not-allowed' : ''}`}\n\n        className={`relative overflow-hidden z-10 px-4 py-2 rounded-xl  justify-self-end outline-none text-${\n          disabled ? 'gray-500' : active ? 'gray-800' : 'gray-600'\n        } ${disabled ? 'cursor-not-allowed' : ''}`}\n        style={{\n          backgroundColor: disabled\n            ? 'lightgray'\n            : active\n            ? 'lightcoral'\n            : 'lightgrey',\n          transition: '1s ease-in-out',\n        }}\n        onMouseDown={(e) => {\n          if (disabled) return\n          e.preventDefault()\n          onClick(!active)\n          setIsHovered(false)\n        }}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        {tag}\n        <div\n          className={`absolute -z-10 `}\n          style={{\n            transform: `translate(${!isHovered ? `-250` : '-20'}px, -100px)`,\n            transition: '0.3s ease-in-out',\n          }}\n        >\n          <div\n            className={`bg-red-200`}\n            style={{ width: 220, height: 150, transform: `rotate(20deg)` }}\n          ></div>\n        </div>\n      </button>\n      <button\n        className={`absolute  px-3 py-1 rounded-xl  animate-pulse `}\n        disabled\n        style={{\n          boxShadow: active && !disabled ? '0 0 5px 4px lightcoral' : '',\n          transition: '0.5s ease',\n          color: 'transparent',\n        }}\n      >\n        {tag}\n      </button>\n\n      <div\n        className={`${\n          info ? 'visible' : 'invisible'\n        } transition-150 absolute z-20 border border-gray-500 text-center text-sm \n        px-2 py-4 rounded-lg\n         bg-${\n           !disabled ? 'blue-200' : 'yellow-300'\n         } flex justify-center items-end opacity-60`}\n        style={{\n          width: 200,\n          transform: 'translateY(-70px)',\n        }}\n      >\n        <div className={'z-30'}>{hoverInfo}</div>\n        <div\n          className={`z-20 absolute border-b border-r border-gray-500 p  bg-${\n            !disabled ? 'blue-200' : 'yellow-300'\n          }`}\n          style={{\n            transform: 'translate(0px, 29px) rotateZ(45deg)',\n            width: 25,\n            height: 25,\n          }}\n        >\n          {/* <div style={{ transform: `rotate(-45deg) translate(0, -2px)` }}>\n            {disabled ? <WarningRounded /> : <InfoRounded />}\n          </div> */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface IProps2 {\n  title: string\n  onClick(): void\n}\n\nexport const BOOKbuttonVisualFunctional: React.FC<IProps2> = ({\n  title,\n  onClick,\n}) => {\n  const [hover, setHover] = useState(false)\n  return (\n    <div\n      className={`overflow-hidden rounded-xl`}\n      style={{\n        transform: `translateY(${hover ? -3 : 0}px)`,\n        transition: '0.15s ease',\n      }}\n    >\n      <div\n        className={`relative overflow-hidden rounded-xl px-4 py-2  border border-red-400 active:bg-red-100 cursor-pointer `}\n        style={{\n          transition: '0.25s ease-in-out',\n        }}\n        onMouseDown={onClick}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        {title}\n        <div\n          className={`absolute -z-10 `}\n          style={{\n            transform: `translate(${!hover ? `-245` : '-120'}px, -100px)`,\n            transition: '0.3s ease-in-out',\n          }}\n        >\n          <div\n            className={`bg-red-400`}\n            style={{ width: 220, height: 150, transform: `rotate(20deg)` }}\n          ></div>\n        </div>\n        <div\n          className={`-z-20 absolute bg-red-200`}\n          style={{\n            width: 200,\n            height: 100,\n            transform: `translate(-100px, -50px)`,\n          }}\n        ></div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.pingingCircles.tsx",["636","637"],"import React, { useState, useEffect, useRef } from 'react'\n\ninterface IProps {\n  // amount?: number\n}\n\nexport const PingingCircles: React.FC<IProps> = ({}) => {\n  const amount = 3\n  const [refresher, setRefresher] = useState(false)\n  const ref1 = useRef(2)\n  const ref2 = useRef(4)\n  const ref3 = useRef(6)\n\n  const refs = [ref1.current, ref2.current, ref3.current]\n\n  useEffect(() => {\n    let id = setInterval(() => {\n      ref1.current < 6 ? (ref1.current = ref1.current + 2) : (ref1.current = 2)\n      ref2.current < 6 ? (ref2.current = ref2.current + 2) : (ref2.current = 2)\n      ref3.current < 6 ? (ref3.current = ref3.current + 2) : (ref3.current = 2)\n      setRefresher((prev) => !prev)\n    }, 400)\n\n    return () => clearInterval(id)\n  }, [])\n\n  const circle = (num: number) => (\n    <div className={`flex justify-center items-center`}>\n      {'\\u00a0'}\n      <div\n        className={`absolute rounded-full bg-red-${refs[num] * 100}`}\n        // refs[num] * 100\n        style={{\n          width: 8,\n          height: 8,\n          transition: '0.5s ease-in-out',\n        }}\n      ></div>\n    </div>\n  )\n\n  const circles = Array.from({ length: amount }, (_, i) => i)\n    .reverse()\n    .map((el) => <>{circle(el)}</>)\n\n  return <div className={`flex flex-row`}>{circles}</div>\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.icon.tsx",["638"],"import React, { useEffect, useState } from 'react'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\nimport { ExpMessage, ExpMSG } from './LEVEL.container'\n\nimport FastAndFurious from '../../static/speedometer.png'\nimport Lightning from '../../static/lightning.png'\nimport Rocket from '../../static/rocket.png'\nimport Marksman from '../../static/sniper.png'\nimport BullsEye from '../../static/target.png'\nimport Steph from '../../static/steph.png'\nimport Run from '../../static/run.png'\nimport Run2 from '../../static/run2.png'\nimport Maraphon from '../../static/finish.png'\nimport Award from '../../static/award.png'\nimport Cup from '../../static/cup.png'\nimport Grow from '../../static/grow.png'\nimport Mountain from '../../static/mountain.png'\nimport Excellence from '../../static/excellence.png'\nimport Star from '../../static/star.png'\nimport Dumbbell from '../../static/dumbbell.png'\nimport Piano from '../../static/piano.png'\n\ninterface IProps {\n  level: number\n  expMSG: ExpMSG\n}\n\nexport const LEVELicon: React.FC<IProps> = ({ level, expMSG }) => {\n  const [lvl, setLvl] = useState(level)\n\n  const bgColor = (): [string, string] => {\n    switch (lvl) {\n      case 2:\n        return ['bg-red-200', 'shadow-red-400']\n      case 3:\n        return ['bg-red-300', 'shadow-red-500']\n      case 4:\n        return ['bg-rose-400', 'shadow-rose-600']\n      case 5:\n        return ['bg-rose-500', 'shadow-rose-700']\n      case 6:\n        return ['bg-rose-600', 'shadow-rose-800']\n      case 7:\n        return ['bg-yellow-400', 'shadow-yellow-600']\n      case 8:\n        return ['bg-emerald-400', 'shadow-emerald-600']\n      case 9:\n        return ['bg-teal-300', 'shadow-teal-500']\n      case 10:\n        return ['bg-cyan-300', 'shadow-cyan-500']\n      default:\n        return ['bg-red-100', 'shadow-red-300']\n    }\n  }\n\n  useDidMountEffect(() => {\n    let id0 = setTimeout(() => setShowLvlForced(true), 2000)\n    let id1 = setTimeout(() => setLvl(level), 2250)\n    let id2 = setTimeout(() => setShowLvlForced(false), 6000)\n\n    return () => {\n      clearTimeout(id0)\n      clearTimeout(id1)\n      clearTimeout(id2)\n    }\n  }, [level])\n\n  const [tick, setTick] = useState(false)\n\n  useEffect(() => {\n    let id = setInterval(() => setTick((prev) => !prev), 2000)\n\n    return () => clearInterval(id)\n  }, [])\n\n  const levelNumber = (num: number) => (\n    <div\n      className={`z-10 flex items-center justify-center`}\n      style={{\n        height: 40,\n        width: 40,\n        transition: '0.3s ease-in-out',\n      }}\n    >\n      {num < 10 ? (\n        num\n      ) : (\n        <>\n          <span style={{ marginLeft: 0 }}>1</span>\n          <span style={{ marginLeft: -4 }}>0</span>\n        </>\n      )}\n    </div>\n  )\n\n  const elements = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((el) => levelNumber(el))\n\n  const [showLvlForced, setShowLvlForced] = useState(false)\n\n  const getAch = () => {\n    switch (expMSG) {\n      case ExpMessage.WayTooFast:\n        return Rocket\n      case ExpMessage.FastAndFurious:\n        return FastAndFurious\n      case ExpMessage.FastFingers:\n        return Lightning\n      case ExpMessage.Marksman:\n        return Marksman\n      case ExpMessage.TheBullsEye:\n        return BullsEye\n      case ExpMessage.AccurateAsStephCurry:\n        return Steph\n      case ExpMessage.FastAndPerfectRace:\n        return Run\n      case ExpMessage.FastRun:\n        return Run2\n      case ExpMessage.HardWorker:\n        return Dumbbell\n      case ExpMessage.MaraphonRunner:\n        return Maraphon\n      case ExpMessage.TopSkills:\n        return Award\n      case ExpMessage.Pianist:\n        return Piano\n      case ExpMessage.AbsoluteMaster:\n        return Cup\n      case ExpMessage.Practice:\n        return Grow\n      case ExpMessage.TaskAheadOfYou:\n        return Mountain\n      case ExpMessage.Excellence:\n        return Excellence\n      case ExpMessage.NotAverage:\n        return Star\n      default:\n        return ``\n    }\n  }\n\n  return (\n    <div\n      className={`z-20 rounded-xl border border-gray-800 font-courier text-3xl flex items-center justify-center ${\n        bgColor()[0]\n      }   ${tick ? 'shadow-3xl' : `shadow-sm`} ${bgColor()[1]} \n      overflow-hidden\n        `}\n      style={{\n        height: 40,\n        width: 42,\n        transition: '2s ease-in-out',\n        // boxShadow: `0px 1px 10px 5px rgba(100, 100, 100, ${tick ? 1 : 0})`,\n      }}\n    >\n      {!showLvlForced && expMSG && (\n        <div\n          className={`z-20 absolute flex items-center justify-center rounded-xl flex-col  borde border-gray-800 `}\n          style={{\n            height: 40,\n            width: 40,\n            padding: 6,\n          }}\n        >\n          <img src={getAch()} />\n        </div>\n      )}\n\n      <div\n        className={`flex items-center justify-start  flex-col `}\n        style={{\n          height: 40,\n          width: 40,\n          marginTop: 2,\n          transition: '1s ease-in-out', /// !!!!\n          transform: `translateY(-${40 * lvl - 40}px)`,\n        }}\n      >\n        <div className={`flex items-center justify-start flex-col flex-wrap `}>\n          {elements}\n        </div>\n        <div\n          className={`absolute ${bgColor()[0]} z-10 ${\n            // `opacity-100`\n            !showLvlForced && expMSG ? 'opacity-100' : 'opacity-0'\n          } `}\n          style={{ width: 40, height: 400 }}\n        ></div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/NAV.link.tsx",["639"],"import React, { useState } from 'react'\nimport { Chapters } from '../../../types/nav'\n\ninterface IProps {\n  link: Chapters\n  chapter: Chapters\n  ThemeColor: string\n  ShadowColor: string\n  onClick(link: Chapters): void\n}\n\nexport const NAVlink: React.FC<IProps> = ({\n  link,\n  chapter,\n  ThemeColor,\n  ShadowColor,\n  onClick,\n}) => {\n  const [hover, setHover] = useState(false)\n  const [isClicked, setIsClicked] = useState(false)\n\n  return (\n    <div\n      className={`flex items-center justify-center py-1  cursor-pointer`}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n      onClick={() => {\n        setIsClicked(true)\n        onClick(link as Chapters)\n        setTimeout(() => setIsClicked(false), 1500)\n      }}\n    >\n      <a\n        className={`outline-none text:xl md:text-3xl  select-none lowercase\n         flex-row rounded-md transition-all  ${isClicked && 'animate-bounce'}\n         ${\n           hover && 'animate-pusle'\n         }  text-gray-800 hover:text-black cursor-pointer `}\n        style={{\n          transform: `translateY(${hover ? -6 : 0}px)`,\n        }}\n      >\n        <div>{link}</div>\n      </a>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/navbar/nav-components/NAV.logo.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.info.tsx",["640"],"import React, { useEffect, useState } from 'react'\nimport FastAndFurious from '../../static/speedometer.png'\nimport Lightning from '../../static/lightning.png'\nimport Rocket from '../../static/rocket.png'\nimport Marksman from '../../static/sniper.png'\nimport BullsEye from '../../static/target.png'\nimport Steph from '../../static/steph.png'\nimport Run from '../../static/run.png'\nimport Run2 from '../../static/run2.png'\nimport Maraphon from '../../static/finish.png'\nimport Award from '../../static/award.png'\nimport Cup from '../../static/cup.png'\nimport Grow from '../../static/grow.png'\nimport Mountain from '../../static/mountain.png'\nimport Excellence from '../../static/excellence.png'\nimport Star from '../../static/star.png'\nimport Dumbbell from '../../static/dumbbell.png'\nimport Piano from '../../static/piano.png'\n\nimport { ExpMessage } from './LEVEL.container'\nimport { LEVELelement } from './LEVEL.element'\n\ninterface IProps {\n  setHide(hide: boolean): void\n}\n\nexport const LEVELinfo: React.FC<IProps> = ({ setHide }) => {\n  const [hover, setHover] = useState(false)\n  // const [hover2, setHover2] = useState(true)\n\n  const achievements: [title: string, image: any, award: number][] = [\n    [ExpMessage.Practice, Grow, 1],\n    [ExpMessage.TaskAheadOfYou, Mountain, 2],\n    [ExpMessage.HardWorker, Dumbbell, 3],\n    [ExpMessage.MaraphonRunner, Maraphon, 4],\n\n    [ExpMessage.FastFingers, Lightning, 3],\n    [ExpMessage.FastAndFurious, FastAndFurious, 4],\n    [ExpMessage.WayTooFast, Rocket, 5],\n\n    [ExpMessage.Marksman, Marksman, 2],\n    [ExpMessage.TheBullsEye, BullsEye, 3],\n    [ExpMessage.AccurateAsStephCurry, Steph, 5],\n\n    [ExpMessage.FastRun, Run2, 3],\n    [ExpMessage.FastAndPerfectRace, Run, 5],\n\n    [ExpMessage.NotAverage, Star, 2],\n    [ExpMessage.Excellence, Excellence, 3],\n    [ExpMessage.TopSkills, Award, 4],\n\n    [ExpMessage.Pianist, Piano, 3],\n    [ExpMessage.AbsoluteMaster, Cup, 5],\n  ]\n\n  useEffect(() => {\n    setHide(false)\n    if (hover) {\n      setHide(true)\n    }\n  }, [hover])\n\n  const elements = (from: number, to: number, width: number | string) =>\n    achievements\n      .splice(from, to)\n      .map((el, i) => (\n        <LEVELelement title={el[0]} image={el[1]} award={el[2]} width={width} />\n      ))\n\n  let hr = (\n    <div\n      className={`w-f bg-gray-800 mx-4 rounded-full`}\n      style={{ height: 1 }}\n    />\n  )\n  let title = (title: string) => (\n    <div\n      className={`text-center text-lg bg-red-300 px-2`}\n\n      //bg-gradient-to-r from-red-200 via-red-300 to-red-200\n    >\n      {title}\n    </div>\n  )\n\n  return (\n    <>\n      <div\n        className={`z-20 rounded-xl border border-gray-800 font-courier text-3xl flex items-center justify-center hover:bg-red-200 shadow-3xl shadow-red-300/75 hover:shadow-red-500/75`}\n        style={{\n          height: 40,\n          width: 42,\n          transition: '0.15s ease-in-out',\n        }}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        ?\n      </div>\n      {hover && (\n        <div\n          className={`absolute bg-red-200 w-f border border-gray-800 rounded-xl flex flex-wrap items-start justify-between  text-sm overflow-hidden`}\n          style={{\n            transform: `translate(-6px, 55px)`,\n            opacity: 0.985,\n            width: 1040,\n            // width: 287,\n            // height: 700,\n          }}\n        >\n          <div className={`flex flex-col w-f py-2`}>\n            {title(`Volume Of Work`)}\n            <div className={`flex flex-wrap pt-1 px-1`}>\n              {elements(0, 4, `50%`)}\n            </div>\n          </div>\n          {hr}\n          <div className={`flex flex-col w-f py-2`}>\n            {title(`Speed`)}\n\n            <div className={`flex flex-wrap pt-1 px-1`}>\n              {' '}\n              {elements(0, 3, `50%`)}\n            </div>\n          </div>\n          {hr}{' '}\n          <div className={`flex flex-col w-f py-2`}>\n            {title(`Row With No Errors`)}\n\n            <div className={`flex flex-wrap pt-1 px-1`}>\n              {elements(0, 3, `50%`)}{' '}\n            </div>\n          </div>\n          {hr}{' '}\n          <div className={`flex flex-col w-f py-2`}>\n            {title(`Speed Row With No Errors`)}\n\n            <div className={`flex flex-wrap pt-1 px-1`}>\n              {elements(0, 2, `50%`)}{' '}\n            </div>\n          </div>\n          {hr}{' '}\n          <div className={`flex flex-col w-f py-2`}>\n            {title(`Average Accuracy`)}\n\n            <div className={`flex flex-wrap pt-1 px-1`}>\n              {elements(0, 3, `50%`)}{' '}\n            </div>\n          </div>\n          {hr}{' '}\n          <div className={`flex flex-col w-f py-2`}>\n            {title(`Average Speed And Accuracy`)}\n\n            <div className={`flex flex-wrap pt-1 px-1`}>\n              {elements(0, 2, `50%`)}{' '}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.element.tsx",["641","642"],"import React, { useState } from 'react'\nimport star from '../../static/awardstar.svg'\n\ninterface IProps {\n  image: any\n  title: string\n  description?: string | null\n  width: number | string\n  award: number\n}\n\nexport const LEVELelement: React.FC<IProps> = ({\n  image,\n  title,\n  width,\n  award,\n}) => {\n  const [hover, setHover] = useState(false)\n\n  return (\n    <div\n      className={`  borde border-gray-800 `}\n      style={{ margin: '4px 0', flex: width }}\n    >\n      <div className={`flex gap-4 flex-nowrap items-start `}>\n        <img\n          src={image}\n          className={`border border-gray-800 bg-red-100 rounded-lg p-1 shadow-6th shadow-red-300  ${\n            hover && `shadow-3xl shadow-red-500`\n          }\n       `}\n          style={{\n            transform: `translateY(${hover ? -2 : 0}px)`,\n            transition: '0.2s ease',\n            height: 40,\n            width: 40,\n          }}\n          onMouseEnter={() => setHover(true)}\n          onMouseLeave={() => setHover(false)}\n        />\n        <div\n          className={`flex flex-col `}\n          style={{\n            transition: '0.2s ease',\n            // height: 40,\n            // width: 40,\n          }}\n        >\n          <div className={`font-medium whitespace-nowrap text-md`}>{title}</div>\n          <div className={`invisibl flex `} style={{}}>\n            {Array.from({ length: award }, (el) => true).map((el) => (\n              <img src={star} style={{ width: 12, height: 12 }} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.meter.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.overall.widget.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/BOOK.physical.meter.tsx",["643","644"],"import React, { useEffect, useState } from 'react'\nimport { useDidMountEffect } from '../../../../utils/useDidMountEffect'\nimport { BOOKmeter2 } from './BOOK.meter'\n\ninterface IProps {\n  mileage: number\n  start?: boolean\n  starting?: number\n  red?: boolean\n}\n\nexport const BOOKphysicalmeter: React.FC<IProps> = ({\n  mileage,\n  start = false,\n  starting = 1043,\n  red = false,\n}) => {\n  const [changer, setChanger] = useState(0)\n\n  useEffect(() => {\n    if (start) {\n      for (let i = 0; i < starting; i++) {\n        setTimeout(() => {\n          setChanger((prev) => prev + 1)\n        }, i * 2)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (start) {\n      return\n    }\n    for (let i = 0; i < mileage; i++) {\n      setTimeout(() => {\n        setChanger((prev) => prev + 1)\n      }, i * 2)\n    }\n  }, [])\n\n  useDidMountEffect(() => {\n    setChanger((prev) => prev + 1)\n  }, [mileage])\n  if (red) {\n    return (\n      <div className={`flex`}>\n        <BOOKmeter2 changer={changer} multiple={0.01} red />\n        <BOOKmeter2 changer={changer} multiple={0.1} red />\n        <BOOKmeter2 changer={changer} multiple={1} red />\n      </div>\n    )\n  }\n\n  return (\n    <div className={`flex`}>\n      <BOOKmeter2 changer={changer} multiple={0.00001} />\n      <BOOKmeter2 changer={changer} multiple={0.0001} />\n      <BOOKmeter2 changer={changer} multiple={0.001} />\n      <BOOKmeter2 changer={changer} multiple={0.01} />\n      <BOOKmeter2 changer={changer} multiple={0.1} />\n      <BOOKmeter2 changer={changer} multiple={1} />\n    </div>\n  )\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.electronic.meter.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/book-redone/components/stats/B.stats.error.widget.tsx",[],"/Users/skywalker/Web/testclone/KBRD/client/src/components/leveling/LEVEL.recorder.tsx",["645"],"import React, { useEffect } from 'react'\nimport { useAuthAction } from '../../hooks/useAction'\nimport { useTypedSelector } from '../../hooks/useTypedSelector'\nimport { useDidMountEffect } from '../../utils/useDidMountEffect'\n\ninterface IProps {\n  level: number\n  setLevel(level: number): void\n  exp: [number, number]\n  handleExp: (value: number) => void\n}\n\nexport const LEVELrecorder: React.FC<IProps> = ({\n  level,\n  setLevel,\n  exp,\n  handleExp,\n}) => {\n  const loggedInUser = useTypedSelector((state) => state.auth.user)\n\n  const { changeExp, changeLvl } = useAuthAction()\n\n  useEffect(() => {\n    if (loggedInUser) {\n      setLevel(loggedInUser.book.level)\n      setTimeout(() => handleExp(loggedInUser.book.exp), 1000)\n    }\n  }, [loggedInUser])\n\n  useDidMountEffect(() => {\n    if (loggedInUser) {\n      changeLvl(level)\n    }\n  }, [level])\n\n  useDidMountEffect(() => {\n    if (loggedInUser) {\n      changeExp(exp[0])\n    }\n  }, [exp])\n\n  return <>{/* <div onMouseDown={() => handleExp(500)}>TEST</div> */}</>\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/hooks/auth.hook.ts",["646"],"import { useState, useCallback, useEffect } from 'react'\n\nconst storageName = `userData`\n\nexport const useAuth = () => {\n  const [token, setToken] = useState<null | string>(null)\n  const [ready, setReady] = useState(false)\n  const [userId, setUserId] = useState<null | string>(null)\n\n  const login = useCallback((jwtToken, id) => {\n    setToken(jwtToken)\n    setUserId(id)\n    localStorage.setItem(\n      storageName,\n      JSON.stringify({\n        userId: id,\n        token: jwtToken,\n      })\n    )\n  }, [])\n\n  const logout = useCallback(() => {\n    setToken(null)\n    setUserId(null)\n    localStorage.removeItem(storageName)\n  }, [])\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(storageName) as string)\n\n    if (data && data.token) {\n      login(data.token, data.userId)\n    }\n    setReady(true)\n  }, [login])\n\n  return { login, logout, token, userId }\n}\n","/Users/skywalker/Web/testclone/KBRD/client/src/context/AuthContext.ts",[],{"ruleId":"647","replacedBy":"648"},{"ruleId":"649","replacedBy":"650"},{"ruleId":"651","severity":1,"message":"652","line":16,"column":25,"nodeType":"653","messageId":"654","endLine":16,"endColumn":37},{"ruleId":"655","severity":1,"message":"656","line":53,"column":6,"nodeType":"657","endLine":53,"endColumn":15,"suggestions":"658"},{"ruleId":"651","severity":1,"message":"659","line":61,"column":9,"nodeType":"653","messageId":"654","endLine":61,"endColumn":18},{"ruleId":"651","severity":1,"message":"660","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":26},{"ruleId":"651","severity":1,"message":"661","line":1,"column":28,"nodeType":"653","messageId":"654","endLine":1,"endColumn":36},{"ruleId":"655","severity":1,"message":"662","line":155,"column":6,"nodeType":"657","endLine":155,"endColumn":24,"suggestions":"663"},{"ruleId":"655","severity":1,"message":"664","line":164,"column":6,"nodeType":"657","endLine":164,"endColumn":8,"suggestions":"665"},{"ruleId":"666","severity":1,"message":"667","line":7,"column":34,"nodeType":"668","messageId":"669","endLine":7,"endColumn":36},{"ruleId":"670","severity":1,"message":"671","line":49,"column":9,"nodeType":"672","endLine":49,"endColumn":12},{"ruleId":"673","severity":1,"message":"674","line":50,"column":9,"nodeType":"672","endLine":50,"endColumn":36},{"ruleId":"670","severity":1,"message":"671","line":50,"column":9,"nodeType":"672","endLine":50,"endColumn":36},{"ruleId":"670","severity":1,"message":"671","line":51,"column":9,"nodeType":"672","endLine":51,"endColumn":12},{"ruleId":"675","severity":1,"message":"676","line":53,"column":9,"nodeType":"672","messageId":"677","endLine":57,"endColumn":10,"fix":"678"},{"ruleId":"666","severity":1,"message":"667","line":6,"column":36,"nodeType":"668","messageId":"669","endLine":6,"endColumn":38},{"ruleId":"679","severity":1,"message":"680","line":96,"column":43,"nodeType":"681","messageId":"669","endLine":96,"endColumn":45},{"ruleId":"682","severity":1,"message":"683","line":99,"column":45,"nodeType":"684","messageId":"685","endLine":99,"endColumn":47},{"ruleId":"651","severity":1,"message":"686","line":11,"column":10,"nodeType":"653","messageId":"654","endLine":11,"endColumn":19},{"ruleId":"651","severity":1,"message":"687","line":14,"column":22,"nodeType":"653","messageId":"654","endLine":14,"endColumn":29},{"ruleId":"651","severity":1,"message":"688","line":19,"column":10,"nodeType":"653","messageId":"654","endLine":19,"endColumn":24},{"ruleId":"655","severity":1,"message":"689","line":149,"column":6,"nodeType":"657","endLine":149,"endColumn":15,"suggestions":"690"},{"ruleId":"651","severity":1,"message":"691","line":1,"column":38,"nodeType":"653","messageId":"654","endLine":1,"endColumn":44},{"ruleId":"651","severity":1,"message":"692","line":2,"column":8,"nodeType":"653","messageId":"654","endLine":2,"endColumn":15},{"ruleId":"651","severity":1,"message":"693","line":3,"column":8,"nodeType":"653","messageId":"654","endLine":3,"endColumn":12},{"ruleId":"651","severity":1,"message":"694","line":5,"column":10,"nodeType":"653","messageId":"654","endLine":5,"endColumn":15},{"ruleId":"651","severity":1,"message":"695","line":6,"column":10,"nodeType":"653","messageId":"654","endLine":6,"endColumn":16},{"ruleId":"651","severity":1,"message":"696","line":13,"column":10,"nodeType":"653","messageId":"654","endLine":13,"endColumn":24},{"ruleId":"651","severity":1,"message":"697","line":30,"column":11,"nodeType":"653","messageId":"654","endLine":30,"endColumn":20},{"ruleId":"651","severity":1,"message":"698","line":30,"column":22,"nodeType":"653","messageId":"654","endLine":30,"endColumn":32},{"ruleId":"655","severity":1,"message":"699","line":39,"column":6,"nodeType":"657","endLine":39,"endColumn":22,"suggestions":"700"},{"ruleId":"655","severity":1,"message":"699","line":45,"column":6,"nodeType":"657","endLine":45,"endColumn":23,"suggestions":"701"},{"ruleId":"670","severity":1,"message":"671","line":125,"column":13,"nodeType":"672","endLine":125,"endColumn":75},{"ruleId":"651","severity":1,"message":"660","line":1,"column":27,"nodeType":"653","messageId":"654","endLine":1,"endColumn":36},{"ruleId":"651","severity":1,"message":"702","line":3,"column":10,"nodeType":"653","messageId":"654","endLine":3,"endColumn":18},{"ruleId":"651","severity":1,"message":"703","line":4,"column":10,"nodeType":"653","messageId":"654","endLine":4,"endColumn":27},{"ruleId":"651","severity":1,"message":"704","line":9,"column":10,"nodeType":"653","messageId":"654","endLine":9,"endColumn":16},{"ruleId":"651","severity":1,"message":"705","line":9,"column":18,"nodeType":"653","messageId":"654","endLine":9,"endColumn":27},{"ruleId":"651","severity":1,"message":"706","line":25,"column":9,"nodeType":"653","messageId":"654","endLine":25,"endColumn":14},{"ruleId":"651","severity":1,"message":"660","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":26},{"ruleId":"651","severity":1,"message":"703","line":5,"column":10,"nodeType":"653","messageId":"654","endLine":5,"endColumn":27},{"ruleId":"651","severity":1,"message":"707","line":16,"column":10,"nodeType":"653","messageId":"654","endLine":16,"endColumn":14},{"ruleId":"651","severity":1,"message":"708","line":16,"column":16,"nodeType":"653","messageId":"654","endLine":16,"endColumn":23},{"ruleId":"651","severity":1,"message":"691","line":1,"column":28,"nodeType":"653","messageId":"654","endLine":1,"endColumn":34},{"ruleId":"666","severity":1,"message":"667","line":8,"column":37,"nodeType":"668","messageId":"669","endLine":8,"endColumn":39},{"ruleId":"709","severity":1,"message":"710","line":89,"column":40,"nodeType":"681","messageId":"711","endLine":89,"endColumn":41},{"ruleId":"682","severity":1,"message":"683","line":195,"column":45,"nodeType":"684","messageId":"685","endLine":195,"endColumn":47},{"ruleId":"651","severity":1,"message":"703","line":3,"column":10,"nodeType":"653","messageId":"654","endLine":3,"endColumn":27},{"ruleId":"666","severity":1,"message":"667","line":7,"column":41,"nodeType":"668","messageId":"669","endLine":7,"endColumn":43},{"ruleId":"651","severity":1,"message":"712","line":8,"column":9,"nodeType":"653","messageId":"654","endLine":8,"endColumn":16},{"ruleId":"655","severity":1,"message":"713","line":21,"column":6,"nodeType":"653","endLine":21,"endColumn":10},{"ruleId":"655","severity":1,"message":"714","line":21,"column":6,"nodeType":"653","endLine":21,"endColumn":10,"suggestions":"715"},{"ruleId":"655","severity":1,"message":"716","line":27,"column":6,"nodeType":"657","endLine":27,"endColumn":8,"suggestions":"717"},{"ruleId":"651","severity":1,"message":"691","line":1,"column":38,"nodeType":"653","messageId":"654","endLine":1,"endColumn":44},{"ruleId":"655","severity":1,"message":"718","line":108,"column":6,"nodeType":"657","endLine":108,"endColumn":13,"suggestions":"719"},{"ruleId":"655","severity":1,"message":"720","line":125,"column":6,"nodeType":"657","endLine":125,"endColumn":12,"suggestions":"721"},{"ruleId":"679","severity":1,"message":"680","line":193,"column":36,"nodeType":"681","messageId":"669","endLine":193,"endColumn":38},{"ruleId":"655","severity":1,"message":"722","line":196,"column":6,"nodeType":"657","endLine":196,"endColumn":15,"suggestions":"723"},{"ruleId":"655","severity":1,"message":"724","line":213,"column":6,"nodeType":"657","endLine":213,"endColumn":12,"suggestions":"725"},{"ruleId":"651","severity":1,"message":"660","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":26},{"ruleId":"651","severity":1,"message":"691","line":1,"column":28,"nodeType":"653","messageId":"654","endLine":1,"endColumn":34},{"ruleId":"651","severity":1,"message":"726","line":154,"column":7,"nodeType":"653","messageId":"654","endLine":154,"endColumn":16},{"ruleId":"651","severity":1,"message":"727","line":28,"column":10,"nodeType":"653","messageId":"654","endLine":28,"endColumn":15},{"ruleId":"651","severity":1,"message":"728","line":26,"column":9,"nodeType":"653","messageId":"654","endLine":26,"endColumn":16},{"ruleId":"651","severity":1,"message":"729","line":6,"column":10,"nodeType":"653","messageId":"654","endLine":6,"endColumn":27},{"ruleId":"651","severity":1,"message":"691","line":1,"column":28,"nodeType":"653","messageId":"654","endLine":1,"endColumn":34},{"ruleId":"651","severity":1,"message":"730","line":40,"column":23,"nodeType":"653","messageId":"654","endLine":40,"endColumn":37},{"ruleId":"651","severity":1,"message":"731","line":1,"column":10,"nodeType":"653","messageId":"654","endLine":1,"endColumn":19},{"ruleId":"651","severity":1,"message":"691","line":1,"column":28,"nodeType":"653","messageId":"654","endLine":1,"endColumn":34},{"ruleId":"651","severity":1,"message":"702","line":5,"column":10,"nodeType":"653","messageId":"654","endLine":5,"endColumn":18},{"ruleId":"675","severity":1,"message":"676","line":28,"column":9,"nodeType":"672","messageId":"677","endLine":28,"endColumn":81,"fix":"732"},{"ruleId":"651","severity":1,"message":"702","line":3,"column":10,"nodeType":"653","messageId":"654","endLine":3,"endColumn":18},{"ruleId":"651","severity":1,"message":"733","line":4,"column":10,"nodeType":"653","messageId":"654","endLine":4,"endColumn":26},{"ruleId":"651","severity":1,"message":"734","line":26,"column":5,"nodeType":"653","messageId":"654","endLine":26,"endColumn":9},{"ruleId":"651","severity":1,"message":"660","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":26},{"ruleId":"655","severity":1,"message":"735","line":47,"column":6,"nodeType":"657","endLine":47,"endColumn":8,"suggestions":"736"},{"ruleId":"651","severity":1,"message":"737","line":83,"column":9,"nodeType":"653","messageId":"654","endLine":83,"endColumn":21},{"ruleId":"651","severity":1,"message":"660","line":1,"column":29,"nodeType":"653","messageId":"654","endLine":1,"endColumn":38},{"ruleId":"666","severity":1,"message":"667","line":12,"column":41,"nodeType":"668","messageId":"669","endLine":12,"endColumn":43},{"ruleId":"651","severity":1,"message":"738","line":13,"column":9,"nodeType":"653","messageId":"654","endLine":13,"endColumn":13},{"ruleId":"651","severity":1,"message":"739","line":6,"column":10,"nodeType":"653","messageId":"654","endLine":6,"endColumn":19},{"ruleId":"655","severity":1,"message":"740","line":60,"column":6,"nodeType":"657","endLine":60,"endColumn":8,"suggestions":"741"},{"ruleId":"666","severity":1,"message":"667","line":9,"column":47,"nodeType":"668","messageId":"669","endLine":9,"endColumn":49},{"ruleId":"651","severity":1,"message":"742","line":22,"column":36,"nodeType":"653","messageId":"654","endLine":22,"endColumn":46},{"ruleId":"651","severity":1,"message":"743","line":114,"column":11,"nodeType":"653","messageId":"654","endLine":114,"endColumn":17},{"ruleId":"651","severity":1,"message":"698","line":114,"column":19,"nodeType":"653","messageId":"654","endLine":114,"endColumn":29},{"ruleId":"651","severity":1,"message":"744","line":145,"column":13,"nodeType":"653","messageId":"654","endLine":145,"endColumn":17},{"ruleId":"651","severity":1,"message":"698","line":21,"column":11,"nodeType":"653","messageId":"654","endLine":21,"endColumn":21},{"ruleId":"651","severity":1,"message":"745","line":23,"column":11,"nodeType":"653","messageId":"654","endLine":23,"endColumn":18},{"ruleId":"651","severity":1,"message":"746","line":23,"column":29,"nodeType":"653","messageId":"654","endLine":23,"endColumn":34},{"ruleId":"651","severity":1,"message":"742","line":23,"column":36,"nodeType":"653","messageId":"654","endLine":23,"endColumn":46},{"ruleId":"651","severity":1,"message":"747","line":28,"column":11,"nodeType":"653","messageId":"654","endLine":28,"endColumn":19},{"ruleId":"655","severity":1,"message":"748","line":56,"column":6,"nodeType":"657","endLine":56,"endColumn":8,"suggestions":"749"},{"ruleId":"750","severity":1,"message":"751","line":7,"column":18,"nodeType":"684","messageId":"752","endLine":7,"endColumn":37},{"ruleId":"655","severity":1,"message":"753","line":68,"column":6,"nodeType":"657","endLine":68,"endColumn":8,"suggestions":"754"},{"ruleId":"651","severity":1,"message":"661","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":25},{"ruleId":"651","severity":1,"message":"661","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":25},{"ruleId":"655","severity":1,"message":"755","line":18,"column":6,"nodeType":"657","endLine":18,"endColumn":16,"suggestions":"756"},{"ruleId":"757","severity":1,"message":"758","line":20,"column":10,"nodeType":"672","endLine":20,"endColumn":14},{"ruleId":"651","severity":1,"message":"660","line":1,"column":27,"nodeType":"653","messageId":"654","endLine":1,"endColumn":36},{"ruleId":"679","severity":1,"message":"680","line":68,"column":17,"nodeType":"681","messageId":"669","endLine":68,"endColumn":19},{"ruleId":"655","severity":1,"message":"759","line":41,"column":6,"nodeType":"657","endLine":41,"endColumn":15,"suggestions":"760"},{"ruleId":"651","severity":1,"message":"731","line":2,"column":10,"nodeType":"653","messageId":"654","endLine":2,"endColumn":19},{"ruleId":"655","severity":1,"message":"761","line":59,"column":6,"nodeType":"657","endLine":59,"endColumn":8,"suggestions":"762"},{"ruleId":"651","severity":1,"message":"763","line":3,"column":10,"nodeType":"653","messageId":"654","endLine":3,"endColumn":19},{"ruleId":"655","severity":1,"message":"764","line":73,"column":6,"nodeType":"657","endLine":73,"endColumn":13,"suggestions":"765"},{"ruleId":"651","severity":1,"message":"660","line":2,"column":17,"nodeType":"653","messageId":"654","endLine":2,"endColumn":26},{"ruleId":"651","severity":1,"message":"691","line":2,"column":28,"nodeType":"653","messageId":"654","endLine":2,"endColumn":34},{"ruleId":"651","severity":1,"message":"660","line":2,"column":17,"nodeType":"653","messageId":"654","endLine":2,"endColumn":26},{"ruleId":"651","severity":1,"message":"691","line":2,"column":28,"nodeType":"653","messageId":"654","endLine":2,"endColumn":34},{"ruleId":"651","severity":1,"message":"703","line":4,"column":10,"nodeType":"653","messageId":"654","endLine":4,"endColumn":27},{"ruleId":"651","severity":1,"message":"766","line":2,"column":10,"nodeType":"653","messageId":"654","endLine":2,"endColumn":25},{"ruleId":"651","severity":1,"message":"661","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":25},{"ruleId":"651","severity":1,"message":"691","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":23},{"ruleId":"651","severity":1,"message":"660","line":1,"column":35,"nodeType":"653","messageId":"654","endLine":1,"endColumn":44},{"ruleId":"670","severity":1,"message":"671","line":33,"column":7,"nodeType":"672","endLine":42,"endColumn":8},{"ruleId":"651","severity":1,"message":"767","line":105,"column":9,"nodeType":"653","messageId":"654","endLine":105,"endColumn":14},{"ruleId":"651","severity":1,"message":"768","line":2,"column":10,"nodeType":"653","messageId":"654","endLine":2,"endColumn":16},{"ruleId":"651","severity":1,"message":"769","line":2,"column":18,"nodeType":"653","messageId":"654","endLine":2,"endColumn":24},{"ruleId":"651","severity":1,"message":"770","line":4,"column":10,"nodeType":"653","messageId":"654","endLine":4,"endColumn":24},{"ruleId":"651","severity":1,"message":"771","line":6,"column":10,"nodeType":"653","messageId":"654","endLine":6,"endColumn":20},{"ruleId":"651","severity":1,"message":"660","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":26},{"ruleId":"651","severity":1,"message":"660","line":1,"column":27,"nodeType":"653","messageId":"654","endLine":1,"endColumn":36},{"ruleId":"651","severity":1,"message":"660","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":26},{"ruleId":"651","severity":1,"message":"772","line":2,"column":20,"nodeType":"653","messageId":"654","endLine":2,"endColumn":27},{"ruleId":"651","severity":1,"message":"661","line":1,"column":17,"nodeType":"653","messageId":"654","endLine":1,"endColumn":25},{"ruleId":"651","severity":1,"message":"773","line":1,"column":10,"nodeType":"653","messageId":"654","endLine":1,"endColumn":20},{"ruleId":"651","severity":1,"message":"691","line":2,"column":38,"nodeType":"653","messageId":"654","endLine":2,"endColumn":44},{"ruleId":"651","severity":1,"message":"774","line":1,"column":10,"nodeType":"653","messageId":"654","endLine":1,"endColumn":14},{"ruleId":"651","severity":1,"message":"775","line":1,"column":16,"nodeType":"653","messageId":"654","endLine":1,"endColumn":27},{"ruleId":"651","severity":1,"message":"776","line":1,"column":29,"nodeType":"653","messageId":"654","endLine":1,"endColumn":43},{"ruleId":"666","severity":1,"message":"667","line":7,"column":50,"nodeType":"668","messageId":"669","endLine":7,"endColumn":52},{"ruleId":"651","severity":1,"message":"777","line":9,"column":10,"nodeType":"653","messageId":"654","endLine":9,"endColumn":19},{"ruleId":"778","severity":1,"message":"779","line":164,"column":11,"nodeType":"672","endLine":164,"endColumn":33},{"ruleId":"670","severity":1,"message":"671","line":33,"column":7,"nodeType":"672","endLine":42,"endColumn":8},{"ruleId":"655","severity":1,"message":"780","line":61,"column":6,"nodeType":"657","endLine":61,"endColumn":13,"suggestions":"781"},{"ruleId":"778","severity":1,"message":"779","line":26,"column":9,"nodeType":"672","endLine":40,"endColumn":11},{"ruleId":"778","severity":1,"message":"779","line":52,"column":15,"nodeType":"672","endLine":52,"endColumn":67},{"ruleId":"655","severity":1,"message":"782","line":28,"column":6,"nodeType":"657","endLine":28,"endColumn":8,"suggestions":"783"},{"ruleId":"655","severity":1,"message":"784","line":39,"column":6,"nodeType":"657","endLine":39,"endColumn":8,"suggestions":"785"},{"ruleId":"655","severity":1,"message":"786","line":28,"column":6,"nodeType":"657","endLine":28,"endColumn":20,"suggestions":"787"},{"ruleId":"651","severity":1,"message":"788","line":7,"column":10,"nodeType":"653","messageId":"654","endLine":7,"endColumn":15},"no-native-reassign",["789"],"no-negated-in-lhs",["790"],"@typescript-eslint/no-unused-vars","'useNavAction' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'block' and 'changeCurrentChapter'. Either include them or remove the dependency array.","ArrayExpression",["791"],"'isLoading' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'handleMission'. Either include it or remove the dependency array.",["792"],"React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.",["793"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"794","text":"795"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","array-callback-return","Array.from() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'BOOKframe' is defined but never used.","'shuffle' is defined but never used.","'LEVELcontainer' is defined but never used.","React Hook useEffect has missing dependencies: 'FAILURE', 'STRING', and 'capsKey'. Either include them or remove the dependency array.",["796"],"'useRef' is defined but never used.","'SAMURAI' is defined but never used.","'TEST' is defined but never used.","'ALeft' is defined but never used.","'ARight' is defined but never used.","'HexagonRounded' is defined but never used.","'setOpenOn' is assigned a value but never used.","'setOpenOff' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'changeLink'. Either include it or remove the dependency array.",["797"],["798"],"'FadeText' is defined but never used.","'useDidMountEffect' is defined but never used.","'appear' is assigned a value but never used.","'setAppear' is assigned a value but never used.","'lorem' is assigned a value but never used.","'load' is assigned a value but never used.","'setLoad' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'chapter' is assigned a value but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'func'. Either include it or remove the dependency array. If 'func' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["799"],"React Hook useEffect has missing dependencies: 'downHandler' and 'upHandler'. Either include them or remove the dependency array.",["800"],"React Hook useEffect has a missing dependency: 'cells'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFuse' needs the current value of 'cells'.",["801"],"React Hook useEffect has missing dependencies: 'handleOpenModal' and 'limit'. Either include them or remove the dependency array.",["802"],"React Hook useEffect has missing dependencies: 'alphabet', 'cells', 'running', and 'started'. Either include them or remove the dependency array.",["803"],"React Hook useEffect has missing dependencies: 'intervalPush', 'pushCell', and 'running'. Either include them or remove the dependency array.",["804"],"'forbidden' is assigned a value but never used.","'timer' is assigned a value but never used.","'filling' is assigned a value but never used.","'BOOKstatsRecorder' is defined but never used.","'setExtraAppear' is assigned a value but never used.","'getRandom' is defined but never used.",{"range":"805","text":"795"},"'BOOKbuttonVisual' is defined but never used.","'test' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'queue'. Either include it or remove the dependency array.",["806"],"'definedColor' is assigned a value but never used.","'user' is assigned a value but never used.","'yellow600' is defined but never used.","React Hook useEffect has a missing dependency: 'chapter'. Either include it or remove the dependency array.",["807"],"'clearError' is assigned a value but never used.","'signUp' is assigned a value but never used.","'data' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleTimeout'. Either include it or remove the dependency array.",["808"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'a'.","unsafeRefs","React Hook useEffect has missing dependencies: 'del' and 'symbol'. Either include them or remove the dependency array. If 'setCurrentSymbol' needs the current value of 'symbol', you can also switch to useReducer instead of useState and read 'symbol' in the reducer.",["809"],"React Hook useEffect has a missing dependency: 'handleTick'. Either include it or remove the dependency array. If 'handleTick' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["810"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","React Hook useEffect has a missing dependency: 'cells'. Either include it or remove the dependency array.",["811"],"React Hook useEffect has a missing dependency: 'calcDelay'. Either include it or remove the dependency array.",["812"],"'LEVELinfo' is defined but never used.","React Hook useEffect has a missing dependency: 'levels'. Either include it or remove the dependency array.",["813"],"'BOOKarrowButton' is defined but never used.","'users' is assigned a value but never used.","'Button' is defined but never used.","'Hidden' is defined but never used.","'PhotoMiniature' is defined but never used.","'setOpenOff' is defined but never used.","'KeyType' is defined but never used.","'fontWeight' is defined but never used.","'Info' is defined but never used.","'InfoRounded' is defined but never used.","'WarningRounded' is defined but never used.","'refresher' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'setHide'. Either include it or remove the dependency array. If 'setHide' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["814"],"React Hook useEffect has missing dependencies: 'start' and 'starting'. Either include them or remove the dependency array.",["815"],"React Hook useEffect has missing dependencies: 'mileage' and 'start'. Either include them or remove the dependency array.",["816"],"React Hook useEffect has missing dependencies: 'handleExp' and 'setLevel'. Either include them or remove the dependency array. If 'setLevel' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["817"],"'ready' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"818","fix":"819"},{"desc":"820","fix":"821"},{"desc":"822","fix":"823"},[1711,1711]," rel=\"noreferrer\"",{"desc":"824","fix":"825"},{"desc":"826","fix":"827"},{"desc":"828","fix":"829"},{"desc":"830","fix":"831"},{"desc":"832","fix":"833"},{"desc":"834","fix":"835"},{"desc":"836","fix":"837"},{"desc":"838","fix":"839"},{"desc":"840","fix":"841"},[873,873],{"desc":"842","fix":"843"},{"desc":"844","fix":"845"},{"desc":"846","fix":"847"},{"desc":"848","fix":"849"},{"desc":"850","fix":"851"},{"desc":"852","fix":"853"},{"desc":"854","fix":"855"},{"desc":"856","fix":"857"},{"desc":"858","fix":"859"},{"desc":"860","fix":"861"},{"desc":"862","fix":"863"},{"desc":"864","fix":"865"},"Update the dependencies array to be: [block, changeCurrentChapter, chapter]",{"range":"866","text":"867"},"Update the dependencies array to be: [handleMission, windowDimensions]",{"range":"868","text":"869"},"Update the dependencies array to be: [handleResize]",{"range":"870","text":"871"},"Update the dependencies array to be: [FAILURE, STRING, capsKey, keyDown]",{"range":"872","text":"873"},"Update the dependencies array to be: [changeLink, leftArrowClick]",{"range":"874","text":"875"},"Update the dependencies array to be: [changeLink, rightArrowClick]",{"range":"876","text":"877"},"Update the dependencies array to be: [func]",{"range":"878","text":"879"},"Update the dependencies array to be: [downHandler, upHandler]",{"range":"880","text":"881"},"Update the dependencies array to be: [cells, limit]",{"range":"882","text":"883"},"Update the dependencies array to be: [fuse, handleOpenModal, limit]",{"range":"884","text":"885"},"Update the dependencies array to be: [alphabet, cells, lastKey, running, started]",{"range":"886","text":"887"},"Update the dependencies array to be: [intervalPush, pushCell, running, tick]",{"range":"888","text":"889"},"Update the dependencies array to be: [queue]",{"range":"890","text":"891"},"Update the dependencies array to be: [chapter]",{"range":"892","text":"893"},"Update the dependencies array to be: [handleTimeout]",{"range":"894","text":"895"},"Update the dependencies array to be: [del, symbol]",{"range":"896","text":"897"},"Update the dependencies array to be: [handleTick, interval]",{"range":"898","text":"899"},"Update the dependencies array to be: [cells, running]",{"range":"900","text":"901"},"Update the dependencies array to be: [calcDelay]",{"range":"902","text":"903"},"Update the dependencies array to be: [level, levels]",{"range":"904","text":"905"},"Update the dependencies array to be: [hover, setHide]",{"range":"906","text":"907"},"Update the dependencies array to be: [start, starting]",{"range":"908","text":"909"},"Update the dependencies array to be: [mileage, start]",{"range":"910","text":"911"},"Update the dependencies array to be: [handleExp, loggedInUser, setLevel]",{"range":"912","text":"913"},[1965,1974],"[block, changeCurrentChapter, chapter]",[3918,3936],"[handleMission, windowDimensions]",[4164,4166],"[handleResize]",[4169,4178],"[FAILURE, STRING, capsKey, keyDown]",[1531,1547],"[changeLink, leftArrowClick]",[1648,1665],"[changeLink, rightArrowClick]",[516,520],"[func]",[701,703],"[downHandler, upHandler]",[3044,3051],"[cells, limit]",[3370,3376],"[fuse, handleOpenModal, limit]",[5128,5137],"[alphabet, cells, lastKey, running, started]",[5444,5450],"[intervalPush, pushCell, running, tick]",[1195,1197],"[queue]",[1513,1515],"[chapter]",[1464,1466],"[handleTimeout]",[1315,1317],"[del, symbol]",[332,342],"[handleTick, interval]",[900,909],"[cells, running]",[1120,1122],"[calcDelay]",[1788,1795],"[level, levels]",[2014,2021],"[hover, setHide]",[614,616],"[start, starting]",[806,808],"[mileage, start]",[735,749],"[handleExp, loggedInUser, setLevel]"]